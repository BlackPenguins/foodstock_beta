diff --git a/.idea/dataSources/c74e7513-7159-4a3e-ba00-672d8e5d2c0b.xml b/.idea/dataSources/c74e7513-7159-4a3e-ba00-672d8e5d2c0b.xml
index 85d71e7..7cc38fb 100644
--- a/.idea/dataSources/c74e7513-7159-4a3e-ba00-672d8e5d2c0b.xml
+++ b/.idea/dataSources/c74e7513-7159-4a3e-ba00-672d8e5d2c0b.xml
@@ -49,7 +49,6 @@
     </column>
     <index id="24" parent="6" name="Audit_AuditID_uindex">
       <ColNames>AuditID</ColNames>
-      <ColumnCollations></ColumnCollations>
       <Unique>1</Unique>
     </index>
     <key id="25" parent="6" name="Audit_pk">
@@ -110,7 +109,6 @@
     <index id="38" parent="7" name="sqlite_autoindex_Daily_Amount_1">
       <NameSurrogate>1</NameSurrogate>
       <ColNames>ID</ColNames>
-      <ColumnCollations></ColumnCollations>
       <Unique>1</Unique>
     </index>
     <key id="39" parent="7">
@@ -329,7 +327,6 @@
     <index id="90" parent="11" name="sqlite_autoindex_Payments_1">
       <NameSurrogate>1</NameSurrogate>
       <ColNames>PaymentID</ColNames>
-      <ColumnCollations></ColumnCollations>
       <Unique>1</Unique>
     </index>
     <key id="91" parent="11">
@@ -383,7 +380,6 @@
     <index id="102" parent="12" name="sqlite_autoindex_Purchase_History_1">
       <NameSurrogate>1</NameSurrogate>
       <ColNames>ID</ColNames>
-      <ColumnCollations></ColumnCollations>
       <Unique>1</Unique>
     </index>
     <key id="103" parent="12">
@@ -466,7 +462,6 @@
     <index id="121" parent="14" name="sqlite_autoindex_Restock_1">
       <NameSurrogate>1</NameSurrogate>
       <ColNames>RestockID</ColNames>
-      <ColumnCollations></ColumnCollations>
       <Unique>1</Unique>
     </index>
     <key id="122" parent="14">
@@ -571,7 +566,6 @@
     <index id="146" parent="16" name="sqlite_autoindex_User_1">
       <NameSurrogate>1</NameSurrogate>
       <ColNames>UserName</ColNames>
-      <ColumnCollations></ColumnCollations>
       <Unique>1</Unique>
     </index>
     <key id="147" parent="16">
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
index 192c7e7..9b56ea7 100644
--- a/.idea/inspectionProfiles/Project_Default.xml
+++ b/.idea/inspectionProfiles/Project_Default.xml
@@ -3,6 +3,8 @@
     <option name="myName" value="Project Default" />
     <inspection_tool class="PhpUndefinedFieldInspection" enabled="true" level="ERROR" enabled_by_default="true" />
     <inspection_tool class="PhpUndefinedMethodInspection" enabled="true" level="ERROR" enabled_by_default="true" />
-    <inspection_tool class="PhpUndefinedVariableInspection" enabled="true" level="ERROR" enabled_by_default="true" />
+    <inspection_tool class="PhpUndefinedVariableInspection" enabled="true" level="ERROR" enabled_by_default="true">
+      <option name="IGNORE_INCLUDE" value="false" />
+    </inspection_tool>
   </profile>
 </component>
\ No newline at end of file
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
index d00a26a..d9a16a8 100644
--- a/.idea/workspace.xml
+++ b/.idea/workspace.xml
@@ -2,32 +2,53 @@
 <project version="4">
   <component name="ChangeListManager">
     <list default="true" id="689aff09-6fde-4fe3-8395-18d5bd8ab907" name="Default Changelist" comment="">
+      <change afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/admin_x25/admin_items_in_stock_x25.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/common/AuditDetails.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/common/Item.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/common/ItemCostDetails.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/common/Testing.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/common/TestingBase.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/common/User.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/functions/action_functions.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/functions/quantity_functions.php" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/lunch/lunch_index.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/dataSources/c74e7513-7159-4a3e-ba00-672d8e5d2c0b.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/c74e7513-7159-4a3e-ba00-672d8e5d2c0b.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_audit_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_audit_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_checklist_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_checklist_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_defectives_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_defectives_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_inventory_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_inventory_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_items_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_items_x25.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/admin_x25/admin_migration_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_migration_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_nav_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_nav_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_payments_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_payments_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_restock_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_restock_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_shopping_guide_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_shopping_guide_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_testing_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_testing_x25.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/admin_x25/admin_weekly_audit_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_weekly_audit_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/admin_x25.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/admin_x25.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/admin_x25/build_admin_forms.php" beforeDir="false" afterPath="$PROJECT_DIR$/admin_x25/build_admin_forms.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/appendix.php" beforeDir="false" afterPath="$PROJECT_DIR$/appendix.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/common/handle_ajax.php" beforeDir="false" afterPath="$PROJECT_DIR$/common/handle_ajax.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/common/handle_forms.php" beforeDir="false" afterPath="$PROJECT_DIR$/common/handle_forms.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/common/header.php" beforeDir="false" afterPath="$PROJECT_DIR$/common/header.php" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/css/style_11.css" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/css/style_12.css" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/css/style_6_1.css" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/css/style_6_2.css" beforeDir="false" afterPath="$PROJECT_DIR$/css/style_6_3.css" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/css/style_8.css" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/css/style_9.css" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/css/style_6_3.css" beforeDir="false" afterPath="$PROJECT_DIR$/css/style_6_3.css" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/foodstock.php" beforeDir="false" afterPath="$PROJECT_DIR$/foodstock.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/functions/log_functions.php" beforeDir="false" afterPath="$PROJECT_DIR$/functions/log_functions.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/functions/session_functions.php" beforeDir="false" afterPath="$PROJECT_DIR$/functions/session_functions.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/functions/slack_functions.php" beforeDir="false" afterPath="$PROJECT_DIR$/functions/slack_functions.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/functions/ui_functions.php" beforeDir="false" afterPath="$PROJECT_DIR$/functions/ui_functions.php" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/index.php" beforeDir="false" afterPath="$PROJECT_DIR$/index.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/packed_server.zip" beforeDir="false" afterPath="$PROJECT_DIR$/packed_server.zip" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/preferences.php" beforeDir="false" afterPath="$PROJECT_DIR$/preferences.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/purchase_history.php" beforeDir="false" afterPath="$PROJECT_DIR$/purchase_history.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/register.php" beforeDir="false" afterPath="$PROJECT_DIR$/register.php" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/requests.php" beforeDir="false" afterPath="$PROJECT_DIR$/requests.php" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sodastock_home/snackstock.php" beforeDir="false" afterPath="$PROJECT_DIR$/sodastock_home/snackstock.php" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/sodastock_home/sodastock.php" beforeDir="false" afterPath="$PROJECT_DIR$/sodastock_home/sodastock.php" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/scripts/load_modals.js" beforeDir="false" afterPath="$PROJECT_DIR$/scripts/load_modals.js" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/stats.php" beforeDir="false" afterPath="$PROJECT_DIR$/stats.php" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/test_db/item.db" beforeDir="false" afterPath="$PROJECT_DIR$/test_db/item.db" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/test_db/item.db" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/test_db/item_unit_testing" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/test_db/item_unit_testing.db" beforeDir="false" afterPath="$PROJECT_DIR$/test_db/item_unit_testing.db" afterDir="false" />
     </list>
     <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
     <option name="SHOW_DIALOG" value="false" />
@@ -72,11 +93,11 @@
   </component>
   <component name="FileEditorManager">
     <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
-      <file pinned="false" current-in-tab="true">
+      <file pinned="false" current-in-tab="false">
         <entry file="file://$PROJECT_DIR$/foodstock.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="332">
-              <caret line="402" column="288" selection-start-line="402" selection-start-column="288" selection-end-line="402" selection-end-column="288" />
+            <state relative-caret-position="603">
+              <caret line="443" selection-start-line="443" selection-end-line="443" />
               <folding>
                 <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
                 <element signature="e#156#162#1" expanded="true" />
@@ -89,29 +110,26 @@
                 <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#span#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#1;n#span#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#span#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#span#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#span#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#span#0;n#span#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="e#4#10#1" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="e#4#10#1" expanded="true" />
-                <element signature="e#19#25#1" expanded="true" />
-                <element signature="e#34#40#1" expanded="true" />
-                <element signature="e#49#55#1" expanded="true" />
-                <element signature="e#64#70#1" expanded="true" />
-                <element signature="e#79#85#1" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#span#0;n#div#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
                 <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
@@ -127,157 +145,101 @@
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/index.php">
+        <entry file="file://$PROJECT_DIR$/admin_x25/admin_items_x25.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="282">
-              <caret line="22" column="46" selection-start-line="22" selection-start-column="46" selection-end-line="22" selection-end-column="46" />
+            <state relative-caret-position="186">
+              <caret line="37" column="122" selection-start-line="37" selection-start-column="106" selection-end-line="37" selection-end-column="122" />
             </state>
           </provider>
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/common/header.php">
+        <entry file="file://$PROJECT_DIR$/functions/quantity_functions.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="255">
-              <caret line="15" column="29" selection-start-line="15" selection-start-column="29" selection-end-line="15" selection-end-column="29" />
-              <folding>
-                <element signature="n#style#0;n#body#0;n#!!top" expanded="true" />
-              </folding>
+            <state relative-caret-position="230">
+              <caret line="14" column="56" lean-forward="true" selection-start-line="14" selection-start-column="56" selection-end-line="14" selection-end-column="56" />
             </state>
           </provider>
         </entry>
       </file>
-      <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/common/handle_forms.php">
+      <file pinned="false" current-in-tab="true">
+        <entry file="file://$PROJECT_DIR$/admin_x25/admin_migration_x25.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="162">
-              <caret line="738" column="69" selection-start-line="738" selection-start-column="69" selection-end-line="738" selection-end-column="69" />
+            <state relative-caret-position="264">
+              <caret line="40" column="12" selection-start-line="40" selection-start-column="12" selection-end-line="40" selection-end-column="12" />
+              <folding>
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#div#1;n#!!top" expanded="true" />
+              </folding>
             </state>
           </provider>
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/sodastock_home/snackstock.php">
+        <entry file="file://$PROJECT_DIR$/admin_x25/admin_checklist_x25.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="356">
-              <caret line="22" column="128" selection-start-line="22" selection-start-column="128" selection-end-line="22" selection-end-column="128" />
+            <state relative-caret-position="-737">
+              <caret line="19" column="20" selection-start-line="19" selection-start-column="8" selection-end-line="19" selection-end-column="20" />
               <folding>
-                <element signature="n#style#0;n#span#1;n#div#0;n#div#0;n#body#0;n#html#0;n#!!top" expanded="true" />
+                <element signature="e#45#51#1" expanded="true" />
+                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+                <element signature="e#139#145#0" expanded="true" />
+                <element signature="e#145#151#0" expanded="true" />
+                <element signature="e#152#158#0" expanded="true" />
+                <element signature="e#158#164#0" expanded="true" />
               </folding>
             </state>
           </provider>
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/sodastock_home/sodastock.php">
+        <entry file="file://$PROJECT_DIR$/css/style_6_3.css">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="254">
-              <caret line="16" column="142" selection-start-line="16" selection-start-column="142" selection-end-line="16" selection-end-column="142" />
-              <folding>
-                <element signature="n#style#0;n#span#1;n#div#0;n#div#0;n#body#0;n#html#0;n#!!top" expanded="true" />
-              </folding>
+            <state relative-caret-position="22984">
+              <caret line="1352" column="23" selection-start-line="1352" selection-start-column="23" selection-end-line="1352" selection-end-column="23" />
             </state>
           </provider>
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/common/login_bar.php">
+        <entry file="file://$PROJECT_DIR$/common/handle_ajax.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="186">
-              <caret line="96" column="64" selection-start-line="96" selection-start-column="11" selection-end-line="96" selection-end-column="64" />
-              <folding>
-                <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#path#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#path#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#li#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#b#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#form#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#a#0;n#b#0;n#!!top" expanded="true" />
-              </folding>
+            <state relative-caret-position="7820">
+              <caret line="460" column="45" selection-start-line="460" selection-start-column="45" selection-end-line="460" selection-end-column="45" />
             </state>
           </provider>
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/functions/session_functions.php">
+        <entry file="file://$PROJECT_DIR$/stats.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="179">
-              <caret line="60" column="28" selection-start-line="60" selection-start-column="28" selection-end-line="60" selection-end-column="28" />
+            <state relative-caret-position="4624">
+              <caret line="272" column="11" selection-start-line="272" selection-start-column="11" selection-end-line="272" selection-end-column="11" />
             </state>
           </provider>
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/common/handle_ajax.php">
+        <entry file="file://$PROJECT_DIR$/common/handle_forms.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="162">
-              <caret line="558" column="64" selection-start-line="558" selection-start-column="64" selection-end-line="558" selection-end-column="64" />
-              <folding>
-                <element signature="n#style#0;n#div#1;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#tr#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-                <element signature="e#38#44#1" expanded="true" />
-                <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#tr#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="e#16#22#1" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="e#6#15#0" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-              </folding>
+            <state relative-caret-position="2023">
+              <caret line="119" column="68" selection-start-line="119" selection-start-column="68" selection-end-line="119" selection-end-column="68" />
             </state>
           </provider>
         </entry>
       </file>
       <file pinned="false" current-in-tab="false">
-        <entry file="file://$PROJECT_DIR$/admin_x25/admin_migration_x25.php">
+        <entry file="file://$PROJECT_DIR$/common/ItemCostDetails.php">
           <provider selected="true" editor-type-id="text-editor">
-            <state relative-caret-position="179">
-              <caret line="96" column="59" selection-start-line="96" selection-start-column="59" selection-end-line="96" selection-end-column="59" />
-              <folding>
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-                <element signature="n#style#0;n#div#1;n#!!top" expanded="true" />
-              </folding>
+            <state relative-caret-position="5678">
+              <caret line="339" column="141" selection-start-line="339" selection-start-column="141" selection-end-line="339" selection-end-column="141" />
             </state>
           </provider>
         </entry>
@@ -286,36 +248,36 @@
   </component>
   <component name="FindInProjectRecents">
     <findStrings>
-      <find>remove</find>
-      <find>additemtoca</find>
-      <find>remove_C</find>
-      <find>ShowDiscontinued</find>
-      <find>audit week</find>
-      <find>newest</find>
-      <find>REFILL</find>
-      <find>missing money</find>
-      <find>retail cost</find>
-      <find>attachment</find>
-      <find>retail</find>
-      <find>log_</find>
-      <find>EditImageURL</find>
-      <find>convertDecimalToWholeCents</find>
-      <find>flag.</find>
-      <find>warning_time</find>
-      <find>start date</find>
-      <find>days active</find>
-      <find>50px</find>
-      <find>showcredit</find>
-      <find>http</find>
-      <find>http:</find>
-      <find>colspan</find>
-      <find>soon</find>
-      <find>Note_req</find>
-      <find>jquery</find>
-      <find>update</find>
-      <find>days</find>
-      <find>6.3</find>
-      <find>href</find>
+      <find>version_box</find>
+      <find>navigation_bar</find>
+      <find>stat_box</find>
+      <find>assertSiteProfit</find>
+      <find>itemprofit</find>
+      <find>itemProfit</find>
+      <find>TODO</find>
+      <find>mobile_detection</find>
+      <find>inventoryite</find>
+      <find>ismobile</find>
+      <find>ismo</find>
+      <find>DiscountPrice</find>
+      <find>'price</find>
+      <find>owed:</find>
+      <find>owed</find>
+      <find>DiscountCost</find>
+      <find>Cost</find>
+      <find>CASE</find>
+      <find>credit</find>
+      <find>datemodified</find>
+      <find>Inventory_History</find>
+      <find>todo</find>
+      <find>anonanim</find>
+      <find>goal_meter</find>
+      <find>request</find>
+      <find>goal</find>
+      <find>discountco</find>
+      <find>goal_met</find>
+      <find>storeColors</find>
+      <find>6.4</find>
     </findStrings>
     <replaceStrings>
       <replace>'</replace>
@@ -324,6 +286,17 @@
       <replace>div</replace>
       <replace>$breakdownTable .=</replace>
       <replace>0px</replace>
+      <replace>$shelfAmount</replace>
+      <replace>$backstockAmount</replace>
+      <replace>i</replace>
+      <replace>Sit Down</replace>
+      <replace>Permanently Closed</replace>
+      <replace>new Location(</replace>
+      <replace>LEFT JOIN Item_Details</replace>
+      <replace>i.inv</replace>
+      <replace>inv.</replace>
+      <replace>details.</replace>
+      <replace>&quot;COMMIT;&quot;</replace>
     </replaceStrings>
   </component>
   <component name="Git.Settings">
@@ -332,57 +305,57 @@
   <component name="IdeDocumentHistory">
     <option name="CHANGED_PATHS">
       <list>
-        <option value="$APPLICATION_CONFIG_DIR$/consoles/db/c74e7513-7159-4a3e-ba00-672d8e5d2c0b/console_3.sql" />
-        <option value="$APPLICATION_CONFIG_DIR$/consoles/db/c74e7513-7159-4a3e-ba00-672d8e5d2c0b/console_2.sql" />
-        <option value="$APPLICATION_CONFIG_DIR$/consoles/.datagrid/cell" />
-        <option value="$APPLICATION_CONFIG_DIR$/consoles/db/c74e7513-7159-4a3e-ba00-672d8e5d2c0b/console_5.sql" />
-        <option value="$USER_HOME$/Desktop/main_Audit.sql" />
-        <option value="$PROJECT_DIR$/css/style_9.css" />
-        <option value="$PROJECT_DIR$/functions/exec_sql.php" />
-        <option value="$PROJECT_DIR$/admin_x25/exec_sql.php" />
-        <option value="$PROJECT_DIR$/js/load_modals.js" />
+        <option value="$PROJECT_DIR$/admin_x25/admin_bot_x25.php" />
+        <option value="$PROJECT_DIR$/common/login_bar.php" />
+        <option value="$PROJECT_DIR$/help.php" />
+        <option value="$PROJECT_DIR$/css/style_13.css" />
+        <option value="$PROJECT_DIR$/css/style_6_2.css" />
+        <option value="$PROJECT_DIR$/index.php" />
+        <option value="$PROJECT_DIR$/sodastock_home/snackstock.php" />
+        <option value="$PROJECT_DIR$/sodastock_home/sodastock.php" />
+        <option value="$PROJECT_DIR$/scripts/load_modals.js" />
         <option value="$PROJECT_DIR$/functions/slack_functions.php" />
-        <option value="$PROJECT_DIR$/functions/log_functions.php" />
-        <option value="$PROJECT_DIR$/tests/Test.php" />
+        <option value="$PROJECT_DIR$/lunch/lunch_location.php" />
+        <option value="$PROJECT_DIR$/lunch/lunch_index.php" />
+        <option value="$PROJECT_DIR$/register.php" />
+        <option value="$PROJECT_DIR$/functions/testing_functions.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_testing_x25.php" />
-        <option value="$PROJECT_DIR$/billing.php" />
-        <option value="$PROJECT_DIR$/css/style_12.css" />
-        <option value="$PROJECT_DIR$/admin_x25/admin_audit_x25.php" />
-        <option value="$PROJECT_DIR$/admin_x25/admin_shopping_guide_x25.php" />
+        <option value="$PROJECT_DIR$/lunch/lunch_spots.php" />
+        <option value="$PROJECT_DIR$/common/User.php" />
+        <option value="$PROJECT_DIR$/common/Testing.php" />
+        <option value="$PROJECT_DIR$/common/TestingBase.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_nav_x25.php" />
+        <option value="$PROJECT_DIR$/common/Item.php" />
+        <option value="$PROJECT_DIR$/common/AuditDetails" />
+        <option value="$PROJECT_DIR$/appendix.php" />
+        <option value="$PROJECT_DIR$/functions/log_functions.php" />
+        <option value="$PROJECT_DIR$/preferences.php" />
+        <option value="$PROJECT_DIR$/common/header.php" />
+        <option value="$PROJECT_DIR$/functions/session_functions.php" />
+        <option value="$PROJECT_DIR$/functions/quantity_functions.php" />
+        <option value="$PROJECT_DIR$/admin_x25/admin_weekly_audit_x25.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_restock_x25.php" />
-        <option value="$PROJECT_DIR$/admin_x25/admin_x25.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_items_x25.php" />
+        <option value="$PROJECT_DIR$/admin_x25/admin_items_in_stock_x25.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_inventory_x25.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_defectives_x25.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_payments_x25.php" />
-        <option value="$PROJECT_DIR$/scripts/load_modals.js" />
-        <option value="$PROJECT_DIR$/css/style_6_1.css" />
-        <option value="$PROJECT_DIR$/admin_x25/build_admin_forms.php" />
-        <option value="$PROJECT_DIR$/admin_x25/admin_bot_x25.php" />
-        <option value="$PROJECT_DIR$/common/login_bar.php" />
         <option value="$PROJECT_DIR$/admin_x25/admin_checklist_x25.php" />
-        <option value="$PROJECT_DIR$/help.php" />
-        <option value="$PROJECT_DIR$/css/style_13.css" />
+        <option value="$PROJECT_DIR$/admin_x25/admin_audit_x25.php" />
+        <option value="$PROJECT_DIR$/admin_x25/admin_shopping_guide_x25.php" />
+        <option value="$PROJECT_DIR$/admin_x25/build_admin_forms.php" />
+        <option value="$PROJECT_DIR$/admin_x25/admin_x25.php" />
+        <option value="$PROJECT_DIR$/common/handle_forms.php" />
+        <option value="$PROJECT_DIR$/common/ItemCostDetails.php" />
         <option value="$PROJECT_DIR$/purchase_history.php" />
-        <option value="$PROJECT_DIR$/css/style_6_2.css" />
-        <option value="$PROJECT_DIR$/appendix.php" />
-        <option value="$PROJECT_DIR$/css/style_6_3.css" />
-        <option value="$PROJECT_DIR$/requests.php" />
-        <option value="$PROJECT_DIR$/admin_x25/admin_weekly_audit_x25.php" />
-        <option value="$PROJECT_DIR$/stats.php" />
         <option value="$PROJECT_DIR$/functions/ui_functions.php" />
-        <option value="$PROJECT_DIR$/admin_x25/admin_migration_x25.php" />
-        <option value="$PROJECT_DIR$/functions/session_functions.php" />
-        <option value="$PROJECT_DIR$/preferences.php" />
-        <option value="$PROJECT_DIR$/register.php" />
-        <option value="$PROJECT_DIR$/common/header.php" />
-        <option value="$PROJECT_DIR$/index.php" />
+        <option value="$PROJECT_DIR$/stats.php" />
         <option value="$PROJECT_DIR$/common/handle_ajax.php" />
-        <option value="$PROJECT_DIR$/common/handle_forms.php" />
-        <option value="$PROJECT_DIR$/sodastock_home/snackstock.php" />
-        <option value="$PROJECT_DIR$/sodastock_home/sodastock.php" />
+        <option value="$PROJECT_DIR$/functions/action_functions.php" />
+        <option value="$PROJECT_DIR$/requests.php" />
+        <option value="$PROJECT_DIR$/css/style_6_3.css" />
         <option value="$PROJECT_DIR$/foodstock.php" />
+        <option value="$PROJECT_DIR$/admin_x25/admin_migration_x25.php" />
       </list>
     </option>
   </component>
@@ -393,17 +366,19 @@
     <auto-save>true</auto-save>
   </component>
   <component name="PhpWorkspaceProjectConfiguration" interpreter_name="PHP" />
-  <component name="ProjectFrameBounds" extendedState="7">
-    <option name="x" value="1912" />
-    <option name="y" value="-8" />
+  <component name="ProjectFrameBounds" extendedState="6">
+    <option name="x" value="3" />
+    <option name="y" value="-20" />
     <option name="width" value="1936" />
-    <option name="height" value="1056" />
+    <option name="height" value="1055" />
   </component>
   <component name="ProjectLevelVcsManager">
     <ConfirmationsSetting value="2" id="Add" />
   </component>
   <component name="ProjectView">
     <navigator proportions="" version="1">
+      <autoscrollToSource ProjectPane="true" />
+      <autoscrollFromSource ProjectPane="true" />
       <foldersAlwaysOnTop value="true" />
     </navigator>
     <panes>
@@ -435,6 +410,21 @@
               <item name="foodstock_beta" type="462c0819:PsiDirectoryNode" />
               <item name="functions" type="462c0819:PsiDirectoryNode" />
             </path>
+            <path>
+              <item name="foodstock_beta" type="b2602c69:ProjectViewProjectNode" />
+              <item name="foodstock_beta" type="462c0819:PsiDirectoryNode" />
+              <item name="images" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="foodstock_beta" type="b2602c69:ProjectViewProjectNode" />
+              <item name="foodstock_beta" type="462c0819:PsiDirectoryNode" />
+              <item name="lunch" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="foodstock_beta" type="b2602c69:ProjectViewProjectNode" />
+              <item name="foodstock_beta" type="462c0819:PsiDirectoryNode" />
+              <item name="scripts" type="462c0819:PsiDirectoryNode" />
+            </path>
           </expand>
           <select />
         </subPane>
@@ -446,17 +436,18 @@
     <property name="WebServerToolWindowFactoryState" value="false" />
     <property name="com.jetbrains.php.phpunit.codeGeneration.PhpNewTestDialog.defaultLibrary" value="PHPUnit" />
     <property name="database.console.LAST_STATE" value="false" />
-    <property name="last_opened_file_path" value="D:/PHP_7/php.exe" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/common" />
     <property name="nodejs_package_manager_path" value="npm" />
     <property name="settings.editor.selected.configurable" value="reference.settingsdialog.IDE.editor.colors.General" />
   </component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
+      <recent name="D:\Apache Software Foundation\Apache2.4\blue_space\foodstock_beta\admin_x25" />
       <recent name="D:\Apache Software Foundation\Apache2.4\blue_space\foodstock_beta\css" />
       <recent name="D:\Apache Software Foundation\Apache2.4\blue_space\foodstock_beta" />
-      <recent name="D:\Apache Software Foundation\Apache2.4\blue_space\foodstock_beta\admin_x25" />
     </key>
     <key name="MoveFile.RECENT_KEYS">
+      <recent name="D:\Apache Software Foundation\Apache2.4\blue_space\foodstock_beta\common\" />
       <recent name="D:\Apache Software Foundation\Apache2.4\blue_space\foodstock_beta\admin_x25" />
     </key>
   </component>
@@ -500,7 +491,21 @@
       <workItem from="1556464083337" duration="43534000" />
       <workItem from="1558204192557" duration="66051000" />
       <workItem from="1560383704776" duration="609000" />
-      <workItem from="1560565363547" duration="19298000" />
+      <workItem from="1560565363547" duration="19897000" />
+      <workItem from="1561819238956" duration="7189000" />
+      <workItem from="1563034427751" duration="48737000" />
+      <workItem from="1565462101201" duration="35283000" />
+      <workItem from="1565822592569" duration="15718000" />
+      <workItem from="1566962352830" duration="12866000" />
+      <workItem from="1567725135405" duration="7281000" />
+      <workItem from="1568579387762" duration="30827000" />
+      <workItem from="1570573538539" duration="22339000" />
+      <workItem from="1570759248615" duration="1934000" />
+      <workItem from="1570893047026" duration="105802000" />
+      <workItem from="1574028838034" duration="44270000" />
+      <workItem from="1574627990637" duration="8458000" />
+      <workItem from="1575783570931" duration="13328000" />
+      <workItem from="1576104990381" duration="2058000" />
     </task>
     <servers />
   </component>
@@ -510,17 +515,17 @@
     </history-entry>
   </component>
   <component name="TimeTrackingManager">
-    <option name="totallyTimeSpent" value="250540000" />
+    <option name="totallyTimeSpent" value="607229000" />
   </component>
   <component name="ToolWindowManager">
-    <frame x="1912" y="-8" width="1936" height="1056" extended-state="6" />
+    <frame x="-8" y="-8" width="1936" height="1056" extended-state="6" />
     <editor active="true" />
     <layout>
-      <window_info content_ui="combo" id="Project" order="0" visible="true" weight="0.14285715" />
+      <window_info active="true" content_ui="combo" id="Project" order="0" visible="true" weight="0.14978679" />
       <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
       <window_info id="Favorites" order="2" side_tool="true" />
       <window_info anchor="bottom" id="Message" order="0" />
-      <window_info active="true" anchor="bottom" id="Find" order="1" visible="true" weight="0.3629469" />
+      <window_info anchor="bottom" id="Find" order="1" weight="0.5146262" />
       <window_info anchor="bottom" id="Run" order="2" weight="0.32936078" />
       <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
       <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
@@ -533,153 +538,181 @@
       <window_info anchor="bottom" id="Terminal" order="11" />
       <window_info anchor="bottom" id="Event Log" order="12" side_tool="true" />
       <window_info anchor="bottom" id="SQL Generator" order="13" weight="0.32936078" />
-      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="0" type="SLIDING" weight="0.4" />
-      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
-      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
-      <window_info anchor="right" id="Database" order="3" weight="0.16044776" />
+      <window_info anchor="right" x="0" y="0" width="434" height="856" id="Documentation" order="0" side_tool="true" weight="0.32995737" />
+      <window_info anchor="right" id="Commander" internal_type="SLIDING" order="1" type="SLIDING" weight="0.4" />
+      <window_info anchor="right" id="Ant Build" order="2" weight="0.25" />
+      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="3" weight="0.25" />
+      <window_info anchor="right" id="Database" order="4" weight="0.16044776" />
     </layout>
   </component>
   <component name="TypeScriptGeneratedFilesManager">
     <option name="version" value="1" />
   </component>
   <component name="editorHistoryManager">
-    <entry file="das://c74e7513-7159-4a3e-ba00-672d8e5d2c0b/schema/main/table/Daily_Amount">
-      <provider selected="true" editor-type-id="com.intellij.database.editor.DatabaseTableFileEditorProvider">
-        <state>
-          <filtering enabled="true" />
+    <entry file="file://$PROJECT_DIR$/sodastock_home/sodastock.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="272">
+          <caret line="16" column="142" selection-start-line="16" selection-start-column="142" selection-end-line="16" selection-end-column="142" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$USER_HOME$/Desktop/main_Audit.sql">
+    <entry file="file://$PROJECT_DIR$/scripts/load_modals.js">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="3502">
-          <caret line="206" column="6" selection-start-line="206" selection-start-column="6" selection-end-line="206" selection-end-column="6" />
+        <state relative-caret-position="2431">
+          <caret line="143" column="7" selection-start-line="143" selection-start-column="7" selection-end-line="143" selection-end-column="7" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/legacy/sodastock_charts.php" />
-    <entry file="file://$PROJECT_DIR$/css/style_9.css">
+    <entry file="file://$PROJECT_DIR$/common/slack.log">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/functions/slack_functions.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="357">
-          <caret line="950" column="128" selection-start-line="950" selection-start-column="128" selection-end-line="950" selection-end-column="128" />
+        <state relative-caret-position="1700">
+          <caret line="100" column="28" selection-start-line="100" selection-start-column="28" selection-end-line="100" selection-end-column="28" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/css/style_11.css">
-      <provider selected="true" editor-type-id="text-editor" />
+    <entry file="jar://$APPLICATION_HOME_DIR$/lib/platform-impl.jar!/resources/html5-schema/html5/meta.rnc">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="212">
+          <caret line="294" column="22" selection-start-line="294" selection-start-column="22" selection-end-line="294" selection-end-column="22" />
+        </state>
+      </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/legacy/handle_slack.php" />
-    <entry file="file://$PROJECT_DIR$/js/load_modals.js" />
-    <entry file="file://$PROJECT_DIR$/functions/log_functions.php">
+    <entry file="file://$PROJECT_DIR$/register.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="230">
-          <caret line="52" selection-start-line="52" selection-end-line="52" />
+        <state relative-caret-position="340">
+          <caret line="46" column="78" selection-start-line="46" selection-start-column="78" selection-end-line="46" selection-end-column="78" />
+          <folding>
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#fieldset#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#h1#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+          </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/tests/Test.php" />
     <entry file="file://$PROJECT_DIR$/admin_x25/admin_testing_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="95">
-          <caret line="19" column="8" selection-start-line="19" selection-start-column="8" selection-end-line="19" selection-end-column="8" />
+        <state relative-caret-position="153">
+          <caret line="9" column="40" selection-start-line="9" selection-start-column="40" selection-end-line="9" selection-end-column="40" />
           <folding>
             <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/billing.php" />
-    <entry file="file://$PROJECT_DIR$/css/style_12.css">
+    <entry file="file://$PROJECT_DIR$/lunch/lunch_location.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="6511">
-          <caret line="383" column="31" selection-start-line="383" selection-start-column="31" selection-end-line="383" selection-end-column="31" />
+        <state relative-caret-position="170">
+          <caret line="10" column="26" selection-start-line="10" selection-start-column="26" selection-end-line="10" selection-end-column="26" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_inventory_x25.php">
+    <entry file="file://$PROJECT_DIR$/lunch/lunch_index.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="331">
-          <caret line="51" column="46" selection-start-line="51" selection-start-column="18" selection-end-line="51" selection-end-column="46" />
-          <folding>
-            <element signature="e#37#43#0" expanded="true" />
-            <element signature="e#43#49#0" expanded="true" />
-            <element signature="e#49#55#0" expanded="true" />
-            <element signature="e#56#62#0" expanded="true" />
-            <element signature="e#62#68#0" expanded="true" />
-            <element signature="e#68#74#0" expanded="true" />
-            <element signature="e#17#23#1" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="19975">
+          <caret line="1175" column="27" selection-start-line="1175" selection-start-column="27" selection-end-line="1175" selection-end-column="27" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_defectives_x25.php">
+    <entry file="file://$PROJECT_DIR$/lunch/lunch_spots.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="527">
-          <caret line="31" column="46" lean-forward="true" selection-start-line="31" selection-start-column="46" selection-end-line="31" selection-end-column="46" />
+        <state relative-caret-position="1156">
+          <caret line="68" selection-start-line="68" selection-end-line="68" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_items_x25.php">
+    <entry file="file://$PROJECT_DIR$/common/User.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="340">
-          <caret line="20" column="18" selection-start-line="20" selection-start-column="18" selection-end-line="20" selection-end-column="66" />
-          <folding>
-            <element signature="e#36#42#0" expanded="true" />
-            <element signature="e#42#48#0" expanded="true" />
-            <element signature="e#48#54#0" expanded="true" />
-            <element signature="e#55#61#0" expanded="true" />
-            <element signature="e#61#67#0" expanded="true" />
-            <element signature="e#67#73#0" expanded="true" />
-            <element signature="e#99#105#0" expanded="true" />
-            <element signature="e#105#111#0" expanded="true" />
-            <element signature="e#111#117#0" expanded="true" />
-            <element signature="e#118#124#0" expanded="true" />
-            <element signature="e#124#130#0" expanded="true" />
-            <element signature="e#130#136#0" expanded="true" />
-          </folding>
+        <state relative-caret-position="300">
+          <caret line="30" column="38" selection-start-line="30" selection-start-column="38" selection-end-line="30" selection-end-column="38" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_x25.php">
+    <entry file="file://$PROJECT_DIR$/common/Testing.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="256">
+          <caret line="97" column="26" selection-start-line="97" selection-start-column="26" selection-end-line="97" selection-end-column="26" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_nav_x25.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="355">
+          <caret line="38" column="20" lean-forward="true" selection-start-line="38" selection-start-column="20" selection-end-line="38" selection-end-column="20" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/common/AuditDetails.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="365">
-          <caret line="95" column="19" selection-start-line="95" selection-start-column="19" selection-end-line="95" selection-end-column="19" />
+        <state relative-caret-position="315">
+          <caret line="23" column="5" selection-start-line="23" selection-start-column="5" selection-end-line="23" selection-end-column="5" />
           <folding>
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="e#61#67#1" expanded="true" />
+            <element signature="e#6#87#0#PHP" expanded="true" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/scripts/load_modals.js">
+    <entry file="file://$PROJECT_DIR$/something.txt" />
+    <entry file="file://$PROJECT_DIR$/something2.txt" />
+    <entry file="file://$PROJECT_DIR$/functions/log_functions.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="247">
-          <caret line="157" column="26" selection-start-line="157" selection-start-column="26" selection-end-line="157" selection-end-column="26" />
+        <state relative-caret-position="612">
+          <caret line="36" column="76" selection-start-line="36" selection-start-column="76" selection-end-line="36" selection-end-column="76" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_nav_x25.php">
+    <entry file="file://$PROJECT_DIR$/functions/session_functions.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="297">
+          <caret line="59" column="61" selection-start-line="59" selection-start-column="61" selection-end-line="59" selection-end-column="61" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_defectives_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="374">
-          <caret line="22" column="49" selection-start-line="22" selection-start-column="31" selection-end-line="22" selection-end-column="49" />
+        <state relative-caret-position="254">
+          <caret line="28" lean-forward="true" selection-start-line="28" selection-end-line="28" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/css/style_6_1.css">
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_inventory_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="85">
-          <caret line="11" column="22" selection-start-line="11" selection-start-column="22" selection-end-line="11" selection-end-column="22" />
+        <state relative-caret-position="288">
+          <caret line="70" column="29" selection-start-line="70" selection-start-column="19" selection-end-line="70" selection-end-column="29" />
+          <folding>
+            <element signature="e#55#61#0" expanded="true" />
+            <element signature="e#61#67#0" expanded="true" />
+            <element signature="e#67#73#0" expanded="true" />
+            <element signature="e#74#80#0" expanded="true" />
+            <element signature="e#80#86#0" expanded="true" />
+            <element signature="e#86#92#0" expanded="true" />
+            <element signature="e#66#72#1" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+          </folding>
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/admin_x25/admin_shopping_guide_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="170">
-          <caret line="65" column="39" selection-start-line="65" selection-start-column="39" selection-end-line="65" selection-end-column="39" />
+        <state relative-caret-position="213">
+          <caret line="165" column="76" selection-start-line="165" selection-start-column="75" selection-end-line="165" selection-end-column="76" />
           <folding>
             <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#span#0;n#span#0;n#!!top" expanded="true" />
@@ -703,255 +736,184 @@
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_payments_x25.php">
+    <entry file="file://$PROJECT_DIR$/admin_x25/build_admin_forms.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="253">
-          <caret line="192" column="38" selection-start-line="192" selection-start-column="22" selection-end-line="192" selection-end-column="38" />
+        <state relative-caret-position="349">
+          <caret line="626" selection-start-line="626" selection-end-line="626" />
           <folding>
-            <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="e#66#72#1" expanded="true" />
+            <element signature="n#style#0;n#option#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#div#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#1;n#div#0;n#td#0;n#!!top" expanded="true" />
-          </folding>
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_bot_x25.php">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="238">
-          <caret line="14" column="14" selection-start-line="14" selection-start-column="14" selection-end-line="14" selection-end-column="14" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_checklist_x25.php">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="986">
-          <caret line="58" column="44" selection-start-line="58" selection-start-column="44" selection-end-line="58" selection-end-column="44" />
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/help.php">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="1275">
-          <caret line="75" column="326" selection-start-line="75" selection-start-column="326" selection-end-line="75" selection-end-column="326" />
-        </state>
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
+          </folding>
+        </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/logout.php">
-      <provider selected="true" editor-type-id="text-editor" />
-    </entry>
-    <entry file="file://$PROJECT_DIR$/purchase_history.php">
+    <entry file="file://$PROJECT_DIR$/common/TestingBase.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="359">
-          <caret line="314" column="42" selection-start-line="314" selection-start-column="42" selection-end-line="314" selection-end-column="42" />
+        <state relative-caret-position="308">
+          <caret line="118" column="19" selection-start-line="118" selection-start-column="19" selection-end-line="118" selection-end-column="19" />
           <folding>
-            <element signature="e#104#110#0" expanded="true" />
-            <element signature="e#110#116#0" expanded="true" />
-            <element signature="e#117#123#0" expanded="true" />
-            <element signature="e#123#129#0" expanded="true" />
+            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="e#106#112#0" expanded="true" />
-            <element signature="e#112#118#0" expanded="true" />
-            <element signature="e#119#125#0" expanded="true" />
-            <element signature="e#125#131#0" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/css/style_locator.php">
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_weekly_audit_x25.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="169">
+          <caret line="46" column="17" selection-start-line="46" selection-start-column="17" selection-end-line="46" selection-end-column="17" />
+          <folding>
+            <element signature="n#style#0;n#span#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#td#0;n#!!top" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/admin_x25/phpx23info_4x9.php">
       <provider selected="true" editor-type-id="text-editor" />
     </entry>
-    <entry file="file://$PROJECT_DIR$/css/style_6_2.css">
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="315">
-          <caret line="89" lean-forward="true" selection-start-line="89" selection-end-line="89" />
+        <state relative-caret-position="289">
+          <caret line="123" column="9" lean-forward="true" selection-start-line="123" selection-start-column="9" selection-end-line="123" selection-end-column="9" />
+          <folding>
+            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="e#32#38#1" expanded="true" />
+          </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/css/fsdfsdfsd.css">
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_bot_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="291">
-          <caret line="1043" column="26" selection-start-line="1042" selection-end-line="1046" selection-end-column="1" />
+        <state relative-caret-position="170">
+          <caret line="10" column="40" selection-start-line="10" selection-start-column="40" selection-end-line="10" selection-end-column="40" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/appendix.php">
+    <entry file="file://$PROJECT_DIR$/common/login_bar.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="619">
-          <caret line="56" column="53" selection-start-line="56" selection-start-column="53" selection-end-line="56" selection-end-column="53" />
+        <state relative-caret-position="145">
+          <caret line="97" column="176" selection-start-line="97" selection-start-column="176" selection-end-line="97" selection-end-column="176" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/css/style_6_3.css">
+    <entry file="file://$PROJECT_DIR$/preferences.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="206">
-          <caret line="1081" column="21" selection-start-line="1081" selection-start-column="21" selection-end-line="1081" selection-end-column="21" />
+        <state relative-caret-position="204">
+          <caret line="12" selection-start-line="12" selection-end-line="12" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_audit_x25.php">
+    <entry file="file://$PROJECT_DIR$/common/header.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="255">
-          <caret line="15" column="42" lean-forward="true" selection-start-line="15" selection-start-column="42" selection-end-line="15" selection-end-column="42" />
-          <folding>
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="e#4#10#1" expanded="true" />
-            <element signature="e#4#10#1" expanded="true" />
-            <element signature="e#16#22#1" expanded="true" />
-            <element signature="e#17#23#1" expanded="true" />
-          </folding>
+        <state relative-caret-position="1377">
+          <caret line="81" column="43" selection-start-line="81" selection-start-column="43" selection-end-line="81" selection-end-column="43" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/requests.php">
+    <entry file="file://$PROJECT_DIR$/appendix.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="186">
-          <caret line="188" column="12" selection-start-line="188" selection-start-column="12" selection-end-line="188" selection-end-column="12" />
-          <folding>
-            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#button#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#button#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#button#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="e#85#91#1" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#tr#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="34">
+          <caret line="2" column="17" selection-start-line="2" selection-start-column="17" selection-end-line="2" selection-end-column="17" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_weekly_audit_x25.php">
+    <entry file="file://$PROJECT_DIR$/common/Item.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="219">
-          <caret line="131" column="20" selection-start-line="131" selection-start-column="20" selection-end-line="131" selection-end-column="20" />
+        <state relative-caret-position="203">
+          <caret line="23" column="20" selection-start-line="23" selection-start-column="20" selection-end-line="23" selection-end-column="20" />
           <folding>
-            <element signature="n#style#0;n#span#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="e#6#87#0#PHP" expanded="true" />
           </folding>
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/functions/slack_functions.php">
+    <entry file="file://$PROJECT_DIR$/functions/mobile_detection.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="203">
-          <caret line="57" selection-start-line="57" selection-end-line="57" />
+        <state relative-caret-position="23426">
+          <caret line="1402" selection-start-line="1402" selection-end-line="1402" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/build_admin_forms.php">
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_audit_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="33">
-          <caret line="331" column="9" selection-start-line="331" selection-start-column="9" selection-end-line="331" selection-end-column="9" />
-          <folding>
-            <element signature="n#style#0;n#option#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#select#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="663">
+          <caret line="39" column="21" selection-start-line="39" selection-start-column="21" selection-end-line="39" selection-end-column="21" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/functions/ui_functions.php">
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_items_in_stock_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="281">
-          <caret line="139" selection-start-line="139" selection-end-line="139" />
+        <state relative-caret-position="544">
+          <caret line="32" column="140" selection-start-line="32" selection-start-column="127" selection-end-line="32" selection-end-column="140" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_payments_x25.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="111">
+          <caret line="201" column="32" selection-start-line="201" selection-start-column="32" selection-end-line="201" selection-end-column="32" />
           <folding>
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="e#66#72#1" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#div#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#1;n#div#0;n#td#0;n#!!top" expanded="true" />
           </folding>
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/admin_x25/admin_restock_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="934">
-          <caret line="98" column="119" selection-start-line="98" selection-start-column="86" selection-end-line="98" selection-end-column="125" />
+        <state relative-caret-position="288">
+          <caret line="87" column="59" selection-start-line="87" selection-start-column="55" selection-end-line="87" selection-end-column="59" />
           <folding>
             <element signature="e#65#71#0" expanded="true" />
             <element signature="e#71#77#0" expanded="true" />
@@ -969,227 +931,89 @@
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/stats.php">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="119">
-          <caret line="7" column="53" selection-start-line="7" selection-start-column="32" selection-end-line="7" selection-end-column="62" />
-          <folding>
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-          </folding>
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/preferences.php">
-      <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="179">
-          <caret line="48" column="58" selection-start-line="48" selection-start-column="58" selection-end-line="48" selection-end-column="58" />
-          <folding>
-            <element signature="n#style#0;n#fieldset#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-          </folding>
-        </state>
-      </provider>
-    </entry>
-    <entry file="file://$PROJECT_DIR$/register.php">
+    <entry file="file://$PROJECT_DIR$/functions/action_functions.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="237">
-          <caret line="35" column="467" selection-start-line="35" selection-start-column="467" selection-end-line="35" selection-end-column="467" />
-          <folding>
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#fieldset#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#h1#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="13328">
+          <caret line="784" column="7" selection-start-line="784" selection-start-column="7" selection-end-line="784" selection-end-column="7" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/admin_x25/admin_migration_x25.php">
+    <entry file="file://$PROJECT_DIR$/requests.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="179">
-          <caret line="96" column="59" selection-start-line="96" selection-start-column="59" selection-end-line="96" selection-end-column="59" />
-          <folding>
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#1;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="3638">
+          <caret line="214" column="12" selection-start-line="214" selection-start-column="12" selection-end-line="214" selection-end-column="12" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/common/login_bar.php">
+    <entry file="file://$PROJECT_DIR$/purchase_history.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="186">
-          <caret line="96" column="64" selection-start-line="96" selection-start-column="11" selection-end-line="96" selection-end-column="64" />
-          <folding>
-            <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#path#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#path#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#svg#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#li#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#b#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#form#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#a#0;n#b#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="6562">
+          <caret line="386" column="37" selection-start-line="386" selection-start-column="37" selection-end-line="386" selection-end-column="37" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/functions/session_functions.php">
+    <entry file="file://$PROJECT_DIR$/functions/ui_functions.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="179">
-          <caret line="60" column="28" selection-start-line="60" selection-start-column="28" selection-end-line="60" selection-end-column="28" />
+        <state relative-caret-position="3774">
+          <caret line="222" column="52" selection-start-line="222" selection-start-column="52" selection-end-line="222" selection-end-column="52" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/index.php">
+    <entry file="file://$PROJECT_DIR$/css/style_6_3.css">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="282">
-          <caret line="22" column="46" selection-start-line="22" selection-start-column="46" selection-end-line="22" selection-end-column="46" />
+        <state relative-caret-position="22984">
+          <caret line="1352" column="23" selection-start-line="1352" selection-start-column="23" selection-end-line="1352" selection-end-column="23" />
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/common/handle_ajax.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="162">
-          <caret line="558" column="64" selection-start-line="558" selection-start-column="64" selection-end-line="558" selection-end-column="64" />
-          <folding>
-            <element signature="n#style#0;n#div#1;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#tr#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="e#38#44#1" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#th#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#tr#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="e#16#22#1" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="e#6#15#0" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#label#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="7820">
+          <caret line="460" column="45" selection-start-line="460" selection-start-column="45" selection-end-line="460" selection-end-column="45" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/common/handle_forms.php">
+    <entry file="file://$PROJECT_DIR$/stats.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="162">
-          <caret line="738" column="69" selection-start-line="738" selection-start-column="69" selection-end-line="738" selection-end-column="69" />
+        <state relative-caret-position="4624">
+          <caret line="272" column="11" selection-start-line="272" selection-start-column="11" selection-end-line="272" selection-end-column="11" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/sodastock_home/snackstock.php">
+    <entry file="file://$PROJECT_DIR$/common/handle_forms.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="356">
-          <caret line="22" column="128" selection-start-line="22" selection-start-column="128" selection-end-line="22" selection-end-column="128" />
-          <folding>
-            <element signature="n#style#0;n#span#1;n#div#0;n#div#0;n#body#0;n#html#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="2023">
+          <caret line="119" column="68" selection-start-line="119" selection-start-column="68" selection-end-line="119" selection-end-column="68" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/sodastock_home/sodastock.php">
+    <entry file="file://$PROJECT_DIR$/common/ItemCostDetails.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="254">
-          <caret line="16" column="142" selection-start-line="16" selection-start-column="142" selection-end-line="16" selection-end-column="142" />
-          <folding>
-            <element signature="n#style#0;n#span#1;n#div#0;n#div#0;n#body#0;n#html#0;n#!!top" expanded="true" />
-          </folding>
+        <state relative-caret-position="5678">
+          <caret line="339" column="141" selection-start-line="339" selection-start-column="141" selection-end-line="339" selection-end-column="141" />
         </state>
       </provider>
     </entry>
-    <entry file="file://$PROJECT_DIR$/common/header.php">
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_checklist_x25.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="255">
-          <caret line="15" column="29" selection-start-line="15" selection-start-column="29" selection-end-line="15" selection-end-column="29" />
+        <state relative-caret-position="-737">
+          <caret line="19" column="20" selection-start-line="19" selection-start-column="8" selection-end-line="19" selection-end-column="20" />
           <folding>
-            <element signature="n#style#0;n#body#0;n#!!top" expanded="true" />
+            <element signature="e#45#51#1" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="e#139#145#0" expanded="true" />
+            <element signature="e#145#151#0" expanded="true" />
+            <element signature="e#152#158#0" expanded="true" />
+            <element signature="e#158#164#0" expanded="true" />
           </folding>
         </state>
       </provider>
     </entry>
     <entry file="file://$PROJECT_DIR$/foodstock.php">
       <provider selected="true" editor-type-id="text-editor">
-        <state relative-caret-position="332">
-          <caret line="402" column="288" selection-start-line="402" selection-start-column="288" selection-end-line="402" selection-end-column="288" />
+        <state relative-caret-position="603">
+          <caret line="443" selection-start-line="443" selection-end-line="443" />
           <folding>
             <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="e#156#162#1" expanded="true" />
@@ -1202,29 +1026,26 @@
             <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#table#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#1;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#span#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#span#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="e#4#10#1" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
-            <element signature="e#4#10#1" expanded="true" />
-            <element signature="e#19#25#1" expanded="true" />
-            <element signature="e#34#40#1" expanded="true" />
-            <element signature="e#49#55#1" expanded="true" />
-            <element signature="e#64#70#1" expanded="true" />
-            <element signature="e#79#85#1" expanded="true" />
-            <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#td#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
-            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#span#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
             <element signature="n#style#0;n#input#0;n#!!top" expanded="true" />
@@ -1238,5 +1059,36 @@
         </state>
       </provider>
     </entry>
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_items_x25.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="186">
+          <caret line="37" column="122" selection-start-line="37" selection-start-column="106" selection-end-line="37" selection-end-column="122" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/functions/quantity_functions.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="230">
+          <caret line="14" column="56" lean-forward="true" selection-start-line="14" selection-start-column="56" selection-end-line="14" selection-end-column="56" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/admin_x25/admin_migration_x25.php">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="264">
+          <caret line="40" column="12" selection-start-line="40" selection-start-column="12" selection-end-line="40" selection-end-column="12" />
+          <folding>
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#0;n#!!top" expanded="true" />
+            <element signature="n#style#0;n#div#1;n#!!top" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
   </component>
 </project>
\ No newline at end of file
diff --git a/admin_x25/admin_audit_x25.php b/admin_x25/admin_audit_x25.php
index 1cb511b..6f652fc 100644
--- a/admin_x25/admin_audit_x25.php
+++ b/admin_x25/admin_audit_x25.php
@@ -36,7 +36,13 @@
         
         $allExpenses = 0.0;
         $allExpensesCard = 0.0;
-        $results = $db->query("SELECT ID, Type, Name, RefillTrigger, Date, DateModified, ModifyType, ChartColor, TotalCans, BackstockQuantity, ShelfQuantity, Price, DiscountPrice, TotalIncome, TotalExpenses, Retired, Hidden, (ShelfQuantity + BackstockQuantity) as Total FROM Item where hidden != 1 ORDER BY Hidden, Type DESC, Name ASC");
+        $statement = $db->prepare("SELECT ID, Type, Name, RefillTrigger, Date, ChartColor, TotalCans, " . getQuantityQuery() .
+            ",Price, DiscountPrice, TotalIncome, TotalExpenses, Retired, Hidden " .
+            "FROM Item i " .
+            "WHERE hidden != 1 " .
+            "ORDER BY Hidden, Type DESC, Name ASC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
             $type = $row['Type'];
             
@@ -45,11 +51,14 @@
             }
             $previousType = $type;
             
-            $totalUnits = ($row['TotalCans'] - ($row['BackstockQuantity'] + $row['ShelfQuantity']));
+            $totalUnits = ($row['TotalCans'] - ($row['BackstockAmount'] + $row['ShelfAmount']));
             
             $inSiteIncome = 0.0;
             $inSiteCount = 0;
-            $resultsPurchases = $db->query("SELECT * from Purchase_History p where p.ItemID = " . $row['ID'] );
+            $statementPurchases = $db->prepare("SELECT * from Purchase_History p WHERE p.ItemID = :itemID" );
+            $statementPurchases->bindValue( ":itemID", $row['ID'] );
+            $resultsPurchases = $statementPurchases->execute();
+
             while ($rowPurchases = $resultsPurchases->fetchArray()) {
                 $discountPrice = $rowPurchases['DiscountCost'];
                 $regularPrice = $rowPurchases['Cost'];
@@ -79,7 +88,10 @@
             $totalExpenses = 0.0;
             $totalExpensesCount = 0;
             
-            $resultsRestock = $db->query("SELECT * from Restock p where p.ItemID = " . $row['ID'] );
+            $statementRestock = $db->prepare("SELECT * from Restock p WHERE p.ItemID = :itemID" );
+            $statementRestock->bindValue( ":itemID", $row['ID'] );
+            $resultsRestock = $statementRestock->execute();
+
             while ($rowRestock = $resultsRestock->fetchArray()) {
                 $totalExpenses += $rowRestock['Cost'];
                 $totalExpensesCount++;
@@ -118,7 +130,11 @@
         
         echo "</table>";
     echo "</span>";
-    
+
+    /**
+     * @param $db SQLite3
+     * @param $previousType
+     */
     function summary( $db, $previousType ) {
         global $allIncome, $allIncomeCard, $allExpenses, $allExpensesCard;
         $allProfit = $allIncome - $allExpenses;
@@ -139,7 +155,10 @@
         $allExpensesCard = 0.0;
 
         $totalPayment = 0.0;
-        $resultsPayment = $db->query("SELECT sum(amount) as 'amount' from Payments p where p.ItemType = '$previousType'" );
+        $statementPayment = $db->prepare("SELECT sum(amount) as 'amount' FROM Payments p WHERE p.ItemType = :previousType" );
+        $statementPayment->bindValue( ":previousType", $previousType );
+        $resultsPayment = $statementPayment->execute();
+
         while ($rowPayment = $resultsPayment->fetchArray()) {
             $totalPayment = $rowPayment['amount'];
         }
diff --git a/admin_x25/admin_checklist_x25.php b/admin_x25/admin_checklist_x25.php
index 8ae090c..8a83835 100644
--- a/admin_x25/admin_checklist_x25.php
+++ b/admin_x25/admin_checklist_x25.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 
 <?php
@@ -12,9 +11,29 @@
     DrawChecklistTable( $db, "RestockTrigger", "Needs Restock from Store" );
     echo "</span>";
 
+    /**
+     * @param $db SQLite3
+     * @param $checklistType
+     * @param $title
+     */
     function DrawChecklistTable( $db, $checklistType, $title ) {
+        $storeColors = array(
+            "Walmart" => "#4274f4",
+            "Costco" => "#41f473",
+            "BJs" => "#f4bb41",
+            "Target" => "#f44242",
+            "Aldi" => "#b7b416",
+            "Wegmans" => "#b75616",
+            "PriceRite" => "#8e16b7",
+            "Tops" => "#167cb7"
+        );
+
         echo "<div class='rounded_header'><span class='title'>$title</span></div>";
 
+        if( $checklistType == "RestockTrigger" ) {
+            echo "<span id='shopping_button' class='nav_buttons nav_buttons_admin'>Add Shopping Guide</span>";
+        }
+
         echo "<div class='center_piece'>";
         echo "<div class='rounded_table_no_border'>";
         echo "<table>";
@@ -34,6 +53,13 @@
             $isBought = $row['IsBought'] == 1;
             $itemID = $row['ID'];
 
+            $price = $row['Price'];
+            $discountPrice = $row['DiscountPrice'];
+
+            if( $discountPrice != "" ) {
+                $price = $discountPrice;
+            }
+
             if( $isBought == 1 ) {
                 $rowClass = "class='completed'";
             } else if( $isDiscontinued ) {
@@ -42,8 +68,62 @@
                 $rowClass = "";
             }
 
+            $extraInfo = "";
+
+            if( $checklistType == "RestockTrigger" ) {
+                $shoppingStatement = $db->prepare("SELECT ItemID, CASE WHEN SalePrice IS NULL OR SalePrice = 0 THEN RegularPrice/PackQuantity ELSE SalePrice/PackQuantity END CostEach, " .
+                    "PackQuantity, Store, RegularPrice, SalePrice from Shopping_Guide " .
+                    "WHERE ItemID = :itemID AND Store is NOT NULL ORDER BY CostEach");
+                $shoppingStatement->bindValue( ":itemID", $itemID );
+                $shoppingResults = $shoppingStatement->execute();
+
+                while ($shoppingRow = $shoppingResults->fetchArray()) {
+                    $packQuantity = $shoppingRow['PackQuantity'];
+                    $store = $shoppingRow['Store'];
+                    $regularPrice = $shoppingRow['RegularPrice'];
+                    $salePrice = $shoppingRow['SalePrice'];
+                    $costEach = $shoppingRow['CostEach'];
+
+                    $details = "$packQuantity items for " . getPriceDisplayWithDollars($regularPrice) . "/" . getPriceDisplayWithDollars( $salePrice );
+
+                    if ( $costEach <= $price && $store != "Costco" && $store != "BJs") {
+                        $profitMargin =  $price - $costEach;
+
+                        $storeColor = $storeColors[$store];
+
+                        $profitMarginFormatted = getPriceDisplayWithDollars( $profitMargin );
+
+                        if(  strpos( $profitMarginFormatted, "Migration" ) !== false ) {
+                            $profitMarginFormatted = "$0.00";
+                        }
+
+                        $extraInfo .= "<span title='$details' style='display:inline-block; background-color: $storeColor; color:#000000; margin: 5px 10px 0px 0px; padding:5px;'>$store: " . $profitMarginFormatted . "</span>";
+                    }
+                }
+
+                $shoppingStatement= $db->prepare("SELECT ItemID, PackQuantity from Shopping_Guide " .
+                    "WHERE ItemID = :itemID AND Store is NULL");
+                $shoppingStatement->bindValue( ":itemID", $itemID );
+                $shoppingResults = $shoppingStatement->execute();
+
+                $displayedBreak = false;
+
+                while ($shoppingRow = $shoppingResults->fetchArray()) {
+                    if( !$displayedBreak ) {
+                        $displayedBreak = true;
+                        $extraInfo .= "<br>";
+                    }
+
+                    $packQuantity = $shoppingRow['PackQuantity'];
+                    $totalPrice = $price * $packQuantity;
+                    $totalPriceFormatted = getPriceDisplayWithDollars( $totalPrice );
+                    $extraInfo .= "<span style='display:inline-block; background-color: #000000; color:#bfbfbf; margin: 5px 10px 0px 0px; padding:5px;'>$packQuantity items&nbsp;&nbsp;:&nbsp;&nbsp;Less than $totalPriceFormatted</span>";
+                }
+            }
+
+
             echo "<tr $rowClass id='checklist_" . $checklistType . "_row_$itemID'>";
-            drawCheckListRow( $isBought, $itemID, $row['Name'], $row['Type'], $row['ShelfQuantity'], $row['BackstockQuantity'], $isDiscontinued, $checklistType );
+            drawCheckListRow( $isBought, $itemID, $row['Name'], $row['Type'], $row['ShelfAmount'], $row['BackstockAmount'], $isDiscontinued, $checklistType, $extraInfo );
             echo "</tr>";
         }
 
diff --git a/admin_x25/admin_defectives_x25.php b/admin_x25/admin_defectives_x25.php
index cd6bcd4..c6425ed 100644
--- a/admin_x25/admin_defectives_x25.php
+++ b/admin_x25/admin_defectives_x25.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 
 <?php
@@ -22,7 +21,12 @@
         
         $rowClass = "odd";
         
-        $results = $db->query("SELECT i.Name, d.Amount, d.Date, d.Price FROM Defectives d JOIN Item i ON d.itemID = i.id ORDER BY d.Date DESC");
+        $statement = $db->prepare("SELECT i.Name, d.Amount, d.Date, d.Price " .
+            "FROM Defectives d " .
+            "JOIN Item i ON d.itemID = i.id " .
+            "ORDER BY d.Date DESC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
             
             if( $rowClass == "odd" ) { $rowClass = "even"; } else { $rowClass = "odd"; }
diff --git a/admin_x25/admin_inventory_x25.php b/admin_x25/admin_inventory_x25.php
index 2d15f98..27e8078 100644
--- a/admin_x25/admin_inventory_x25.php
+++ b/admin_x25/admin_inventory_x25.php
@@ -61,7 +61,15 @@
         $rowClass = "odd_manual";
         $previousDate = "";
         
-        $results = $db->query("SELECT p.CashOnly, i.Name, u.FirstName, u.LastName, r.Cancelled, r.ID, r.Date, r.BackstockQuantityBefore, r.BackstockQuantity, r.ShelfQuantityBefore, r.ShelfQuantity, r.Price FROM Daily_Amount r JOIN Item i ON r.itemID = i.id LEFT JOIN Purchase_History p ON r.ID = p.DailyAmountID LEFT JOIN User u on p.UserID = u.UserID WHERE r.Date >= date('now','-2 months') ORDER BY r.Date DESC");
+        $statement = $db->prepare("SELECT p.CashOnly, i.Name, u.FirstName, u.LastName, r.Cancelled, r.ID, r.Date, r.BackstockQuantityBefore, r.BackstockQuantity, r.ShelfQuantityBefore, r.ShelfQuantity, r.Price " .
+            "FROM Inventory_History r ".
+            "JOIN Item i ON r.itemID = i.id " .
+            "LEFT JOIN Purchase_History p ON r.ID = p.DailyAmountID " .
+            "LEFT JOIN User u on p.UserID = u.UserID " .
+            "WHERE r.Date >= date('now','-2 months') " .
+            "ORDER BY r.Date DESC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
 
             if( $previousDate != "" && $previousDate != $row['Date'] ) {
diff --git a/admin_x25/admin_items_in_stock_x25.php b/admin_x25/admin_items_in_stock_x25.php
index dceb8fb..e6649a0 100644
--- a/admin_x25/admin_items_in_stock_x25.php
+++ b/admin_x25/admin_items_in_stock_x25.php
@@ -3,75 +3,70 @@
 <?php
     include(__DIR__ . "/../appendix.php" );
     
-    $url = ADMIN_ITEMS_LINK;
+    $url = ADMIN_ITEMS_IN_STOCK_LINK;
     include( HEADER_PATH );
+    include_once(ACTION_FUNCTIONS_PATH);
     
     echo "<span class='admin_box'>";
         // ------------------------------------
         // ITEM TABLE
         // ------------------------------------
-        echo "<div class='rounded_header'><span class='title'>Item Inventory</span></div>";
+        echo "<div class='rounded_header'><span class='title'>Item In Stock</span></div>";
         
         echo "<div class='center_piece'>";
         echo "<span class='hidden_mobile_section'>Black = Sold Out.&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Discounted price = Yellow.&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;Red Rows = Discontinued.</span>";
         echo "<div class='rounded_table_no_border'>";
         echo "<table>";
         echo "<thead><tr>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>ID</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Type</th>";
+        echo "<th class='admin_header_column' align='left'>&nbsp;</th>";
         echo "<th class='admin_header_column' align='left'>Name</th>";
+        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Type</th>";
         echo "<th class='admin_header_column' align='left'>Price per Unit</th>";
         echo "<th class='admin_header_column' align='left'>Discount Price per Unit</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Date Created</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Chart Color</th>";
-        echo "<th class='admin_header_column' align='left'>Shelf Quantity</th>";
-        echo "<th class='admin_header_column' align='left'>Backstock Quantity</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Total Units Bought</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Total Income</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Total Expenses</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Discontinued</th>";
-        
+        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Retail Price per Unit</th>";
+        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Profit per Unit</th>";
+        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Exp Date.</th>";
         echo "</tr></thead>";
         
         $rowClass = "";
         
-        $results = $db->query("SELECT ID, Type, Name, RefillTrigger, Date, ChartColor, TotalCans, " . getQuantityQuery() .
-        ",Price, DiscountPrice, TotalIncome, TotalExpenses, Retired, Hidden FROM Item i WHERE Hidden != 1 ORDER BY Retired, Type DESC, TotalAmount DESC");
+        $statement = $db->prepare("SELECT COUNT(s.ItemDetailsID) as Count, s.ItemID, s.IsBackstock, i.Name, i.Type, d.Price, d.DiscountPrice, d.RetailPrice, d.ExpDate, s.Date " .
+            "FROM Items_In_Stock s " .
+            "JOIN ITEM i ON s.ItemID = i.ID " .
+            "JOIN Item_Details d ON s.ItemDetailsID = d.ItemDetailsID " .
+            "GROUP BY s.ItemDetailsID, s.IsBackstock " .
+            "ORDER BY s.ItemID");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
-            $isDiscontinued = $row['Retired'] == 1;
+            $isDiscontinued = $row['IsBackstock'] == 1;
 
             if( $isDiscontinued ) {
-                $rowClass = "class='discontinued_row'";
-            }
-            
-            $colorPrice = "";
-            $colorDiscount = "";
-            
-            if( $row['DiscountPrice'] == 0 ) {
-                $colorPrice = "style = 'background-color: #fdff80; color:#000000;'";
+                $rowClass = "class='backstock_row'";
             } else {
-                $colorDiscount = "style = 'background-color: #fdff80; color:#000000;'";
-            }
-            
-            $colorSoldOut = "";
-            if( ( $row['TotalAmount'] == 0 || $row['RefillTrigger'] == 1 ) && !$isDiscontinued ) {
-                $colorSoldOut = "style = 'background-color: #3c3c3c; color: #FFFFFF'";
+                $rowClass = "";
             }
 
+            $retailPrice = $row['RetailPrice'];
+            $price = $row['Price'];
+            $discountPrice = $row['DiscountPrice'];
+            $lowestPrice = getSitePurchasePrice( $discountPrice, $price );
+            $profit = $lowestPrice - $retailPrice;
+
+            $losingMoneyClass = "";
+
+            if( $profit <= 0 ) {
+                $losingMoneyClass = "style='color: #ff0000; font-weight: bold;'";
+            }
             echo "<tr $rowClass>";
-            echo "<td class='hidden_mobile_column'>" . $row['ID'] . "</td>";
-            echo "<td class='hidden_mobile_column'>" . $row['Type'] . "</td>";
-            echo "<td $colorSoldOut>" . $row['Name'] . "</td>";
-            echo "<td $colorPrice>" . getPriceDisplayWithDollars( $row['Price'] ) . "</td>";
-            echo "<td $colorDiscount>" . getPriceDisplayWithDollars( $row['DiscountPrice'] ) . "</td>";
-            echo "<td class='hidden_mobile_column'>" . $row['Date'] . "</td>";
-            echo "<td class='hidden_mobile_column'>" . $row['ChartColor'] . "</td>";
-            echo "<td>" . $row['ShelfAmount'] . "</td>";
-            echo "<td>" . $row['BackstockAmount'] . "</td>";
-            echo "<td class='hidden_mobile_column'>" . $row['TotalCans'] . "</td>";
-            echo "<td class='hidden_mobile_column'>" . getPriceDisplayWithDollars( $row['TotalIncome'] ) . "</td>";
-            echo "<td class='hidden_mobile_column'>" . getPriceDisplayWithDollars( $row['TotalExpenses'] ) . "</td>";
-            echo "<td class='hidden_mobile_column'>". ( $isDiscontinued ? ( "YES" ) : ( "NO" ) ) . "</td>";
+            echo "<td $losingMoneyClass>" . $row['Count'] . "</td>";
+            echo "<td $losingMoneyClass>" . $row['Name'] . "</td>";
+            echo "<td $losingMoneyClass class='hidden_mobile_column'>" . $row['Type'] . "</td>";
+            echo "<td $losingMoneyClass>" . getPriceDisplayWithDollars( $price ) . "</td>";
+            echo "<td $losingMoneyClass>" . getPriceDisplayWithDollars( $discountPrice ) . "</td>";
+            echo "<td $losingMoneyClass>" . getPriceDisplayWithDollars( $retailPrice ) . "</td>";
+            echo "<td $losingMoneyClass>" . getPriceDisplayWithDollars( $profit ) . "</td>";
+            echo "<td $losingMoneyClass class='hidden_mobile_column'>" . $row['ExpDate'] . "</td>";
             echo "</tr>";
         }
         
diff --git a/admin_x25/admin_items_x25.php b/admin_x25/admin_items_x25.php
index 9a64a50..ef58b4d 100644
--- a/admin_x25/admin_items_x25.php
+++ b/admin_x25/admin_items_x25.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 
 <?php
@@ -24,7 +23,6 @@
         echo "<th class='admin_header_column' align='left'>Price per Unit</th>";
         echo "<th class='admin_header_column' align='left'>Discount Price per Unit</th>";
         echo "<th class='hidden_mobile_column admin_header_column' align='left'>Date Created</th>";
-        echo "<th class='hidden_mobile_column admin_header_column' align='left'>Date Modified</th>";
         echo "<th class='hidden_mobile_column admin_header_column' align='left'>Chart Color</th>";
         echo "<th class='admin_header_column' align='left'>Shelf Quantity</th>";
         echo "<th class='admin_header_column' align='left'>Backstock Quantity</th>";
@@ -37,10 +35,13 @@
         
         $rowClass = "";
         
-        $results = $db->query("SELECT ID, Type, Name, RefillTrigger, Date, DateModified, ModifyType, ChartColor, TotalCans, BackstockQuantity, ShelfQuantity, Price, DiscountPrice, TotalIncome, TotalExpenses, Retired, Hidden, (ShelfQuantity + BackstockQuantity) as Total FROM Item WHERE Hidden != 1 ORDER BY Retired, Type DESC, Total ASC");
+        $statement = $db->prepare("SELECT ID, Type, Name, RefillTrigger, Date, ChartColor, TotalCans, " . getQuantityQuery() .
+            ",Price, DiscountPrice, TotalIncome, TotalExpenses, Retired, Hidden FROM Item i WHERE Hidden != 1 ORDER BY Retired, Type DESC, TotalAmount DESC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
             $isDiscontinued = $row['Retired'] == 1;
-            
+
             if( $isDiscontinued ) {
                 $rowClass = "class='discontinued_row'";
             }
@@ -55,7 +56,7 @@
             }
             
             $colorSoldOut = "";
-            if( ( $row['Total'] == 0 || $row['RefillTrigger'] == 1 ) && !$isDiscontinued ) {
+            if( ( $row['TotalAmount'] == 0 || $row['RefillTrigger'] == 1 ) && !$isDiscontinued ) {
                 $colorSoldOut = "style = 'background-color: #3c3c3c; color: #FFFFFF'";
             }
 
@@ -66,10 +67,9 @@
             echo "<td $colorPrice>" . getPriceDisplayWithDollars( $row['Price'] ) . "</td>";
             echo "<td $colorDiscount>" . getPriceDisplayWithDollars( $row['DiscountPrice'] ) . "</td>";
             echo "<td class='hidden_mobile_column'>" . $row['Date'] . "</td>";
-            echo "<td class='hidden_mobile_column'>" . $row['DateModified'] . " (" . $row['ModifyType'] . ")</td>";
             echo "<td class='hidden_mobile_column'>" . $row['ChartColor'] . "</td>";
-            echo "<td>" . $row['ShelfQuantity'] . "</td>";
-            echo "<td>" . $row['BackstockQuantity'] . "</td>";
+            echo "<td>" . $row['ShelfAmount'] . "</td>";
+            echo "<td>" . $row['BackstockAmount'] . "</td>";
             echo "<td class='hidden_mobile_column'>" . $row['TotalCans'] . "</td>";
             echo "<td class='hidden_mobile_column'>" . getPriceDisplayWithDollars( $row['TotalIncome'] ) . "</td>";
             echo "<td class='hidden_mobile_column'>" . getPriceDisplayWithDollars( $row['TotalExpenses'] ) . "</td>";
diff --git a/admin_x25/admin_migration_x25.php b/admin_x25/admin_migration_x25.php
index d745089..0f484f3 100644
--- a/admin_x25/admin_migration_x25.php
+++ b/admin_x25/admin_migration_x25.php
@@ -20,6 +20,7 @@
  */
     include(__DIR__ . "/../appendix.php");
     include(UI_FUNCTIONS_PATH);
+    include(QUANTITY_FUNCTIONS_PATH);
 
     $db = new SQLite3( getDB() );
     if (!$db) die ($error);
@@ -42,6 +43,7 @@
         } else {
             ini_set('max_execution_time', 3600);
             $start = time();
+            error_log("------- MIGRATION BEGIN [$version]" );
 
             switch ($version) {
                 case "6.0":
@@ -56,6 +58,9 @@
                 case "6.3":
                     v6_3($db);
                     break;
+                case "7.0":
+                    v7_0($db);
+                    break;
                 default:
                     echo "There is no migration for version [$version]!";
                     break;
@@ -64,6 +69,8 @@
             $end = time();
             $totalTime = $end - $start;
 
+            error_log("------- MIGRATION END [$version] [$totalTime ms]" );
+
             echo "<div style='background-color:#ff4c81; padding: 15px; margin: 30px 0px; border: #ff171d solid 4px;'>";
             echo "<div style='padding: 10px; color: #ffcdd7;'>TOTAL TIME ($totalTime seconds)</div>";
             echo "</div>";
@@ -76,6 +83,41 @@
         echo " Welcome to migration page. You need to select a version!";
     }
 
+
+    function v7_0($db ) {
+        error_log( "Creating tables..." );
+        executeStatement( $db, "CREATE TABLE IF NOT EXISTS Items_In_Stock (StockID INTEGER PRIMARY KEY not null, ItemID INTEGER, ItemDetailsID INTEGER, IsBackstock INTEGER, Date TEXT)" );
+        executeStatement( $db, "CREATE TABLE IF NOT EXISTS Item_Details (ItemDetailsID INTEGER PRIMARY KEY not null, ItemID INTEGER not null, Price INTEGER, DiscountPrice INTEGER, RetailPrice INTEGER, ExpDate TEXT )" );
+
+        error_log( "Altering tables..." );
+        executeStatement( $db, "ALTER TABLE Daily_Amount RENAME TO Inventory_History;");
+        executeStatement( $db, "ALTER TABLE Inventory_History ADD COLUMN InventoryType TEXT;");
+        executeStatement( $db, "ALTER TABLE Inventory_History ADD COLUMN ItemDetailsID INTEGER;");
+        executeStatement( $db, "ALTER TABLE Purchase_History ADD COLUMN ItemDetailsID INTEGER;");
+
+        executeStatement( $db, "ALTER TABLE Information ADD COLUMN SiteIncome INTEGER DEFAULT 0;");
+        executeStatement( $db, "ALTER TABLE Information ADD COLUMN SiteExpenses INTEGER DEFAULT 0;");
+        executeStatement( $db, "ALTER TABLE Information ADD COLUMN SitePayments INTEGER DEFAULT 0;");
+        executeStatement( $db, "ALTER TABLE Information ADD COLUMN SiteProfit INTEGER DEFAULT 0;");
+        executeStatement( $db, "ALTER TABLE Information ADD COLUMN SiteLoss INTEGER DEFAULT 0;");
+        executeStatement( $db, "ALTER TABLE Information ADD COLUMN FirstRebornDay TEXT;");
+        executeStatement( $db, "ALTER TABLE Item ADD COLUMN ItemIncome INTEGER DEFAULT 0;");
+        executeStatement( $db, "ALTER TABLE Item ADD COLUMN ItemExpenses INTEGER DEFAULT 0;");
+        executeStatement( $db, "ALTER TABLE Item ADD COLUMN ItemProfit INTEGER DEFAULT 0;");
+
+        error_log( "Updating tables..." );
+        executeStatement( $db, "UPDATE Inventory_History Set InventoryType = 'SITE PURCHASE' WHERE PurchaseID = -2;");
+        executeStatement( $db, "UPDATE Inventory_History Set InventoryType = 'MANUAL PURCHASE' WHERE (PurchaseID = -3 OR PurchaseID = -1) AND ShelfQuantity < ShelfQuantityBefore;");
+        executeStatement( $db, "UPDATE Inventory_History Set InventoryType = 'REFILL' WHERE (PurchaseID = -3 OR PurchaseID = -1) AND ShelfQuantity > ShelfQuantityBefore;");
+        executeStatement( $db, "UPDATE Inventory_History Set InventoryType = 'NO CHANGE' WHERE (PurchaseID = -3 OR PurchaseID = -1) AND ShelfQuantity = ShelfQuantityBefore AND BackstockQuantity = BackstockQuantityBefore;");
+        executeStatement( $db, "UPDATE Information Set FirstRebornDay = '2019-10-15 00:00:00'");
+
+        error_log( "Creating Item_Details..." );
+//        createItemDetails( $db );
+         convertValueToItemInStock( $db );
+
+    }
+
     function v6_3( $db ) {
         executeStatement($db, "ALTER TABLE USER ADD COLUMN ShowTrending INTEGER DEFAULT 1;");
     }
@@ -152,14 +194,181 @@
     }
 
     function queryStatement( $db, $statement ) {
+        return queryStatementWithPrint( $db, $statement, true );
+    }
+
+    function queryStatementWithPrint( $db, $statement, $print ) {
         $start = time();
         $results = $db->query( $statement );
         $end = time();
         $totalTime = $end - $start;
-        printBox( "<div style='padding: 10px; color: #c2f9ff;'>Querying [$statement]</div> <div style='padding: 10px; color: #c2f9ff;'>Done! ($totalTime seconds)</div>" );
+        if( $print ) {
+            printBox("<div style='padding: 10px; color: #c2f9ff;'>Querying [$statement]</div> <div style='padding: 10px; color: #c2f9ff;'>Done! ($totalTime seconds)</div>");
+        }
         return $results;
     }
 
+    function createItemDetails( $db ) {
+        // CREATE THEM
+        error_log( "-- Creating from Inventory_History" );
+        $tableResults = queryStatement($db, "select ItemID, Price from Inventory_History group by ItemID, Price;" );
+
+        while ($tableRow = $tableResults->fetchArray()) {
+            $price = $tableRow['Price'];
+            $itemID = $tableRow['ItemID'];
+
+            $updateQuery = "INSERT INTO Item_Details (Price, DiscountPrice, ItemID) VALUES($price, 0, $itemID)";
+            $db->exec( $updateQuery );
+        }
+
+        error_log( "-- Creating from Purchase_History" );
+        $tableResults = queryStatement($db, "select ItemID, Cost, DiscountCost from Purchase_History group by ItemID, Cost, DiscountCost;" );
+
+        while ($tableRow = $tableResults->fetchArray()) {
+            $price = $tableRow['Cost'];
+            $discountPrice = $tableRow['DiscountCost'];
+            $itemID = $tableRow['ItemID'];
+
+            if( $itemID == 4000 ) {
+                // For credit purchases
+                $discountPrice = 0;
+            }
+
+            $updateQuery = "INSERT INTO Item_Details (Price, DiscountPrice, ItemID) VALUES($price, $discountPrice, $itemID)";
+            $db->exec( $updateQuery );
+        }
+
+        // ASSIGN THEM
+        error_log( "-- Assigning Inventory_History" );
+        $tableResults = queryStatement($db, "select ID, ItemID, Price from Inventory_History;" );
+
+        while ($tableRow = $tableResults->fetchArray()) {
+            $price = $tableRow['Price'];
+            $itemID = $tableRow['ItemID'];
+            $id = $tableRow['ID'];
+
+            if( $id % 250 == 0 ) {
+                error_log("Updating Inventory_History [$id]" );
+            }
+
+            $itemDetailsResults = queryStatementWithPrint($db, "select ItemDetailsID from Item_Details WHERE Price = $price AND ItemID = $itemID AND DiscountPrice = 0;", false );
+            $itemDetailsID = $itemDetailsResults->fetchArray()['ItemDetailsID'];
+
+            executeStatementWithPrint( $db, "UPDATE Inventory_History SET ItemDetailsID = $itemDetailsID WHERE ID = $id", false );
+        }
+
+        error_log( "-- Assigning Purchase_History" );
+        $tableResults = queryStatement($db, "select ID, ItemID, Cost, DiscountCost from Purchase_History;" );
+
+        while ($tableRow = $tableResults->fetchArray()) {
+            $price = $tableRow['Cost'];
+            $discountPrice = $tableRow['DiscountCost'];
+            $itemID = $tableRow['ItemID'];
+            $id = $tableRow['ID'];
+
+            if( $itemID == 4000 ) {
+                // For credit purchases
+                $discountPrice = 0;
+            }
+
+            if( $id % 250 == 0 ) {
+                error_log("Updating Purchase_History [$id]" );
+            }
+
+            $itemDetailsResults = queryStatementWithPrint($db, "select ItemDetailsID from Item_Details WHERE Price = $price AND ItemID = $itemID AND DiscountPrice = $discountPrice;", false );
+            $itemDetailsID = $itemDetailsResults->fetchArray()['ItemDetailsID'];
+
+            executeStatementWithPrint( $db, "UPDATE Purchase_History SET ItemDetailsID = $itemDetailsID WHERE ID = $id", false );
+        }
+
+        // CHECK YOUR WORK
+        error_log( "-- Checking Inventory_History" );
+        $tableResults = queryStatement($db, "select h.ID, h.ItemID as HisID, h.Price as HisPrice, d.ItemID as DetID, d.Price as DetPrice from Inventory_History h JOIN Item_Details d ON h.ItemDetailsID = d.ItemDetailsID;" );
+
+        while ($tableRow = $tableResults->fetchArray()) {
+            $id = $tableRow['ID'];
+            $hisID = $tableRow['HisID'];
+            $hisPrice = $tableRow['HisPrice'];
+            $detID = $tableRow['DetID'];
+            $detPrice = $tableRow['DetPrice'];
+
+            if ($hisID != $detID) {
+                error_log(" ERROR MISMATCH - ID!! [$id] [$hisID] [$detID]");
+            }
+
+            if ($hisPrice != $detPrice) {
+                error_log(" ERROR MISMATCH - PRICE!! [$id] [$hisPrice] [$detPrice]");
+            }
+        }
+
+        error_log( "-- Checking Purchase_History" );
+        $tableResults = queryStatement($db, "select h.ID, h.ItemID as HisID, h.Cost as HisPrice, h.DiscountCost as HisDiscountPrice, d.ItemID as DetID, d.Price as DetPrice, d.DiscountPrice as DetDiscountPrice from Purchase_History h JOIN Item_Details d ON h.ItemDetailsID = d.ItemDetailsID;" );
+
+        while ($tableRow = $tableResults->fetchArray()) {
+            $id = $tableRow['ID'];
+            $hisID = $tableRow['HisID'];
+            $hisPrice = $tableRow['HisPrice'];
+            $hisDiscountPrice = $tableRow['HisDiscountPrice'];
+            $detID = $tableRow['DetID'];
+            $detPrice = $tableRow['DetPrice'];
+            $detDiscountPrice = $tableRow['DetDiscountPrice'];
+
+            if ($hisID != $detID) {
+                error_log(" ERROR MISMATCH - ID!! [$id] [$hisID] [$detID]");
+            }
+
+            if ($hisPrice != $detPrice) {
+                error_log(" ERROR MISMATCH - PRICE!! [$id] [$hisPrice] [$detPrice]");
+            }
+
+            if ($hisDiscountPrice != $detDiscountPrice) {
+                error_log(" ERROR MISMATCH - DISCOUNT PRICE!! [$id] [$hisDiscountPrice] [$detDiscountPrice]");
+            }
+        }
+
+        error_log( "-- DONE" );
+    }
+
+    function convertValueToItemInStock( $db ) {
+        $tableResults = queryStatement($db, "SELECT ID, Name, ShelfQuantity, BackstockQuantity, (ShelfQuantity + BackstockQuantity) as TotalQuantity, (Price + DiscountPrice) as TotalPrice, DiscountPrice, Price from Item WHERE TotalPrice > 0 ORDER BY TotalQuantity DESC" );
+
+        $totalExecutesForTable = "";
+        while ($tableRow = $tableResults->fetchArray()) {
+            $id = $tableRow['ID'];
+            $itemName = $tableRow['Name'];
+            $shelfQuantity = $tableRow['ShelfQuantity'];
+            $backstockQuantity = $tableRow['BackstockQuantity'];
+            $discountPrice = $tableRow['DiscountPrice'];
+            $price = $tableRow['Price'];
+
+            $restockResults = queryStatement($db, "SELECT (Cost/NumberOfCans) as CostEach, Date from Restock WHERE ItemID = $id ORDER BY Date Desc" );
+            $firstRestockRow = $restockResults->fetchArray();
+            $retailPrice = round( $firstRestockRow['CostEach'] );
+            $restockDate = $firstRestockRow['Date'];
+
+            $itemDetailsQuery = "INSERT INTO Item_Details (ItemID, Price, DiscountPrice, RetailPrice) VALUES($id, $price, $discountPrice, $retailPrice)";
+            $db->exec( $itemDetailsQuery );
+            $itemDetailsID = $db->lastInsertRowID();
+
+            $lostMoney = "";
+
+            if( $discountPrice == 0 ) {
+                $discountPrice = $price;
+            }
+
+            if( $retailPrice > $discountPrice ) {
+                $lostMoney = "<br><br><b>LOST MONEY!!!!!</b>";
+            }
+
+            printBox( "Item $id [$itemName] - Shelf Quantity [$shelfQuantity] Backstock Quantity [$backstockQuantity]<br>Price: [$discountPrice]<br>RetailCost: [$retailPrice]<br>Date: [$restockDate] $lostMoney" );
+
+            $date = date('Y-m-d H:i:s');
+
+            addToShelfQuantity( $db, $shelfQuantity, $id, $itemDetailsID, "MIGRATION" );
+            addToBackstockQuantity( $db, $backstockQuantity, $id, $itemDetailsID, "MIGRATION" );
+        }
+    }
+
     function convertDollarsToWholeCents( $db, $tableName, $primaryID, ...$columnNames ) {
         $columnList = join(",", $columnNames );
         $tableResults = queryStatement($db, "SELECT $primaryID, $columnList from $tableName" );
diff --git a/admin_x25/admin_nav_x25.php b/admin_x25/admin_nav_x25.php
index 9de6758..7397b4d 100644
--- a/admin_x25/admin_nav_x25.php
+++ b/admin_x25/admin_nav_x25.php
@@ -6,6 +6,7 @@
             echo "<li><div id='add_item_Soda_button' class='hide_from_modal nav_buttons nav_buttons_soda'>Add Soda</div></li>";
             echo "<li><div id='edit_item_Soda_button' class='hide_from_modal nav_buttons nav_buttons_soda'>Edit Soda</div></li>";
             echo "<li><div id='restock_item_Soda_button' class='hide_from_modal nav_buttons nav_buttons_soda'>Restock Soda</div></li>";
+            echo "<li><div id='refill_Soda_button' class='nav_buttons nav_buttons_soda'>Refill Soda</div></li>";
             echo "<li><div id='inventory_Soda_button' class='nav_buttons nav_buttons_soda'>Inventory Soda</div></li>";
             echo "<li><div id='defective_item_Soda_button' class='hide_from_modal nav_buttons nav_buttons_soda'>Defect Soda</div></li>";
         echo "</ul>";
@@ -14,6 +15,7 @@
             echo "<li><div id='add_item_Snack_button' class='hide_from_modal nav_buttons nav_buttons_snack'>Add Snack</div></li>";
             echo "<li><div id='edit_item_Snack_button' class='hide_from_modal nav_buttons nav_buttons_snack'>Edit Snack</div></li>";
             echo "<li><div id='restock_item_Snack_button' class='hide_from_modal nav_buttons nav_buttons_snack'>Restock Snack</div></li>";
+            echo "<li><div id='refill_Snack_button' class='nav_buttons nav_buttons_snack'>Refill Snack</div></li>";
             echo "<li><div id='inventory_Snack_button' class='nav_buttons nav_buttons_snack'>Inventory Snack</div></li>";
             echo "<li><div id='defective_item_Snack_button' class='hide_from_modal nav_buttons nav_buttons_snack'>Defect Snack</div></li>";
         echo "</ul>";
@@ -28,6 +30,7 @@
             echo "<li><a href='" . ADMIN_LINK . "'><div class='nav_buttons nav_buttons_audit'>Users</div></a></li>";
             echo "<li><a href='" . ADMIN_PAYMENTS_LINK . "'><div class='nav_buttons nav_buttons_audit'>Payments</div></a></li>";
             echo "<li><a href='" . ADMIN_ITEMS_LINK . "'><div class='nav_buttons nav_buttons_audit'>Items</div></a></li>";
+            echo "<li><a href='" . ADMIN_ITEMS_IN_STOCK_LINK . "'><div class='nav_buttons nav_buttons_audit'>Items in Stock</div></a></li>";
             echo "<li><a href='" . ADMIN_RESTOCK_LINK . "'><div class='nav_buttons nav_buttons_audit'>Restock</div></a></li>";
             echo "<li><a href='" . ADMIN_INVENTORY_LINK . "'><div class='nav_buttons nav_buttons_audit'>Inventory/Purchases</div></a></li>";
             echo "<li><a href='" . ADMIN_WEEKLY_AUDIT_LINK ."'><div class='nav_buttons nav_buttons_audit'>Audit</div></a></li>";
@@ -39,6 +42,7 @@
             echo "<li><a href='" . ADMIN_AUDIT_REPORT_LINK ."'><div class='nav_buttons nav_buttons_audit'>Audit Report</div></a></li>";
             echo "<li><a href='" . ADMIN_BOT_LINK ."'><div class='nav_buttons nav_buttons_audit'>Bot</div></a></li>";
             echo "<li><a href='" . ADMIN_MIGRATION_LINK ."'><div class='nav_buttons nav_buttons_audit'>Migration</div></a></li>";
+            echo "<li><a href='" . ADMIN_TESTING_LINK ."'><div class='nav_buttons nav_buttons_audit'>Automation Testing</div></a></li>";
         echo "</ul>";
     echo "</nav>";
 ?>
diff --git a/admin_x25/admin_payments_x25.php b/admin_x25/admin_payments_x25.php
index 771545e..6f2b881 100644
--- a/admin_x25/admin_payments_x25.php
+++ b/admin_x25/admin_payments_x25.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 
 <?php
@@ -89,7 +88,11 @@
         
         $rowClass = "odd";
         
-        $results = $db->query('SELECT u.UserID, u.UserName, u.SlackID, u.FirstName, u.LastName, u.PhoneNumber, u.SodaBalance, u.SnackBalance, u.DateCreated, u.InActive FROM User u ORDER BY u.Inactive asc, lower(u.FirstName) ASC');
+        $statement = $db->prepare("SELECT u.UserID, u.UserName, u.SlackID, u.FirstName, u.LastName, u.PhoneNumber, u.SodaBalance, u.SnackBalance, u.DateCreated, u.InActive " .
+          "FROM User u " .
+          "ORDER BY u.Inactive asc, lower(u.FirstName) ASC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
             if( $row['Inactive'] == 1 ) {
                 $rowClass = "discontinued_row";
@@ -140,7 +143,13 @@
         $rowClass = "odd";
         $previousDate = "";
         
-        $results = $db->query("SELECT p.PaymentID, u.FirstName, u.LastName, p.Cancelled, p.Method, p.Amount, p.Date, p.Note, p.ItemType, p.MonthForPayment FROM Payments p LEFT JOIN User u on p.UserID = u.UserID WHERE p.Date >= date('now','-12 months') ORDER BY p.Date DESC");
+        $statement = $db->prepare("SELECT p.PaymentID, u.FirstName, u.LastName, p.Cancelled, p.Method, p.Amount, p.Date, p.Note, p.ItemType, p.MonthForPayment " .
+            "FROM Payments p " .
+            "LEFT JOIN User u on p.UserID = u.UserID " .
+            "WHERE p.Date >= date('now','-12 months') " .
+            "ORDER BY p.Date DESC" );
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
         
             if( $previousDate != "" && $previousDate != $row['Date'] ) {
diff --git a/admin_x25/admin_restock_x25.php b/admin_x25/admin_restock_x25.php
index 3e2d03c..4ab1608 100644
--- a/admin_x25/admin_restock_x25.php
+++ b/admin_x25/admin_restock_x25.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 
 <?php
@@ -50,7 +49,12 @@
         $rowClass = "odd";
         $previousItem = "";
         
-        $results = $db->query("SELECT s.Name, r.RestockID, r.Cancelled, r.ItemID, r.Date, r.NumberOfCans, r.Cost, (r.Cost/r.NumberOfCans) as 'CostEach', s.Price, s.DiscountPrice, s.Retired FROM Restock r JOIN Item s ON r.itemID = s.id  ORDER BY r.Date DESC");
+        $statement = $db->prepare("SELECT s.Name, r.RestockID, r.Cancelled, r.ItemID, r.Date, r.NumberOfCans, r.Cost, (r.Cost/r.NumberOfCans) as 'CostEach', s.Price, s.DiscountPrice, s.Retired " .
+            "FROM Restock r " .
+            "JOIN Item s ON r.itemID = s.id " .
+            "ORDER BY r.Date DESC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
             $maxCostEach = "";
             if( $previousItem != "" && $previousItem != $row['Name'] ) {
diff --git a/admin_x25/admin_shopping_guide_x25.php b/admin_x25/admin_shopping_guide_x25.php
index eae8013..a05ec31 100644
--- a/admin_x25/admin_shopping_guide_x25.php
+++ b/admin_x25/admin_shopping_guide_x25.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 
 <?php
@@ -41,7 +40,12 @@
         
         $rowClass = "odd";
         $number = 1;
-        $results = $db->query("SELECT ID, Type, Name, RefillTrigger, OutOfStockReporter, ImageURL, UnitName, UnitNamePlural, Date, DateModified, ModifyType, ChartColor, TotalCans, (BackstockQuantity + ShelfQuantity) as 'Total', Price, DiscountPrice, TotalIncome, TotalExpenses, Retired, Hidden, (ShelfQuantity + BackstockQuantity) as Total FROM Item WHERE Retired = 0 AND Hidden != 1 ORDER BY Type DESC, RefillTrigger ASC, Total ASC");
+        $statement = $db->prepare("SELECT ID, Type, Name, RefillTrigger, OutOfStockReporter, ImageURL, UnitName, UnitNamePlural, Date, ChartColor, TotalCans, " . getQuantityQuery() . ", Price, " .
+            "DiscountPrice, TotalIncome, TotalExpenses, Retired, Hidden FROM Item i " .
+            "WHERE Retired = 0 AND Hidden != 1 " .
+            "ORDER BY Type DESC, RefillTrigger ASC, TotalAmount ASC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
 
             $outOfStock = $row['RefillTrigger'];
@@ -65,7 +69,13 @@
             $STORE_PRICES_TABLE = "";
             $profitAtThisStore = false;
             
-            $resultsQuantity = $db->query("SELECT ItemID, CASE WHEN SalePrice IS NULL THEN RegularPrice/PackQuantity ELSE SalePrice/PackQuantity END CostEach, PackQuantity, Store, RegularPrice, SalePrice from Shopping_Guide WHERE ItemID = $item_id AND Store is NOT NULL ORDER BY CostEach");
+            $statementQuantity = $db->prepare("SELECT ItemID, CASE WHEN SalePrice IS NULL THEN RegularPrice/PackQuantity ELSE SalePrice/PackQuantity END CostEach, " .
+                "PackQuantity, Store, RegularPrice, SalePrice from Shopping_Guide " .
+                "WHERE ItemID = :itemID AND Store is NOT NULL " .
+                "ORDER BY CostEach");
+            $statementQuantity->bindValue( ":itemID", $item_id );
+            $resultsQuantity = $statementQuantity ->execute();
+
             $rowQuantity = $resultsQuantity->fetchArray();
             
             if( $rowQuantity !== false ) {
@@ -113,7 +123,7 @@
             echo "<div class='" . $row['Type'] . "_card card'>";
             echo "<div class='top_section'>";
             
-            $totalQuantity = $row['Total'];
+            $totalQuantity = $row['TotalAmount'];
             
             echo "<div style='height:220px;'>";
             
@@ -153,7 +163,10 @@
            
             
             
-            $resultsQuantity = $db->query("SELECT ItemID, PackQuantity from Shopping_Guide WHERE ItemID = $item_id AND Store is NULL");
+            $statementQuantity = $db->prepare("SELECT ItemID, PackQuantity from Shopping_Guide WHERE ItemID = :itemID AND Store is NULL");
+            $statementQuantity->bindValue( ":itemID", $item_id );
+            $resultsQuantity = $statementQuantity->execute();
+
             $rowQuantity = $resultsQuantity->fetchArray();
             
             if( $rowQuantity !== false ) {
diff --git a/admin_x25/admin_testing_x25.php b/admin_x25/admin_testing_x25.php
index 3c347d8..00852dc 100644
--- a/admin_x25/admin_testing_x25.php
+++ b/admin_x25/admin_testing_x25.php
@@ -1,10 +1,23 @@
 <?php
 
     include(__DIR__ . "/../appendix.php");
-    include_once(HANDLE_FORMS_PATH);
+    include_once(ACTION_FUNCTIONS_PATH);
+    include_once(TESTING_BASE_OBJ);
+    include_once(TESTING_OBJ);
+    include_once(ITEM_COST_DETAILS_OBJ);
+    include_once(USER_OBJ);
 
+    ini_set('max_execution_time', 3600);
     $dbPath = getTestDB();
 
+    // Global Vars
+    $sodaShelfQuantity = 0;
+    $sodaBackstockQuantity = 0;
+    $sodaItemIncome = 0;
+    $sodaItemExpenses = 0;
+    $sodaSiteIncome = 0;
+    $sodaSiteExpenses = 0;
+
 
     echo "<h1>Testing with [$dbPath] Database</h1>";
 
@@ -13,39 +26,11 @@
 
     echo "<table style='border-collapse:collapse; width: 100%;'>";
     echo "<tr>";
-    echo "<th>Status</th><th>Test Name</th><th>Expected</th><th>Actual</th>";
+    echo "<th>Status</th><th>Test Name</th><th>Actual</th><th>Expected</th>";
     echo "</tr>";
 
-    addItem( $db, "Bobbles", "FF3300", 0.58, "Snack" );
-    addItem( $db, "Norbles", "FF3300", 4.89, "Soda" );
-
-    assertColumn( $db, "Add Snack - Price" , "SELECT Price From Item WHERE Name = 'Bobbles'", "58" );
-    assertColumn( $db, "Add Snack - Name" , "SELECT Name From Item WHERE Name = 'Bobbles'", "Bobbles" );
-    assertColumn( $db, "Add Snack - Type" , "SELECT Type From Item WHERE Name = 'Bobbles'", "Snack" );
-
-    assertColumn( $db, "Add Soda - Price" , "SELECT Price From Item WHERE Name = 'Norbles'", "489" );
-    assertColumn( $db, "Add Soda - Name" , "SELECT Name From Item WHERE Name = 'Norbles'", "Norbles" );
-    assertColumn( $db, "Add Soda - Type" , "SELECT Type From Item WHERE Name = 'Norbles'", "Soda" );
+    $mainTest = new Testing();
+    $mainTest->runTest( $db );
 
     echo "</table>";
-    
-    function assertColumn( $db, $title, $sql, $expected ) {
-        $results = $db->query( $sql );
-        $resultRow = $results->fetchArray();
-        $actual = $resultRow[0];
-
-        $pass = $actual == $expected;
-        $rowColor = $pass ? "#73ffa5" : "#ff7373";
-        $passLabel = $pass ? "PASSED" : "FAILED";
-
-        $style = "style='background-color:$rowColor; padding: 15px; border:#000000 1px solid;'";
-
-        echo "<tr>";
-        echo "<td $style>$passLabel</td>";
-        echo "<td $style>$title</td>";
-        echo "<td $style>$expected</td>";
-        echo "<td $style>$actual</td>";
-        echo "<tr>";
-    }
-
 ?>
\ No newline at end of file
diff --git a/admin_x25/admin_weekly_audit_x25.php b/admin_x25/admin_weekly_audit_x25.php
index 890883f..9660d92 100644
--- a/admin_x25/admin_weekly_audit_x25.php
+++ b/admin_x25/admin_weekly_audit_x25.php
@@ -3,6 +3,7 @@
     
     $url = ADMIN_WEEKLY_AUDIT_LINK;
     include( HEADER_PATH );
+    include_once( ACTION_FUNCTIONS_PATH );
 
     echo "<span class='admin_box'>";
 
@@ -25,110 +26,9 @@
     echo "<div class='rounded_table_no_border'>";
     echo "<table>";
     echo "<thead><tr>";
-    echo "<th>AuditID</th><th>Date</th><th>Money in Mug</th><th>Calculated Money</th><th>Missing Money</th><th>Profit</th>";
+    echo "<th>AuditID</th><th>Date</th><th>Actual Money in Mug</th><th>Expected Money</th><th>Missing Money</th><th>Profit</th>";
     echo "</tr>";
-
-    $results = $db->query("SELECT a.AuditID, a.Date, a.MissingMoney, a.ItemType, p.Amount from Audit a JOIN Payments p ON a.auditID = p.auditID ORDER BY a.AuditID DESC");
-//    $results = $db->query("SELECT i.Name, i.Price, i.DiscountPrice, i.BackstockQuantity, i.ShelfQuantity, i.ID, (select count(*) from Purchase_History p where p.Date > '2019-02-13 19:01:34' and p.ItemID = i.ID) SitePurchases, (select sum(d.ShelfQuantity - d.ShelfQuantityBefore) AddedAmount from Daily_Amount d where d.Date > '2019-02-13 19:01:34' and d.ItemID = i.ID and (d.BackstockQuantityBefore - d.BackstockQuantity > 0) ) AddedItems FROM Item i WHERE i.Hidden != 1 AND i.Type ='" . $itemType . "' AND (i.BackstockQuantity + i.ShelfQuantity) > 0 ORDER BY i.ShelfQuantity DESC, Name asc, i.Retired");
-    $tabIndex = 1;
-    while ($row = $results->fetchArray()) {
-        $auditID = $row['AuditID'];
-        $date = $row['Date'];
-        $income = $row['Amount'];
-        $itemType = $row['ItemType'];
-
-        $resultsPreviousAudit = $db->query("SELECT AuditID, Date from Audit WHERE AuditID < $auditID and ItemType ='$itemType' ORDER BY AuditID DESC");
-        $previousAuditArray = $resultsPreviousAudit->fetchArray();
-        $previousAuditID = $previousAuditArray['AuditID'];
-        $previousAuditDate = $previousAuditArray['Date'];
-
-        if( $previousAuditID == "" ) {
-            // No previous audit to compare to
-            continue;
-        }
-        $breakdownTable = "";
-        $totalIncomeForAudit = 0.0;
-        $totalProfitForAudit = 0.0;
-
-        $shelfBeforeSQL = "SELECT before.ShelfQuantity as BeforeQuantity, before.Date, before.Price as BeforePrice, after.ShelfQuantity as AfterQuantity, after.Date, after.AuditID, item.DiscountPrice, item.Price, item.id  as ItemID, item.price as AfterPrice, item.Name, " .
-            "(select count(*) from Purchase_History p where p.Date > before.Date and p.ItemID = item.ID AND p.Date < after.Date) SitePurchases, " .
-            "(SELECT sum(d.ShelfQuantity-d.ShelfQuantityBefore) from Daily_Amount d WHERE d.ShelfQuantity > d.ShelfQuantityBefore AND d.ItemID = item.ID AND d.Date > before.Date AND d.Date < after.Date) Refills " .
-            "from Daily_Amount before JOIN Daily_Amount after ON before.ItemID = after.ItemID AND after.AuditID = $auditID " .
-            "JOIN Item item on before.ItemID = item.ID " .
-            "WHERE before.AuditID = $previousAuditID ORDER BY before.ItemID DESC";
-
-        $resultsShelfBefore = $db->query( $shelfBeforeSQL );
-
-        $breakdownTable .= "<div class='rounded_inner_table'>";
-        $breakdownTable .= "<table>";
-        $breakdownTable .= "<thead><tr>";
-        $breakdownTable .= "<th>Item</th><th>Amount Before</th><th>Total Refilled</th><th>Total Site Purchases</th><th>Amount After</th><th>Total <u>Non-Site</u> Purchases</th><th>Full Price</th><th>Total</th><th>Profit</th>";
-        $breakdownTable .= "</tr>";
-
-        while ($rowShelfBefore = $resultsShelfBefore->fetchArray()) {
-            $beforeQuantity = $rowShelfBefore['BeforeQuantity'];
-            $afterQuantity = $rowShelfBefore['AfterQuantity'];
-            $itemName = $rowShelfBefore['Name'];
-            $itemID = $rowShelfBefore['ItemID'];
-            $beforePrice = $rowShelfBefore['BeforePrice'];
-            $afterPrice = $rowShelfBefore['AfterPrice'];
-            $sitePurchases = $rowShelfBefore['SitePurchases'];
-            $refills = $rowShelfBefore['Refills'];
-
-            $restockResults = $db->query("SELECT (r.Cost/r.NumberOfCans) as 'CostEach' FROM Restock r JOIN Item s ON r.itemID = $itemID  ORDER BY r.Date DESC LIMIT 1");
-            $retailCostEach = $restockResults->fetchArray()['CostEach'];
-
-            $discountPrice = $rowShelfBefore['DiscountPrice'] != 0 ? $rowShelfBefore['DiscountPrice'] : $rowShelfBefore['Price'];
-            $price = $rowShelfBefore['Price'];
-
-            if( $refills == "" ) { $refills = 0; }
-
-            $differentPriceWarning = ( $beforePrice != $afterPrice ) ? "WARNING: DIFFERENT PRICE FOUND" : "";
-            if( $beforeQuantity == $afterQuantity ) {
-                continue;
-            }
-
-            $totalNonSitePurchases = $beforeQuantity - ($afterQuantity - $refills ) - $sitePurchases;
-            $totalNonSitePurchasesIncome = $totalNonSitePurchases * $beforePrice;
-
-            $profit = ($sitePurchases * ($discountPrice - $retailCostEach) ) - ($totalNonSitePurchases * $retailCostEach );
-            $profitStyle = $profit < 0 ? "style='color:#890101; font-weight:bold;'" : "";
-
-            $rowType = $totalNonSitePurchases != 0 ? "style='background-color: #ffb2b2; color:#000000;'" : "style='background-color: #98ffd9;'";
-            $refillColor = $refills > 0 ? "style='color:#07b91d; font-weight:bold;'" : "";
-            $breakdownTable .= "<tr $rowType>";
-            $breakdownTable .= "<td><b>$itemName</b> ($itemID) (" . getPriceDisplayWithDollars( round( $retailCostEach ) ) . ")(" . getPriceDisplayWithDollars( round( $price ) ) . ")(" . getPriceDisplayWithDollars( round( $discountPrice ) ) . ")</td>";
-            $breakdownTable .= "<td>$beforeQuantity</td>";
-            $breakdownTable .= "<td $refillColor>$refills</td>";
-            $breakdownTable .= "<td>$sitePurchases</td>";
-            $breakdownTable .= "<td>$afterQuantity</td>";
-            $breakdownTable .= "<td><b>$totalNonSitePurchases<b></td>";
-            $breakdownTable .= "<td>" . getPriceDisplayWithDollars( $beforePrice ) . "$differentPriceWarning</td>";
-            $breakdownTable .= "<td>" . getPriceDisplayWithDollars( $totalNonSitePurchasesIncome ) . "</td>";
-            $breakdownTable .= "<td $profitStyle>" . getPriceDisplayWithDollars( $profit ) . "</td>";
-            $breakdownTable .= "</tr>";
-
-            $totalIncomeForAudit += $totalNonSitePurchasesIncome;
-            $totalProfitForAudit += $profit;
-        }
-        $breakdownTable .= "</table>";
-
-        $missingMoney = $totalIncomeForAudit - $income;
-        $misingMoneyColor = $missingMoney > 0 ? "#b10505" : "#07b91d";
-        $profitColor = $totalProfitForAudit < 0 ? "#b10505" : "#07b91d";
-
-        echo "<tr>";
-        echo "<td><b>Audit Week #$auditID<br>Audit Week #$previousAuditID</b></td>";
-        echo "<td><span>$date<br>$previousAuditDate</span></td>";
-        echo "<td><span>" . getPriceDisplayWithDollars( $income ) . "</span></td>";
-        echo "<td><span>" . getPriceDisplayWithDollars( $totalIncomeForAudit ) . "</span></td>";
-        echo "<td><span style='color:$misingMoneyColor; font-weight:bold; font-size: 2em;'>" . getPriceDisplayWithDollars( $missingMoney ) . "</span></td>";
-        echo "<td><span style='color:$profitColor; font-weight:bold; font-size: 2em;'>" . getPriceDisplayWithDollars( $totalProfitForAudit ) . "</span></td>";
-        echo "</tr>";
-        echo "<tr>";
-        echo "<td colspan='7'>$breakdownTable</td>";
-        echo "</tr>";
-    }
+    printAudits( $db );
     echo "</table>";
     echo "</div>";
     echo "</div>";
@@ -136,6 +36,41 @@
 
 
     echo "</span>";
-?>
 
+    /**
+     * @param $db SQLite3
+     */
+    function printAudits( $db ) {
+        $statement = $db->prepare("SELECT a.AuditID, a.Date, a.MissingMoney, a.ItemType, p.Amount from Audit a JOIN Payments p ON a.auditID = p.auditID ORDER BY a.AuditID DESC");
+        $results = $statement->execute();
+
+//    $results = $db->query("SELECT i.Name, i.Price, i.DiscountPrice, i.BackstockQuantity, i.ShelfQuantity, i.ID, (select count(*) from Purchase_History p where p.Date > '2019-02-13 19:01:34' and p.ItemID = i.ID) SitePurchases, (select sum(d.ShelfQuantity - d.ShelfQuantityBefore) AddedAmount from Daily_Amount d where d.Date > '2019-02-13 19:01:34' and d.ItemID = i.ID and (d.BackstockQuantityBefore - d.BackstockQuantity > 0) ) AddedItems FROM Item i WHERE i.Hidden != 1 AND i.Type ='" . $itemType . "' AND (i.BackstockQuantity + i.ShelfQuantity) > 0 ORDER BY i.ShelfQuantity DESC, Name asc, i.Retired");
+        while ($row = $results->fetchArray()) {
+            $auditID = $row['AuditID'];
+            $date = $row['Date'];
+            $moneyInMug = $row['Amount'];
+            $itemType = $row['ItemType'];
+
+            $auditDetails = getAuditDetails( $db, $auditID, $itemType );
+
+            if( $auditDetails != null ) {
+                $missingMoney = $auditDetails->getTotalIncomeForAudit() - $moneyInMug;
+                $misingMoneyColor = $missingMoney > 0 ? "#b10505" : "#07b91d";
+                $profitColor = $auditDetails->getTotalProfitForAudit() < 0 ? "#b10505" : "#07b91d";
+
+                echo "<tr>";
+                echo "<td><b>Audit Week #$auditID<br>Audit Week #" . $auditDetails->getPreviousAuditID() . "</b></td>";
+                echo "<td><span>$date<br>" . $auditDetails->getPreviousAuditDate() . "</span></td>";
+                echo "<td><span>" . getPriceDisplayWithDollars($moneyInMug) . "</span></td>";
+                echo "<td><span>" . getPriceDisplayWithDollars( $auditDetails->getTotalIncomeForAudit() ) . "</span></td>";
+                echo "<td><span style='color:$misingMoneyColor; font-weight:bold; font-size: 2em;'>" . getPriceDisplayWithDollars($missingMoney) . "</span></td>";
+                echo "<td><span style='color:$profitColor; font-weight:bold; font-size: 2em;'>" . getPriceDisplayWithDollars($auditDetails->getTotalProfitForAudit()) . "</span></td>";
+                echo "</tr>";
+                echo "<tr>";
+                echo "<td colspan='7'>" . $auditDetails->getBreakdownTable() . "</td>";
+                echo "</tr>";
+            }
+        }
+    }
+?>
 </body>
\ No newline at end of file
diff --git a/admin_x25/admin_x25.php b/admin_x25/admin_x25.php
index b619137..be841a6 100644
--- a/admin_x25/admin_x25.php
+++ b/admin_x25/admin_x25.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 
 <?php
@@ -18,7 +17,11 @@
         $startCoops = false;
         $startInactives = false;
         
-        $results = $db->query('SELECT u.SodaBalance, u.SnackBalance, u.Credits, u.UserID, u.UserName, u.AnonName, u.SlackID, u.FirstName, u.LastName, u.PhoneNumber, u.DateCreated, u.InActive, u.IsCoop FROM User u ORDER BY u.Inactive asc, u.IsCoop, lower(u.FirstName) ASC');
+        $statement = $db->prepare("SELECT u.SodaBalance, u.SnackBalance, u.Credits, u.UserID, u.UserName, u.AnonName, u.SlackID, u.FirstName, u.LastName, u.PhoneNumber, u.DateCreated, u.InActive, u.IsCoop " .
+          "FROM User u " .
+          "ORDER BY u.Inactive asc, u.IsCoop, lower(u.FirstName) ASC");
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
             $isCoop = $row['IsCoop'] == 1;
             $isInactive = $row['Inactive'] == 1;
@@ -92,6 +95,34 @@
         echo "</table>";
         echo "</div>";
         echo "</div>";
+
+        echo "<div class='rounded_header'><span id='Sessions' class='title'>SESSIONS</span></div>";
+
+        $sessionLocation = session_save_path();
+
+        if( $sessionLocation == "" ) {
+            echo "Could not locate session information. Checking here instead: [" . sys_get_temp_dir() . "]<br><br>";
+            $sessionLocation = sys_get_temp_dir();
+        }
+
+        $sessionNames = scandir($sessionLocation);
+
+        foreach ($sessionNames as $sessionName) {
+
+            $filepath = $sessionLocation . "/"  . $sessionName;
+
+            if ( strpos($sessionName, "sess_") === 0 ) { //This skips temp files that aren't sessions
+                $sessionName = str_replace("sess_", "", $sessionName);
+
+                echo "<b>Session [$sessionName]</b><br>";
+                $fh = fopen($filepath, 'r') or die("File does not exist or you lack permission to open it");
+                $line = fgets($fh);
+                echo $line;
+                fclose($fh);
+                echo "<hr>";
+            }
+        }
+
         echo "</span>";
     echo "</span>";
     
diff --git a/admin_x25/build_admin_forms.php b/admin_x25/build_admin_forms.php
index fd07f3b..24baf4d 100644
--- a/admin_x25/build_admin_forms.php
+++ b/admin_x25/build_admin_forms.php
@@ -21,7 +21,12 @@
     // SHOPPING MODAL - We want Nick to access this form
     // ------------------------------------
     // Build Item Dropdown
-    $results = $db->query("SELECT ID, Name, Type FROM Item WHERE Hidden != 1 AND Retired != 1 order by type desc, name asc");
+    $statement = $db->prepare("SELECT ID, Name, Type " .
+        "FROM Item " .
+        "WHERE Hidden != 1 AND Retired != 1 " .
+        "ORDER BY type desc, name asc");
+    $results = $statement->execute();
+
     $item_options = "";
     $previousType = "";
     while ($row = $results->fetchArray()) {
@@ -38,7 +43,9 @@
         
     }
     
-    $results = $db->query("SELECT Store FROM Shopping_Guide Order by Date Desc LIMIT 1");
+    $statement = $db->prepare("SELECT Store FROM Shopping_Guide Order by Date Desc LIMIT 1");
+    $results = $statement->execute();
+
     $lastStore = $results->fetchArray()['Store'];
     
     if( $lastStore == "" ) { $lastStore = "BestProfits"; }
@@ -75,10 +82,10 @@
     echo $store_dropdown;
     echo "<label for='PackQuantity'>Pack Quantity</label>";
     echo "<input style='font-size:1.8em;' type='tel' id='PackQuantity' name='PackQuantity' class='text ui-widget-content ui-corner-all'/>";
-    echo "<label for='Price'>Price</label>";
-    echo "<input style='font-size:1.8em;' type='tel' id='Price' name='Price' class='text ui-widget-content ui-corner-all'/>";
+    echo "<label style='display:none;' id='PriceLabel' for='Price'>Price</label>";
+    echo "<input style='display:none; font-size:1.8em;' type='tel' id='Price' name='Price' class='text ui-widget-content ui-corner-all'/>";
     
-    echo "<div class='radio_status'>";
+    echo "<div style='display:none;' id='PriceChoices' class='radio_status'>";
     echo "<input class='radio' type='radio' id='RegularPrice' name='PriceType' value='regular' checked />";
     echo "<label for='RegularPrice'>Regular Price</label>";
     echo "<input class='radio' type='radio' id='SalePrice' name='PriceType' value='sale' />";
@@ -87,9 +94,9 @@
     
     echo "<input type='hidden' name='Shopping' value='Shopping'/><br>";
     echo "<input type='hidden' name='Submitter' value='" . $_SESSION["UserName"] . "'/><br>";
-    echo "<input type='hidden' name='redirectURL' value='" . ADMIN_SHOPPING_GUIDE_LINK . "'/><br>";
+    echo "<input type='hidden' name='redirectURL' value='" . ADMIN_CHECKLIST_LINK . "'/><br>";
     
-    echo "<input class='ui-button' style='padding:10px;' type='submit' name='Shopping_Submit' value='Add Shopping'/><br>";
+//    echo "<input class='ui-button' style='padding:10px;' type='submit' name='Shopping_Submit' value='Add Shopping'/><br>";
     
     echo "</fieldset>";
     echo "</form>";
@@ -99,7 +106,9 @@
         return;
     }
     
-    $results = $db->query("SELECT FirstName, LastName, UserID, SlackID, Inactive, IsCoop, SodaBalance, SnackBalance, AnonName From User Order By FirstName Asc");
+    $statement = $db->prepare("SELECT FirstName, LastName, UserID, SlackID, Inactive, IsCoop, SodaBalance, SnackBalance, AnonName From User Order By FirstName Asc");
+    $results = $statement->execute();
+
     $user_info = "";
     
     $user_options = "";
@@ -240,11 +249,22 @@
     echo "</form>";
     echo "</div>";
 
-    
-    
+
+    /**
+     * @param $db SQLite3
+     * @param $itemType
+     * @param $hideForms
+     * @param $isMobile
+     */
     function buildModalsForType( $db, $itemType, $hideForms, $isMobile ) {
         // Build Item Dropdown
-        $results = $db->query("SELECT ID, Name, Price, Retired, ChartColor, ImageURL, ThumbURL, UnitName, UnitNamePlural, DiscountPrice, Alias, CurrentFlavor, ExpirationDate FROM Item WHERE Type ='" . $itemType . "' AND Hidden != 1 order by retired asc, name asc");
+        $statement = $db->prepare("SELECT ID, Name, Price, Retired, ChartColor, ImageURL, ThumbURL, UnitName, UnitNamePlural, DiscountPrice, Alias, CurrentFlavor, ExpirationDate " .
+            "FROM Item " .
+            "WHERE Type = :itemType AND Hidden != 1 " .
+            "ORDER BY retired asc, name asc");
+        $statement->bindValue( ":itemType", $itemType );
+        $results = $statement->execute();
+
         $item_options = "";
         $item_options_no_discontinued = "";
         $item_info = "";
@@ -308,8 +328,12 @@
         echo "<input type='text' autocorrect='off' autocapitalize='off' maxlength='40'; name='ItemName' class='text ui-widget-content ui-corner-all'>";
         echo "<label for='ChartColor'>Color</label>";
         echo "<input name='ChartColor' class='color text ui-widget-content ui-corner-all'>";
-        echo "<label for='CurrentPrice'>Price of Can</label>";
-        echo "<input type='tel' name='CurrentPrice' value='0.50' class='text ui-widget-content ui-corner-all'/>";
+
+        echo "<label for='CurrentPrice'>Price</label>";
+        echo "<input type='tel' name='CurrentPrice' class='text ui-widget-content ui-corner-all'/>";
+
+        echo "<label for='CurrentPrice'>Discount Price</label>";
+        echo "<input type='tel' name='CurrentDiscountPrice' class='text ui-widget-content ui-corner-all'/>";
         
         echo "<input type='hidden' name='ItemType' value='$itemType'/><br>";
         echo "<input type='hidden' name='AddItem' value='AddItem'/><br>";
@@ -421,10 +445,24 @@
         echo "<input type='tel' style='font-size: 2em; 'name='Multiplier' value='1' class='text ui-widget-content ui-corner-all'/>";
         echo "</td>";
         echo "</tr>";
+
+        echo "<tr>";
+        echo "<td>";
+        echo "<label for='ExpDate'>Exp. Date</label>";
+        echo "</td>";
+        echo "<td colspan='2'>";
+        echo "<input type='text' style='font-size: 2em;' name='ExpDate' class='text ui-widget-content ui-corner-all'/>";
+        echo "</td>";
         
         echo "</table>";
         
-        $results = $db->query("SELECT ID, Name, Price, Retired, ChartColor, ImageURL, ThumbURL, UnitName, UnitNamePlural, DiscountPrice, Alias, CurrentFlavor, ExpirationDate FROM Item WHERE Type ='" . $itemType . "' AND Hidden != 1 order by name asc");
+        $statement = $db->prepare("SELECT ID, Name, Price, Retired, ChartColor, ImageURL, ThumbURL, UnitName, UnitNamePlural, DiscountPrice, Alias, CurrentFlavor, ExpirationDate " .
+            "FROM Item " .
+            "WHERE Type = :itemType AND Hidden != 1 " .
+            "ORDER BY name asc");
+        $statement->bindValue( ":itemType", $itemType );
+        $results = $statement->execute();
+
         $item_options = "";
         $item_options_no_discontinued = "";
         $item_info = "";
@@ -467,60 +505,81 @@
         // ------------------------------------
         // INVENTORY MODAL - ALL ITEMS
         // ------------------------------------
-        echo "<div id='inventory_" . $itemType . "' title='Enter Inventory' $hideForms>";
-        echo "<form id='inventory_" . $itemType . "_form' class='fancy' enctype='multipart/form-data' action='" . HANDLE_FORMS_LINK . "' method='POST'>";
-        
+        buildInventoryModal( $db, $itemType, $hideForms, $isMobile );
+        buildRefillModal( $db, $itemType, $hideForms, $isMobile );
+    }
+
+    /**
+     * @param $db SQLite3
+     * @param $itemType
+     * @param $hideForms
+     * @param $isMobile
+     */
+    function buildRefillModal( $db, $itemType, $hideForms, $isMobile ) {
+        $prefix = "refill";
+        $label = "Refill";
+
+        echo "<div id='" . $prefix . "_" . $itemType . "' title='Enter $label' $hideForms>";
+        echo "<form id='" . $prefix . "_" . $itemType . "_form' class='fancy' enctype='multipart/form-data' action='" . HANDLE_FORMS_LINK . "' method='POST'>";
+
         echo "<table>";
         echo "<tr>";
         echo "<th class='admin_header_column'>" . $itemType . "</th>";
         echo "<th class='admin_header_column'>Add to Shelf</th>";
         echo "<th class='admin_header_column'>Shelf Quantity</th>";
         echo "<th class='admin_header_column'>Backstock Quantity</th></tr>";
-            
-        $results = $db->query("SELECT Name, BackstockQuantity, ShelfQuantity, ID FROM Item WHERE Hidden != 1 AND Type ='" . $itemType . "' AND (BackstockQuantity + ShelfQuantity) > 0 ORDER BY ShelfQuantity DESC, Name asc, Retired");
+
+        $statement = $db->prepare("SELECT Name," . getQuantityQuery() . ",ID FROM Item i " .
+            "WHERE Hidden != 1 AND Type = :itemType AND TotalAmount > 0 " .
+            "ORDER BY ShelfAmount DESC, Name asc, Retired");
+        $statement->bindValue( ":itemType", $itemType );
+        $results = $statement->execute();
+
         $tabIndex = 1;
         while ($row = $results->fetchArray()) {
             $item_name = $row['Name'];
-            $backstockquantity = $row['BackstockQuantity'];
-            $shelfquantity = $row['ShelfQuantity'];
+            $backstockquantity = $row['BackstockAmount'];
+            $shelfquantity = $row['ShelfAmount'];
             $item_id = $row['ID'];
             echo "<tr>";
             echo "<td class='admin_header_column'><b>$item_name</b></td>";
-            echo "<input type='hidden' id='item_$item_id' name='ItemID[]' value='$item_id'/>";
-            echo "<td><input type='tel' onClick='this.select();' tabindex=$tabIndex id='AddToShelf_$item_id' value='0' name='AddToShelf[]' class='text ui-corner-all'/></td>";
-            echo "<td><input type='tel' onClick='this.select();' tabindex=0 id='ShelfQuantity_$item_id' value='$shelfquantity' name='ShelfQuantity[]' class='text ui-corner-all'/></td>";
-            echo "<td><input type='tel' tabindex=0 id='BackstockQuantity_$item_id' value='$backstockquantity' name='BackstockQuantity[]' class='text  ui-corner-all'/></td>";
+            echo "<input type='hidden' id='item_$item_id' name='RefillItemID[]' value='$item_id'/>";
+            echo "<td><input type='tel' onClick='this.select();' tabindex=$tabIndex id='RefillAddToShelf_$item_id' value='0' name='RefillAddToShelf[]' class='text ui-corner-all'/></td>";
+            echo "<td><input type='tel' readonly onClick='this.select();' tabindex=0 id='RefillShelfQuantity_$item_id' value='$shelfquantity' name='RefillShelfQuantity[]' class='text ui-corner-all'/></td>";
+            echo "<td><input type='tel' readonly tabindex=0 id='RefillBackstockQuantity_$item_id' value='$backstockquantity' name='RefillBackstockQuantity[]' class='text  ui-corner-all'/></td>";
             echo "</tr>";
-    
+
             $tabIndex++;
-            
+
             // On change, update the backstock quantity if you are increasing the shelf quantity
             echo "<script type='text/javascript'>";
             echo "$( document ).ready( function() {";
 
-            echo "$('#AddToShelf_$item_id').change(function () {";
-                echo "var incrementAmount = parseInt($('#AddToShelf_$item_id').val());";
+            echo "$('#RefillAddToShelf_$item_id').change(function () {";
+                echo "var incrementAmount = parseInt($('#RefillAddToShelf_$item_id').val());";
                 echo "console.log('New Increment: [' + incrementAmount + ']');";
                 echo "if(incrementAmount > 0) {";
-                    
-                    echo "var backStockQuantity = parseInt($('#BackstockQuantity_$item_id').val());";
-                    echo "var shelfQuantity = parseInt($('#ShelfQuantity_$item_id').val());";
+
+                    echo "var backStockQuantity = parseInt($('#RefillBackstockQuantity_$item_id').val());";
+                    echo "var shelfQuantity = parseInt($('#RefillShelfQuantity_$item_id').val());";
                     echo "var newBackstockQuantity = backStockQuantity - incrementAmount;";
                     echo "var newShelfQuantity = shelfQuantity + incrementAmount;";
-        
+
                     echo "if(newBackstockQuantity >= 0) {";
-                        echo "$('#BackstockQuantity_$item_id').val(newBackstockQuantity);";
-                        echo "$('#ShelfQuantity_$item_id').val(newShelfQuantity);";
-                        
-                        echo "$('#BackstockQuantity_$item_id').css('background-color', '#a6ff9b');";
-                        echo "$('#ShelfQuantity_$item_id').css('background-color', '#ff9b9b');";
-                        
+                        echo "$('#RefillBackstockQuantity_$item_id').val(newBackstockQuantity);";
+                        echo "$('#RefillShelfQuantity_$item_id').val(newShelfQuantity);";
+
+                        echo "$('#RefillBackstockQuantity_$item_id').css('background-color', '#ff9b9b');";
+                        echo "$('#RefillShelfQuantity_$item_id').css('background-color', '#a6ff9b');";
+
                         // Dont wan't to think changing from 6 to 7 will increase by 1, it will increase 7 again
-                        echo "$('#AddToShelf_$item_id').attr('placeholder', '+' + incrementAmount + ' units');";
-                        echo "$('#AddToShelf_$item_id').val('');";
+                        echo "$('#RefillAddToShelf_$item_id').attr('placeholder', '+' + incrementAmount + ' units');";
+//                        echo "$('#RefillAddToShelf_$item_id').val('');";
                     echo "} else {";
                         echo "alert('There is not enough backstock available for [' + incrementAmount + '] units.');";
                     echo "}";
+               echo "} else {";
+                    echo "alert('Cannot have a negative refill.');";
                 echo "}";
             echo "});"; // On Change
             echo "});"; // Document Ready
@@ -528,18 +587,91 @@
         }
         echo "</table>";
         echo "<input style='display:inline-block;' type='checkbox' id='SendToSlack' checked name='SendToSlack'/> Send to Slack";
+
+        echo "<input type='hidden' name='$label' value='Refill'/><br>";
+        echo "<input type='hidden' name='ItemType' value='$itemType'/><br>";
+        echo "<input type='hidden' name='redirectURL' value='" . ADMIN_LINK . "'/><br>";
+
+
+        if( $isMobile) {
+            echo "<input style='padding:10px;' type='submit' name='Update_Item_" . $itemType .  "_Submit' value='Refill'/><br>";
+        }
+        echo "</form>";
+        echo "</div>";
+    }
+
+    /**
+     * @param $db SQLite3
+     * @param $itemType
+     * @param $hideForms
+     * @param $isMobile
+     */
+    function buildInventoryModal( $db, $itemType, $hideForms, $isMobile ) {
+        $prefix = "inventory";
+        $label = "Inventory";
+
+        echo "<div id='" . $prefix . "_" . $itemType . "' title='Enter $label' $hideForms>";
+        echo "<form id='" . $prefix . "_" . $itemType . "_form' class='fancy' enctype='multipart/form-data' action='" . HANDLE_FORMS_LINK . "' method='POST'>";
+
+        echo "<table>";
+        echo "<tr>";
+        echo "<th class='admin_header_column'>" . $itemType . "</th>";
+        echo "<th class='admin_header_column'>Shelf Quantity</th>";
+        echo "<th class='admin_header_column'>Backstock Quantity</th></tr>";
+
+        $statement = $db->prepare("SELECT Name," . getQuantityQuery() . ",ID FROM Item i " .
+            "WHERE Hidden != 1 AND Type = :itemType AND TotalAmount > 0 " .
+            "ORDER BY ShelfAmount DESC, Name asc, Retired");
+        $statement->bindValue( ":itemType", $itemType );
+        $results = $statement->execute();
+
+        $tabIndex = 1;
+        while ($row = $results->fetchArray()) {
+            $item_name = $row['Name'];
+            $backstockquantity = $row['BackstockAmount'];
+            $shelfquantity = $row['ShelfAmount'];
+            $item_id = $row['ID'];
+            echo "<tr>";
+            echo "<td class='admin_header_column'><b>$item_name</b></td>";
+            echo "<input type='hidden' id='item_$item_id' name='ItemID[]' value='$item_id'/>";
+            echo "<td><input type='tel' onClick='this.select();' tabindex=0 id='ShelfQuantity_$item_id' value='$shelfquantity' name='ShelfQuantity[]' class='text ui-corner-all'/>";
+            echo "<input type='hidden' id='ShelfQuantityOriginal_$item_id' value='$shelfquantity'/></td>";
+            echo "<td><input type='tel' disabled tabindex=0 id='BackstockQuantity_$item_id' value='$backstockquantity' name='BackstockQuantity[]' class='text  ui-corner-all'/></td>";
+            echo "</tr>";
+
+            $tabIndex++;
+
+            // On change, update the backstock quantity if you are increasing the shelf quantity
+            echo "<script type='text/javascript'>";
+            echo "$( document ).ready( function() {";
+
+            echo "$('#ShelfQuantity_$item_id').change(function () {";
+                echo "var originalAmount = parseInt($('#ShelfQuantityOriginal_$item_id').val());";
+                echo "var newAmount = parseInt($('#ShelfQuantity_$item_id').val());";
+
+                echo "if( newAmount < originalAmount ) {";
+                    echo "$('#ShelfQuantity_$item_id').css('background-color', '#ff9b9b');";
+                echo "} else {";
+                    echo "alert('You cannot increase shelf amount. Use Refill to do that.');";
+                    echo "$('#ShelfQuantity_$item_id').val(originalAmount);";
+                echo "}";
+            echo "});"; // On Change
+            echo "});"; // Document Ready
+            echo "</script>";
+        }
+        echo "</table>";
         echo "<div style='margin-top: 10px;'>";
         echo "Audit Amount: <input type='tel' style='width:30%;' id='AuditAmount' name='AuditAmount' class='text ui-corner-all'/>";
         echo "</div>";
 
 
-        echo "<input type='hidden' name='Inventory' value='Inventory'/><br>";
+        echo "<input type='hidden' name='$label' value='$label'/><br>";
         echo "<input type='hidden' name='ItemType' value='$itemType'/><br>";
         echo "<input type='hidden' name='redirectURL' value='" . ADMIN_LINK . "'/><br>";
 
-            
+
         if( $isMobile) {
-            echo "<input style='padding:10px;' type='submit' name='Update_Item_" . $itemType .  "_Submit' value='Add Inventory'/><br>";
+            echo "<input style='padding:10px;' type='submit' name='Update_Item_" . $itemType .  "_Submit' value='Add $label'/><br>";
         }
         echo "</form>";
         echo "</div>";
@@ -565,6 +697,7 @@ $( document ).ready( function() {
     setItemInfo('Soda');
     setItemInfo('Snack');
     setUserInfo();
+    updateStoreOptions();
 });
 
 function setItemInfo( type ) {
@@ -657,4 +790,28 @@ $('#TotalAmount').change(function() {
     $('#SodaAmount').val( sodaAmount );
     $('#SnackAmount').val( snackAmount );
 } );
+
+$('#StoreDropdown').change(function() {
+    updateStoreOptions();
+} );
+
+function updateStoreOptions() {
+    var store = $('#StoreDropdown').val();
+
+    if( store == "BestProfits" ) {
+        $("#Price").hide();
+        $("#PriceLabel").hide();
+        $("#PriceChoices").hide();
+        $("#RegularPrice").hide();
+        $("#SalePrice").hide();
+    } else {
+        $("#Price").show();
+        $("#PriceLabel").show();
+        $("#PriceChoices").show();
+        $("#RegularPrice").show();
+        $("#SalePrice").show();
+    }
+    console.log("Store [" + store + "]" );
+}
+
 </script>
\ No newline at end of file
diff --git a/appendix.php b/appendix.php
index 1345c13..0e7c69b 100644
--- a/appendix.php
+++ b/appendix.php
@@ -2,7 +2,7 @@
     if(!function_exists('getDB')) {
         function getDB() {
             if (isTestServer()) {
-                return __DIR__ . getSlash() . "test_db" . getSlash() . "item.db";
+                return __DIR__ . getSlash() . "test_db" . getSlash() . "item_unit_testing.db";
             } else {
                 return __DIR__ . getSlash() . "db" . getSlash() . "item.db";
             }
@@ -65,12 +65,14 @@
         define( "IMAGES_LINK", "$subdomain/images/" );
         
         define( "ADMIN_WEEKLY_AUDIT_LINK", "$subdomain/admin_x25/admin_weekly_audit_x25.php" );
+        define( "ADMIN_TESTING_LINK", "$subdomain/admin_x25/admin_testing_x25.php" );
         define( "ADMIN_AUDIT_REPORT_LINK", "$subdomain/admin_x25/admin_audit_x25.php" );
         define( "ADMIN_BOT_LINK", "$subdomain/admin_x25/admin_bot_x25.php" );
         define( "ADMIN_LINK", "$subdomain/admin_x25/admin_x25.php" );
         define( "ADMIN_DEFECTIVES_LINK", "$subdomain/admin_x25/admin_defectives_x25.php" );
         define( "ADMIN_INVENTORY_LINK", "$subdomain/admin_x25/admin_inventory_x25.php" );
         define( "ADMIN_ITEMS_LINK", "$subdomain/admin_x25/admin_items_x25.php" );
+        define( "ADMIN_ITEMS_IN_STOCK_LINK", "$subdomain/admin_x25/admin_items_in_stock_x25.php" );
         define( "ADMIN_PAYMENTS_LINK", "$subdomain/admin_x25/admin_payments_x25.php" );
         define( "ADMIN_RESTOCK_LINK", "$subdomain/admin_x25/admin_restock_x25.php" );
         define( "ADMIN_SHOPPING_GUIDE_LINK", "$subdomain/admin_x25/admin_shopping_guide_x25.php" );
@@ -94,6 +96,38 @@
     if( !defined("UI_FUNCTIONS_PATH")) {
         define( "UI_FUNCTIONS_PATH", __DIR__ . $slash . "functions" . $slash . "ui_functions.php" );
     }
+
+    if( !defined("QUANTITY_FUNCTIONS_PATH")) {
+        define( "QUANTITY_FUNCTIONS_PATH", __DIR__ . $slash . "functions" . $slash . "quantity_functions.php" );
+    }
+
+    if( !defined("ACTION_FUNCTIONS_PATH")) {
+        define( "ACTION_FUNCTIONS_PATH", __DIR__ . $slash . "functions" . $slash . "action_functions.php" );
+    }
+
+    if( !defined("ITEM_OBJ")) {
+        define( "ITEM_OBJ", __DIR__ . $slash . "common" . $slash . "Item.php" );
+    }
+
+    if( !defined("AUDIT_OBJ")) {
+        define( "AUDIT_OBJ", __DIR__ . $slash . "common" . $slash . "AuditDetails.php" );
+    }
+
+    if( !defined("ITEM_COST_DETAILS_OBJ")) {
+        define( "ITEM_COST_DETAILS_OBJ", __DIR__ . $slash . "common" . $slash . "ItemCostDetails.php" );
+    }
+
+    if( !defined("USER_OBJ")) {
+        define( "USER_OBJ", __DIR__ . $slash . "common" . $slash . "User.php" );
+    }
+
+    if( !defined("TESTING_OBJ")) {
+        define( "TESTING_OBJ", __DIR__ . $slash . "common" . $slash . "Testing.php" );
+    }
+
+    if( !defined("TESTING_BASE_OBJ")) {
+        define( "TESTING_BASE_OBJ", __DIR__ . $slash . "common" . $slash . "TestingBase.php" );
+    }
     
     if( !defined("SLACK_FUNCTIONS_PATH")) {
         define( "SLACK_FUNCTIONS_PATH", __DIR__ . $slash . "functions" . $slash . "slack_functions.php" );
diff --git a/common/Item.php b/common/Item.php
index fc2771d..1925318 100644
--- a/common/Item.php
+++ b/common/Item.php
@@ -6,7 +6,62 @@
  * Time: 4:47 PM
  */
 
-class Item
-{
+include_once(ACTION_FUNCTIONS_PATH);
 
-}
\ No newline at end of file
+class Item {
+	public $itemID = 0;
+	public $price = 0;
+	public $discountPrice = 0;
+	public $retailPrice = 0;
+	public $expDate = "";
+
+	public $itemName = "";
+	public $itemType = "";
+
+	public $itemDetailsID = 0;
+
+
+	public function __construct($itemID, $price, $discountPrice, $retailPrice, $expDate, $itemName, $itemType, $itemDetailsID) {
+		$this->itemID = $itemID;
+		$this->price = $price;
+		$this->discountPrice = $discountPrice;
+		$this->retailPrice = $retailPrice;
+		$this->expDate = $expDate;
+		$this->itemName = $itemName;
+		$this->itemType = $itemType;
+		$this->itemDetailsID = $itemDetailsID;
+	}
+
+	public function getFullPrice() {
+		return $this->price;
+	}
+
+	public function getDiscountPrice() {
+		return $this->discountPrice;
+	}
+
+	public function getRetailPrice() {
+		return $this->retailPrice;
+	}
+
+	public function getSitePurchasePrice() {
+	   return getSitePurchasePrice( $this->discountPrice, $this->price );
+	}
+
+	public function getManualPurchasePrice() {
+	    return $this->price;
+	}
+
+	public function getItemName() {
+	    return $this->itemName;
+    }
+
+    public function getItemType() {
+	    return $this->itemType;
+    }
+
+    public function getItemDetailsID() {
+	    return $this->itemDetailsID;
+    }
+}
+?>
\ No newline at end of file
diff --git a/common/ItemCostDetails.php b/common/ItemCostDetails.php
index 3414f6d..48fde58 100644
--- a/common/ItemCostDetails.php
+++ b/common/ItemCostDetails.php
@@ -6,7 +6,463 @@
  * Time: 8:35 PM
  */
 
-class ItemCostDetails
-{
+class ItemCostDetails extends TestingBase {
+
+    public $itemIncome = 0;
+	public $itemExpenses = 0;
+	public $itemProfit = 0;
+	public $siteIncome = 0;
+	public $siteExpenses = 0;
+	public $sitePayments = 0;
+	public $siteProfit = 0;
+	public $restockTrigger = 0;
+	public $refillTrigger = 0;
+
+	public $latestInventoryRows = array();
+
+	public $itemID = 0;
+	public $shelfQuantity = 0;
+	public $backstockQuantity = 0;
+	public $itemPrice = 0;
+	public $itemDiscountPrice = 0;
+	public $itemRetailPrice = 0;
+
+	public $itemType = "";
+	public $db = null;
+
+
+	public function __construct( $db, $itemType, $itemNamePrefix, $itemPrice, $itemDiscountPrice ) {
+		$this->db = $db;
+		$this->itemType = $itemType;
+		$this->itemName = $itemNamePrefix . rand(1, 6000);
+		$this->itemPrice = $itemPrice * 100;
+		$this->itemDiscountPrice = $itemDiscountPrice * 100;
+
+		$randomMarginPerItem = rand( 5, 30 );
+		// Candy Item Price = 0.20 each
+        // Candy Discount Price = 0.17 each
+
+        // Candy Item Retail Price = 0.10 each
+
+        // Profit is 0.10 for non-site
+        // Profit is 0.07 for site
+		$this->itemRetailPrice = $this->itemDiscountPrice  - $randomMarginPerItem;
+
+		include_once(HANDLE_FORMS_PATH);
+	}
+
+    /**
+     * @param $user User
+     */
+	public function testSetup( $user )
+    {
+        // CREATE ITEMS
+        $this->addSection("Adding " . $this->itemType . " Item");
+
+        $createItemResponse = addItem($this->db, $this->itemName, "FF3300", $this->itemPrice / 100.00, $this->itemDiscountPrice / 100.00, $this->itemType);
+
+        $this->assertText("$this->itemName Item Success", $createItemResponse, "Item \"$this->itemName\" added successfully.");
+
+        $createItemResponse = addItem($this->db, $this->itemName, "FF3300", $this->itemPrice / 100.00, $this->itemDiscountPrice / 100.00, $this->itemType);
+
+        $this->assertText("$this->itemType Item Already Exists", $createItemResponse, "Item \"$this->itemName\" already exists.");
+
+        // Get IDs
+        $this->itemID = $this->getValue($this->db, "SELECT ID From Item WHERE Name = '$this->itemName'");
+        $this->siteIncome = $this->getValue($this->db, "SELECT SiteIncome From Information WHERE ItemType = '$this->itemType'");
+        $this->siteExpenses = $this->getValue($this->db, "SELECT SiteExpenses From Information WHERE ItemType = '$this->itemType'");
+        $this->sitePayments = $this->getValue($this->db, "SELECT SitePayments From Information WHERE ItemType = '$this->itemType'");
+        $this->siteProfit = $this->getValue($this->db, "SELECT SiteProfit From Information WHERE ItemType = '$this->itemType'");
+
+        $this->assertColumn($this->db, "Add $this->itemType - ID", "SELECT ID From Item WHERE Name = '$this->itemName'", "$this->itemID");
+        $this->assertColumn($this->db, "Add $this->itemType - Price", "SELECT Price From Item WHERE Name = '$this->itemName'", $this->itemPrice);
+        $this->assertColumn($this->db, "Add $this->itemType - DiscountPrice", "SELECT DiscountPrice From Item WHERE Name = '$this->itemName'", $this->itemDiscountPrice);
+        $this->assertColumn($this->db, "Add $this->itemType - Name", "SELECT Name From Item WHERE Name = '$this->itemName'", "$this->itemName");
+        $this->assertColumn($this->db, "Add $this->itemType - Type", "SELECT Type From Item WHERE Name = '$this->itemName'", "$this->itemType");
+
+        $this->assertQuantities();
+        $this->assertItemProfit();
+        $this->assertSiteProfit();
+
+
+        // RESTOCK THOSE ITEMS
+        $this->addSection("Restock  " . $this->itemType . " Item");
+        $firstRestockQuantity = rand( 1, 10 );
+        $this->addDatapoint( "Restocking with zero backstock." );
+        $this->testRestock( $firstRestockQuantity );
+
+        // Again, with expenses and backstock no longer 0
+        $secondRestockQuantity = rand( 1, 10 );
+        $this->addDatapoint( "Restocking with non-zero backstock." );
+        $this->testRestock( $secondRestockQuantity );
+
+        // Again, this is the quantity that will be left as backstock
+        $thirdRestockQuantity = rand( 4, 10 );
+        $this->addDatapoint( "Restocking the amount that will be left as backstock as the refill." );
+        $this->testRestock( $thirdRestockQuantity );
+
+        $this->addSection("Refill " . $this->itemType . " Item");
+
+        // Leave the $thirdRestockQuantity as backstock
+        $refillQuantity = $firstRestockQuantity + $secondRestockQuantity;
+
+        $this->addDatapoint( "Refilling with the first two restock quantities." );
+        $this->testRefill( $refillQuantity );
+
+
+        $this->addDatapoint( "Refilling with just enough to trigger a Restock Trigger." );
+        $quantityToRestock = $this->backstockQuantity - 3;
+        $this->restockTrigger = 1;
+        $this->testRefill( $quantityToRestock );
+
+        $this->addSection("Inventory " . $this->itemType . " Item");
+        $this->testInventory( 5 );
+        $this->refillTrigger = 1;
+        $this->testInventory( 1 );
+
+        $this->addSection("Purchase " . $this->itemType . " Item");
+        $this->testPurchase( $user, 1, 0 );
+        $this->testPurchase( $user, 1, 0 );
+
+        $this->testRefill( $this->backstockQuantity );
+
+        $this->addSection("Purchase " . $this->itemType . " Item - Out of Stock");
+        $this->testPurchase( $user, 2, 0 );
+        $this->testPurchase( $user, 2, 0 );
+
+        $this->testRestock( 23 );
+        $this->testRefill( 23 );
+        $this->refillTrigger = 0;
+
+        $this->addSection("Purchase " . $this->itemType . " Item - Cash Only");
+        $this->testPurchase( $user, 3, 1 );
+
+        $this->addSection("Purchase " . $this->itemType . " Item - Credits Only");
+        $amountForCreditsExactlyWholeCents = 3 * $this->itemDiscountPrice;
+        $amountForCreditsAndBalanceWholeCents = 5 * $this->itemDiscountPrice;
+        $creditsToCoverBothTestsWholeCents = $amountForCreditsExactlyWholeCents + $amountForCreditsAndBalanceWholeCents;
+        $creditsToCoverBothTests = ceil( ( $creditsToCoverBothTestsWholeCents ) / 100 );
+        $creditsToCoverBothTestsWholeCents = $creditsToCoverBothTests * 100;
+
+        $this->addDatapoint( "Buying [$$creditsToCoverBothTestsWholeCents&cent;] credits for the user." );
+        creditUser( $this->db, $this->isHidingSlack(), $user->getUserID(), $creditsToCoverBothTests, false );
+        $user->increaseCredits( $creditsToCoverBothTestsWholeCents );
+
+        // This will be small enough to not use all credits
+        $this->testPurchase( $user, 3, 0 );
+
+        $this->addSection("Purchase " . $this->itemType . " Item - Credits and Balance");
+
+        // This will use up all credits along with balance
+        $this->testPurchase( $user, 8, 0 );
+
+        $this->addSection("Purchase " . $this->itemType . " Item - Credits Only Exactly at Zero");
+
+        $amountForCreditsExactlyWholeCents = 4 * $this->itemDiscountPrice;
+        $amountForCreditsExactly = $amountForCreditsExactlyWholeCents / 100;
+
+        $this->addDatapoint( "Buying [$$amountForCreditsExactlyWholeCents&cent;] credits for the user." );
+        creditUser( $this->db, $this->isHidingSlack(), $user->getUserID(), $amountForCreditsExactly, false );
+        $user->increaseCredits( round( $amountForCreditsExactlyWholeCents ) );
+
+        // This will use up all credits to exactly 0
+        $this->testPurchase( $user, 4, 0 );
+
+        $this->addSection("Returning Credits");
+        $creditsToBuyWholeCents = 2823;
+        $creditsToBuy = 28.23;
+        $creditsToSellWholeCents = 1719;
+        $creditsToSell = 17.19;
+        $this->addDatapoint( "Buying [$$creditsToBuyWholeCents&cent;] credits for the user." );
+        creditUser( $this->db, $this->isHidingSlack(), $user->getUserID(), $creditsToBuy, false );
+        $user->increaseCredits( $creditsToBuyWholeCents );
+
+        $this->addDatapoint( "Returning [$$creditsToSellWholeCents&cent;] credits for the user." );
+        creditUser( $this->db, $this->isHidingSlack(), $user->getUserID(), $creditsToSell, true );
+        $user->increaseCredits( $creditsToSellWholeCents * -1 );
+
+        $user->assertUserBalance();
+
+        $this->addSection("Defect " . $this->itemType . " Item");
+        $this->testDefective( 5 );
+
+
+        $this->addSection("--- " .  $this->itemType . " Test Complete ---");
+    }
+
+    function testRefill( $refillQuantity ) {
+	    $itemIDs = array();
+        $addToShelf = array();
+
+        $itemIDs[] = $this->itemID;
+        $addToShelf[]  = $refillQuantity;
+
+	    $this->addDatapoint( "Refilling Item [$this->itemID] with [$refillQuantity] quantity" );
+        refillItem( $this->db, $this->isHidingSlack(), $itemIDs, $addToShelf, true );
+        $this->setInventoryHistory( $refillQuantity, "REFILL" );
+
+        $this->shelfQuantity = $this->shelfQuantity + $refillQuantity;
+        $this->backstockQuantity = $this->backstockQuantity - $refillQuantity;
+
+        $this->addDatapoint( "After refill all profits should remain the same." );
+        $this->assertInventoryHistory( $refillQuantity, "REFILL" );
+        $this->assertQuantities();
+        $this->assertItemProfit();
+        $this->assertSiteProfit();
+        $this->assertRestockTrigger();
+    }
+
+    function testInventory( $newShelfQuantity ) {
+	    $itemIDs = array();
+        $removeFromShelf = array();
+
+        $itemIDs[] = $this->itemID;
+        $removeFromShelf[] = $newShelfQuantity;
+        $inventoryQuantity = $this->shelfQuantity - $newShelfQuantity;
+
+	    $this->addDatapoint( "Inventory Item [$this->itemID] from [$this->shelfQuantity] to [$newShelfQuantity] quantity" );
+        inventoryItem( $this->db, $itemIDs, $removeFromShelf, "", $this->itemType );
+        $this->setInventoryHistory( $inventoryQuantity, "INVENTORY" );
+
+        $this->shelfQuantity = $newShelfQuantity;
+
+        // We round so it becomes an int, not float
+        $itemIncomeForInventory = round($this->itemPrice * $inventoryQuantity );
+        $itemRetailTotalPrice = round($this->itemRetailPrice * $inventoryQuantity);
+        $this->addDatapoint( "[$this->itemPrice&cent;] price x [$inventoryQuantity] quantity = [$itemIncomeForInventory] income");
+
+        $profitForItems = $itemIncomeForInventory - $itemRetailTotalPrice;
+        $this->addDatapoint( "[$itemIncomeForInventory&cent;] income - [$itemRetailTotalPrice&cent;] retail = [$profitForItems&cent;] profit");
+
+        $this->siteProfit += $profitForItems;
+        $this->itemProfit += $profitForItems;
+
+        $this->siteIncome += $itemIncomeForInventory;
+        $this->itemIncome += $itemIncomeForInventory;
+
+        $this->assertQuantities();
+        $this->assertInventoryHistory( $inventoryQuantity, "INVENTORY" );
+        $this->assertItemProfit();
+        $this->assertSiteProfit();
+        $this->assertRefillTrigger();
+    }
+
+    function testDefective( $quantity ) {
+        $newShelfQuantity = $this->shelfQuantity - $quantity;
+
+	    $this->addDatapoint( "Defecting Item [$this->itemID] from [$this->shelfQuantity] to [$newShelfQuantity] quantity" );
+        defectItem( $this->db, $this->itemID, $quantity );
+
+        $this->shelfQuantity = $newShelfQuantity;
+
+        // Complete loss - no income
+
+        $this->assertQuantities();
+        $this->assertItemProfit();
+        $this->assertSiteProfit();
+        $this->assertRefillTrigger();
+    }
+
+    /**
+     * @param $user User
+     * @param $quantity int
+     */
+    function testPurchase( $user, $quantity, $cashOnly ) {
+	    $itemIDs = array();
+        for( $i = 0; $i < $quantity; $i++ ) {
+            $itemIDs[] = $this->itemID;
+        }
+
+	    $this->addDatapoint( "Purchase Item ID [$this->itemID] from [$this->shelfQuantity] on shelf with [$quantity] desired quantity" );
+
+	    if( $this->shelfQuantity - $quantity >= 0 ) {
+
+	        $this->setInventoryHistory($quantity, "INVENTORY");
+	        $this->shelfQuantity -= $quantity;
+
+	        $itemIncomeForInventory = round($this->itemDiscountPrice * $quantity);
+	        $itemRetailTotalPrice = round($this->itemRetailPrice * $quantity);
+            $this->addDatapoint("[$this->itemDiscountPrice&cent;] price x [$quantity] quantity = [$itemIncomeForInventory&cent;] income");
+
+            $this->siteIncome += $itemIncomeForInventory;
+            $this->itemIncome += $itemIncomeForInventory;
+
+            $profitForItems = $itemIncomeForInventory - $itemRetailTotalPrice;
+            $this->addDatapoint( "[$itemIncomeForInventory&cent;] income - [$itemRetailTotalPrice&cent;] retail = [$profitForItems&cent;] profit");
+
+            $this->siteProfit += $profitForItems;
+            $this->itemProfit += $profitForItems;
+
+            if( $cashOnly == 1 ) {
+                $this->addDatapoint( "Cash-Only. Only decrement the quantity. Increase profits." );
+            } else {
+                $creditsLeft = $user->getCreditsLeft();
+                $this->addDatapoint( "Amount of credits left: [$creditsLeft]" );
+
+                if( $creditsLeft >= 0 ) {
+                    // 100 total - 40 credits = 60 left for the balance
+                    // 100 total - 300 credits = -200 left for the credits
+                    $amountAddToBalance = $itemIncomeForInventory - $creditsLeft;
+                    $this->addDatapoint( "Credits left. Weird math going down. Total [$itemIncomeForInventory&cent;] Amount for Balance: [$amountAddToBalance&cent;]" );
+                    if( $amountAddToBalance >= 0 ) {
+                        // Part balance, part credits
+                        $this->addDatapoint( "Part Balance, Part Credits. Balance Increase [$amountAddToBalance&cent;] All Credits Used [$creditsLeft&cent;]" );
+                        $user->increaseBalance($this->itemType, $amountAddToBalance);
+                        $user->decreaseCredits( $creditsLeft );
+                    } else {
+                        $this->addDatapoint( "Only credits used. Balance unaffected. Decrement credits: [$itemIncomeForInventory]" );
+                        $user->decreaseCredits( $itemIncomeForInventory );
+                    }
+                } else {
+                    $this->addDatapoint( "Increasing Balance by [$itemIncomeForInventory]" );
+                    $user->increaseBalance($this->itemType, $itemIncomeForInventory);
+                }
+            }
+        } else {
+	        $this->addDatapoint( "There is zero left. Nothing should be changed." );
+        }
+
+        purchaseItems( $this->db, $this->isHidingSlack(), $user->getUserID(), $itemIDs, $cashOnly );
+
+        $this->assertQuantities();
+        $this->assertInventoryHistory( $quantity, "INVENTORY" );
+        $this->assertItemProfit();
+        $this->assertSiteProfit();
+        $this->assertRefillTrigger();
+        $user->assertUserBalance();
+    }
+
+    function testRestock( $randomItemRestockQuantity ) {
+
+        $randomItemRestockCostInDB = ($this->itemRetailPrice * $randomItemRestockQuantity );
+        $randomItemRestockCost = $randomItemRestockCostInDB / 100;
+
+        $this->addDatapoint( "Restocking [$this->itemName] with [$randomItemRestockQuantity] qty at [$" . $randomItemRestockCost . "] Retail Cost. Item Price [" . $this->itemPrice . "] Discount Price: [$this->itemDiscountPrice]" );
+
+        $this->siteExpenses += $randomItemRestockCostInDB;
+        $this->itemExpenses += $randomItemRestockCostInDB;
+        $this->backstockQuantity += $randomItemRestockQuantity;
+
+        restockItem( $this->db, $this->itemID, $randomItemRestockQuantity, 1, $randomItemRestockCost, $this->itemType, "01/20/2029" );
+
+        $this->assertQuantities();
+        $this->assertItemProfit();
+        $this->assertSiteProfit();
+    }
+
+
+    function assertQuantities() {
+        // Get Quantities
+        /* @var $db SQLite3 */
+        $db = $this->db;
+        $statement = $db->prepare("SELECT " . getQuantityQuery() . " FROM Item i WHERE ID = :itemID" );
+        $statement->bindValue( ":itemID", $this->itemID );
+        $results = $statement->execute();
+
+        $itemQuantities = $results->fetchArray();
+
+        $actualShelfQuantity = $itemQuantities['ShelfAmount'];
+        $actualBackstockQuantity = $itemQuantities['BackstockAmount'];
+
+        $this->assertText("Shelf Quantity", $actualShelfQuantity, $this->shelfQuantity );
+        $this->assertText("Backstock Quantity", $actualBackstockQuantity, $this->backstockQuantity );
+    }
+
+    function assertItemProfit() {
+        // Get and SET Quantities
+        $actualItemIncome = $this->getValue($this->db, "SELECT ItemIncome From Item WHERE Name = '$this->itemName'");
+        $actualItemExpenses = $this->getValue($this->db, "SELECT ItemExpenses From Item WHERE Name = '$this->itemName'");
+        $actualItemProfit = $this->getValue($this->db, "SELECT ItemProfit From Item WHERE Name = '$this->itemName'");
+
+        $this->assertText("$this->itemName - Income", $actualItemIncome, $this->itemIncome );
+        $this->assertText("$this->itemName - Expenses", $actualItemExpenses, $this->itemExpenses );
+        $this->assertText("$this->itemName - Profit", $actualItemProfit, $this->itemProfit );
+    }
+
+    function assertSiteProfit() {
+        // Get Quantities
+        $actualSiteIncome = $this->getValue($this->db, "SELECT SiteIncome From Information WHERE ItemType = '$this->itemType'");
+        $actualSiteExpenses = $this->getValue($this->db, "SELECT SiteExpenses From Information WHERE ItemType = '$this->itemType'");
+        $actualSitePayments = $this->getValue($this->db, "SELECT SitePayments From Information WHERE ItemType = '$this->itemType'");
+        $actualSiteProfit = $this->getValue($this->db, "SELECT SiteProfit From Information WHERE ItemType = '$this->itemType'");
+
+        $this->assertText("$this->itemType - Site Income", $actualSiteIncome, $this->siteIncome );
+        $this->assertText("$this->itemType - Site Expenses", $actualSiteExpenses, $this->siteExpenses );
+        $this->assertText("$this->itemType - Site Payments", $actualSitePayments, $this->sitePayments );
+        $this->assertText("$this->itemType - Site Profit", $actualSiteProfit, $this->siteProfit );
+    }
+
+    function assertRestockTrigger() {
+        $actualRestockTrigger = $this->getValue($this->db, "SELECT RestockTrigger From Item WHERE Name = '$this->itemName'");
+
+        $this->assertText("Restock Trigger $this->itemType", $actualRestockTrigger, $this->restockTrigger );
+    }
+
+    function assertRefillTrigger() {
+        $actualRefillTrigger = $this->getValue($this->db, "SELECT RefillTrigger From Item WHERE Name = '$this->itemName'");
+
+        $this->assertText("Refill Trigger $this->itemType ", $actualRefillTrigger, $this->refillTrigger );
+    }
+
+    function setInventoryHistory( $numberOfRows, $type ) {
+        $currentShelf = $this->shelfQuantity;
+        $currentBackstock = $this->backstockQuantity;
+
+        // Clear array for new rows
+        $this->latestInventoryRows = array();
+
+        for( $row = 1; $row <= $numberOfRows; $row++ ) {
+            $expectedBackstockBefore = 0;
+            $expectedBackstock = 0;
+            $expectedShelfBefore = 0;
+            $expectedShelf = 0;
+
+            if( $type == "REFILL" ) {
+                $expectedBackstockBefore = $currentBackstock;
+                $expectedBackstock = $currentBackstock - 1;
+                $expectedShelfBefore = $currentShelf;
+                $expectedShelf = $currentShelf + 1;
+
+                $currentShelf++;
+                $currentBackstock--;
+            } else if( $type == "INVENTORY" ) {
+                $expectedBackstockBefore = $currentBackstock;
+                $expectedBackstock = $currentBackstock;
+                $expectedShelfBefore = $currentShelf;
+                $expectedShelf = $currentShelf - 1;
+
+                $currentShelf--;
+            }
+
+            $this->latestInventoryRows[] = "BackBefore[$expectedBackstockBefore] Back[$expectedBackstock] ShelfBefore[$expectedShelfBefore] Shelf[$expectedShelf] Item[$this->itemID]";
+        }
+    }
+    function assertInventoryHistory( $numberOfRows, $type ) {
+        /* @var $db SQLite3 */
+        $db = $this->db;
+        $statementPurchases = $db->prepare("SELECT * from Inventory_History ORDER BY ID DESC LIMIT $numberOfRows");
+        $resultsPurchases = $statementPurchases->execute();
+
+        $currentRow = $numberOfRows - 1;
+        while ($rowPurchases = $resultsPurchases->fetchArray()) {
+            $backstockBefore = $rowPurchases['BackstockQuantityBefore'];
+            $backstock = $rowPurchases['BackstockQuantity'];
+            $shelfBefore = $rowPurchases['ShelfQuantityBefore'];
+            $shelf = $rowPurchases['ShelfQuantity'];
+            $itemID = $rowPurchases['ItemID'];
+
+            $expectedString = "Row [$currentRow] is less than zero. More actual rows than expected ones!";
+
+            if( $currentRow >= 0 ) {
+                $expectedString =  $this->latestInventoryRows[$currentRow];
+            }
+
+            $actualString = "BackBefore[$backstockBefore] Back[$backstock] ShelfBefore[$shelfBefore] Shelf[$shelf] Item[$itemID]";
+
+            $this->assertText( "Inventory History $type $numberOfRows Rows", $actualString, $expectedString );
+
+            $currentRow--;
+        }
+    }
 
 }
\ No newline at end of file
diff --git a/common/Testing.php b/common/Testing.php
index 672756a..dd3293b 100644
--- a/common/Testing.php
+++ b/common/Testing.php
@@ -6,7 +6,135 @@
  * Time: 6:43 PM
  */
 
-class Testing
-{
+class Testing extends TestingBase {
 
+    public function __construct() {
+		include_once(HANDLE_FORMS_PATH);
+	}
+
+    function runTest( $db ) {
+
+        TestingBase::$startTime = time();
+
+        sendSlackMessageToMatt("*Automated Test Begin*", ":bar_chart:", "FOODSTOCK TESTING", "#b7ab1a");
+
+        $this->addSection("Register User");
+
+        $testUser = new User( $db, "jHalpert", "Jim", "Halpert", "123-555-8675" );
+        $testUser->createUser();
+
+        $sodaItemTest = new ItemCostDetails($db, "Soda", "Milk_", 4.89, 1.45);
+        $sodaItemTest->testSetup( $testUser );
+
+        $this->addDatapoint( "User soda balance is now [" . $testUser->getSodaBalance() . "]" );
+
+        // We will do the purchasing from here using the get() values (getPrice()) from the POPOs
+        // Maybe the User should have its own POPO? Savings, Balance
+        // Or just store those values in this method - we are only testing one user?
+
+        $snackItemTest = new ItemCostDetails($db, "Snack", "Cookies_", 12.03, 11.99);
+        $snackItemTest->testSetup( $testUser );
+
+        $this->addDatapoint( "User snack balance is now [" . $testUser->getSnackBalance() . "]" );
+
+        $this->addSection( "Make Payments" );
+        $sodaBalanceWholeCents = $testUser->getSodaBalance();
+        $snackBalanceWholeCents = $testUser->getSnackBalance();
+
+        $test2SodaPaymentWholeCents = 230;
+
+        $test1SodaPaymentWholeCents = $sodaBalanceWholeCents - $test2SodaPaymentWholeCents;
+
+        $test3SnackPaymentWholeCents = 679;
+
+        $test2SnackPaymentWholeCents = $snackBalanceWholeCents - $test3SnackPaymentWholeCents;
+
+
+
+        $this->addDatapoint( "Soda Payment Only" );
+        $this->testPayment( $db, $testUser, $sodaItemTest, $snackItemTest, $test1SodaPaymentWholeCents, 0, "Test1", "PayPal" );
+
+        $this->addDatapoint( "Rest of Soda Payment and Partial Snack Payment" );
+        $this->testPayment( $db, $testUser, $sodaItemTest, $snackItemTest, $test2SodaPaymentWholeCents, $test2SnackPaymentWholeCents, "Test2", "Venmo" );
+
+        $this->addDatapoint( "Rest of Snack Payment - Balance is Zero" );
+        $this->testPayment( $db, $testUser, $sodaItemTest, $snackItemTest, 0, $test3SnackPaymentWholeCents, "Test3", "Cash" );
+
+        $this->addDatapoint( "Cancel last 4 payments - Undo Profit Only." );
+        $this->testCancelPayment( $db, $testUser, $sodaItemTest, $snackItemTest, 0, $test3SnackPaymentWholeCents, $test2SodaPaymentWholeCents, $test2SnackPaymentWholeCents );
+
+
+        $percentagePassed = TestingBase::$totalPasses / TestingBase::$totalTests * 100;
+        $percentagePassed = round( floor( $percentagePassed ), 0 );
+        $totalTime = time() - TestingBase::$startTime;
+        $testStatus = TestingBase::$totalPasses != TestingBase::$totalTests ? ":rage:" : ":tada: :tada: :tada: :tada: :tada: ";
+
+        sendSlackMessageToMatt("$testStatus *Automated Test Complete*\n(" . TestingBase::$totalPasses . "/" . TestingBase::$totalTests . ") tests passed - *$percentagePassed%* [$totalTime seconds]", ":bar_chart:", "FOODSTOCK TESTING", "#b7ab1a");
+    }
+
+    /**
+     * @param $db SQLite3
+     * @param $user User
+     * @param $soda ItemCostDetails
+     * @param $snack ItemCostDetails
+     * @param $sodaPayment
+     * @param $snackPayment
+     * @param $note
+     * @param $method
+     */
+    function testPayment( $db, $user, $soda, $snack, $sodaPayment, $snackPayment, $note, $method ) {
+        $todaysMonth = date('F Y');
+        $sodaBalance = $user->getSodaBalance();
+        $snackBalance = $user->getSnackBalance();
+
+        $this->addDatapoint( "Adding Soda Payment[$sodaPayment] Snack Payment[$snackPayment] || Soda Balance [$sodaBalance] Snack Balance [$snackBalance]" );
+        makePayment( $db, $user->getUserID(), $todaysMonth, $sodaPayment, $snackPayment, $note, $method );
+        $user->increaseBalance( "Soda", -abs( $sodaPayment ) );
+        $user->increaseBalance( "Snack", -abs( $snackPayment ) );
+        $soda->sitePayments += $sodaPayment;
+        $snack->sitePayments += $snackPayment;
+
+        $user->assertUserBalance();
+        $soda->assertSiteProfit();
+        $snack->assertSiteProfit();
+    }
+
+    /**
+     * @param $db SQLite3
+     * @param $user User
+     * @param $soda ItemCostDetails
+     * @param $snack ItemCostDetails
+     * @param $soda1ReturnPayment
+     * @param $snack1ReturnPayment
+     * @param $soda2ReturnPayment
+     * @param $snack2ReturnPayment
+     */
+    function testCancelPayment( $db, $user, $soda, $snack, $soda1ReturnPayment, $snack1ReturnPayment, $soda2ReturnPayment, $snack2ReturnPayment ) {
+        $lastPaymentID = $this->getValue( $db, "Select PaymentID from Payments ORDER BY PaymentID DESC LIMIT 1 " );
+        $secondLastPaymentID = $lastPaymentID - 1;
+        $thirdLastPaymentID = $lastPaymentID - 2;
+        $fourthLastPaymentID = $lastPaymentID - 3;
+        $this->addDatapoint( "Latest PaymentIDs: [$lastPaymentID, $secondLastPaymentID, $thirdLastPaymentID, $fourthLastPaymentID]" );
+
+        cancelPayment( $db, $lastPaymentID );
+        cancelPayment( $db, $secondLastPaymentID );
+        cancelPayment( $db, $thirdLastPaymentID );
+        cancelPayment( $db, $fourthLastPaymentID );
+
+        $user->increaseBalance( "Soda", $soda1ReturnPayment );
+        $user->increaseBalance( "Snack", $snack1ReturnPayment );
+        $soda->sitePayments -= $soda1ReturnPayment;
+        $snack->sitePayments -= $snack1ReturnPayment;
+
+        $user->increaseBalance( "Soda", $soda2ReturnPayment );
+        $user->increaseBalance( "Snack", $snack2ReturnPayment );
+        $soda->sitePayments -= $soda2ReturnPayment;
+        $snack->sitePayments -= $snack2ReturnPayment;
+
+        $user->assertUserBalance();
+        $soda->assertSiteProfit();
+        $snack->assertSiteProfit();
+
+
+    }
 }
\ No newline at end of file
diff --git a/common/TestingBase.php b/common/TestingBase.php
index 06085c9..a652c64 100644
--- a/common/TestingBase.php
+++ b/common/TestingBase.php
@@ -1,8 +1,38 @@
 <?php
 class TestingBase
 {
+    static $totalTests = 0;
+    static $totalPasses = 0;
+
+    static $startTime = 0;
+
+    static $currentSection = null;
+    static $totalTestsSection = 0;
+    static $totalPassesSection = 0;
+
+    static $startTimeSection = 0;
+
+    function isHidingSlack() {
+        return true;
+    }
+
     function addSection($title)
     {
+
+        if( TestingBase::$currentSection != null && TestingBase::$totalTestsSection > 0 ) {
+            $percentagePassed = (TestingBase::$totalPassesSection / TestingBase::$totalTestsSection) * 100;
+            $percentagePassed = round($percentagePassed, 0);
+            $totalTime = time() - TestingBase::$startTimeSection;
+            $testStatus = TestingBase::$totalPassesSection != TestingBase::$totalTestsSection ? ":x:" : ":heavy_check_mark:";
+
+//            sendSlackMessageToMatt("$testStatus Section *[" . TestingBase::$currentSection . "]* Complete - (" . TestingBase::$totalPassesSection . "/" . TestingBase::$totalTestsSection . ") tests passed - *$percentagePassed%* [$totalTime seconds]", ":chart_with_upwards_trend:", "FOODSTOCK TESTING", "#b7ab1a");
+        }
+
+        TestingBase::$currentSection = $title;
+        TestingBase::$totalPassesSection = 0;
+        TestingBase::$totalTestsSection = 0;
+        TestingBase::$startTimeSection = time();
+
         echo "<tr>";
         echo "<td style='background-color: #506ab3; padding:10px; text-align: center; font-weight: bold; color: #fffac0; font-family: \"Roboto\", Arial; font-size: 1.2em; border: 1px solid #000000' colspan='4'>$title</td>";
         echo "<tr>";
@@ -24,8 +54,25 @@ class TestingBase
     function assertText($title, $actual, $expected)
     {
         $pass = $actual == $expected;
-        $rowColor = $pass ? "#4ed37e" : "#d34e4e";
-        $passLabel = $pass ? "PASSED" : "FAILED";
+
+        if( !$pass && is_numeric( $actual ) && is_numeric( $expected ) ) {
+            $actual = round($actual, 2);
+            $expected = round($expected, 2);
+            $pass = $actual == $expected;
+        }
+
+        TestingBase::$totalTests++;
+        TestingBase::$totalTestsSection++;
+
+        $rowColor = "#d34e4e";
+        $passLabel = "FAILED";
+
+        if( $pass ) {
+            TestingBase::$totalPasses++;
+            TestingBase::$totalPassesSection++;
+            $rowColor = "#4ed37e";
+            $passLabel = "PASSED";
+        }
 
         $actualVarDump = "";
         $expectedVarDump = "";
@@ -34,11 +81,11 @@ class TestingBase
         if (false) {
             ob_start();
             var_dump($actual);
-            $actualVarDump = " [" . ob_get_clean() . "]";
+            $actualVarDump = " [" . ob_get_clean() . "] [$pass]";
 
             ob_start();
             var_dump($expected);
-            $expectedVarDump = " [" . ob_get_clean() . "]";
+            $expectedVarDump = " [" . ob_get_clean() . "] [$pass]";
         }
 
         $style = "background-color:$rowColor; padding: 5px; border:#000000 1px solid; font-family: \"Roboto\", Arial; font-size: 0.8em;";
diff --git a/common/User.php b/common/User.php
index a948496..99a9350 100644
--- a/common/User.php
+++ b/common/User.php
@@ -6,7 +6,220 @@
  * Time: 3:59 PM
  */
 
-class User
+class User extends TestingBase
 {
+    public $userID = 0;
+    public $username = "";
+    public $firstName = "";
+    public $lastName = "";
+    public $phoneNumber = "";
 
+    public $sodaBalance = 0;
+    public $snackBalance = 0;
+    public $sodaSavings = 0;
+    public $snackSavings = 0;
+    public $creditsLeft = 0;
+
+    public $db = null;
+
+
+    public function __construct($db, $username, $firstName, $lastName, $phoneNumber)
+    {
+        $randomID = rand(1, 6000);
+        $this->db = $db;
+        $this->username = $username . "_" . $randomID;
+        $this->firstName = $firstName;
+        $this->lastName = $lastName . "_" . $randomID;
+        $this->phoneNumber = $phoneNumber;
+
+
+        include_once(HANDLE_FORMS_PATH);
+    }
+
+    public function createUser()
+    {
+        registerUser($this->db, $this->isHidingSlack(), $this->username, $this->username, $this->username, $this->firstName, $this->lastName, $this->phoneNumber);
+
+        $this->userID = $this->getValue($this->db, "Select UserID from User WHERE UserName = '" . $this->username . "'");
+        $this->addDatapoint("Created [$this->username] User with ID of [$this->userID]");
+    }
+
+    public function increaseBalance( $itemType, $balance ) {
+        if( $itemType == "Soda" ) {
+            $this->sodaBalance += $balance;
+        } else if( $itemType == "Snack" ) {
+            $this->snackBalance += $balance;
+        }
+    }
+
+    public function increaseCredits( $creditsLeft) {
+        $this->creditsLeft += $creditsLeft;
+    }
+
+    public function decreaseCredits( $creditsLeft) {
+        $this->addDatapoint( "Decrement credits [$creditsLeft] from User" );
+        $this->creditsLeft -= $creditsLeft;
+    }
+
+    public function getCreditsLeft() {
+        return $this->creditsLeft;
+    }
+
+    /**
+     * @return int
+     */
+    public function getUserID()
+    {
+        return $this->userID;
+    }
+
+    /**
+     * @param int $userID
+     */
+    public function setUserID($userID)
+    {
+        $this->userID = $userID;
+    }
+
+    /**
+     * @return string
+     */
+    public function getUsername()
+    {
+        return $this->username;
+    }
+
+    /**
+     * @param string $username
+     */
+    public function setUsername($username)
+    {
+        $this->username = $username;
+    }
+
+    /**
+     * @return string
+     */
+    public function getFirstName()
+    {
+        return $this->firstName;
+    }
+
+    /**
+     * @param string $firstName
+     */
+    public function setFirstName($firstName)
+    {
+        $this->firstName = $firstName;
+    }
+
+    /**
+     * @return string
+     */
+    public function getLastName()
+    {
+        return $this->lastName;
+    }
+
+    /**
+     * @param string $lastName
+     */
+    public function setLastName($lastName)
+    {
+        $this->lastName = $lastName;
+    }
+
+    /**
+     * @return string
+     */
+    public function getPhoneNumber()
+    {
+        return $this->phoneNumber;
+    }
+
+    /**
+     * @param string $phoneNumber
+     */
+    public function setPhoneNumber($phoneNumber)
+    {
+        $this->phoneNumber = $phoneNumber;
+    }
+
+    /**
+     * @return int
+     */
+    public function getSodaBalance()
+    {
+        return $this->sodaBalance;
+    }
+
+    /**
+     * @param int $sodaBalance
+     */
+    public function setSodaBalance($sodaBalance)
+    {
+        $this->sodaBalance = $sodaBalance;
+    }
+
+    /**
+     * @return int
+     */
+    public function getSnackBalance()
+    {
+        return $this->snackBalance;
+    }
+
+    /**
+     * @param int $snackBalance
+     */
+    public function setSnackBalance($snackBalance)
+    {
+        $this->snackBalance = $snackBalance;
+    }
+
+    /**
+     * @return int
+     */
+    public function getSodaSavings()
+    {
+        return $this->sodaSavings;
+    }
+
+    /**
+     * @param int $sodaSavings
+     */
+    public function setSodaSavings($sodaSavings)
+    {
+        $this->sodaSavings = $sodaSavings;
+    }
+
+    /**
+     * @return int
+     */
+    public function getSnackSavings()
+    {
+        return $this->snackSavings;
+    }
+
+    /**
+     * @param int $snackSavings
+     */
+    public function setSnackSavings($snackSavings)
+    {
+        $this->snackSavings = $snackSavings;
+    }
+
+    function assertUserBalance() {
+        $actualSnackBalance = $this->getValue($this->db, "SELECT SnackBalance From User WHERE UserID = " . $this->userID );
+        $actualSodaBalance = $this->getValue($this->db, "SELECT SodaBalance From User WHERE UserID = " . $this->userID );
+        $actualSnackSavings= $this->getValue($this->db, "SELECT SnackSavings From User WHERE UserID = " . $this->userID );
+        $actualSodaSavings = $this->getValue($this->db, "SELECT SodaSavings From User WHERE UserID = " . $this->userID );
+        $actualCredits = $this->getValue($this->db, "SELECT Credits From User WHERE UserID = " . $this->userID );
+
+        $this->assertText("User - Snack Balance", $actualSnackBalance, $this->snackBalance );
+        $this->assertText("User - Soda Balance", $actualSodaBalance, $this->sodaBalance );
+        $this->assertText("User - Snack Savings", $actualSnackSavings, $this->snackSavings );
+        $this->assertText("User - Soda Savings", $actualSodaSavings, $this->sodaSavings );
+        $this->assertText("User - Credits", $actualCredits, $this->creditsLeft );
+    }
 }
\ No newline at end of file
diff --git a/common/handle_ajax.php b/common/handle_ajax.php
index d516a58..a356a74 100644
--- a/common/handle_ajax.php
+++ b/common/handle_ajax.php
@@ -2,6 +2,8 @@
     include(__DIR__ . "/../appendix.php" );
     include( SESSION_FUNCTIONS_PATH );
     include(UI_FUNCTIONS_PATH);
+    include(QUANTITY_FUNCTIONS_PATH);
+    include_once(ACTION_FUNCTIONS_PATH);
     include(SLACK_FUNCTIONS_PATH);
     include_once(LOG_FUNCTIONS_PATH);
 
@@ -24,35 +26,42 @@
         $nameQuery = "";
 
         if( $itemSearch != "" ) {
-            $nameQuery = " AND ( Name Like '%" . $itemSearch . "%' OR Alias Like '%" . $itemSearch . "%')";
+            $nameQuery = " AND ( Name Like :nameSearch OR Alias Like :aliasSearch)";
         }
         
-        $cardQuery = "SELECT ID, Name, Date, ChartColor, TotalCans, BackstockQuantity, ShelfQuantity, Price, TotalIncome, TotalExpenses," .
-        "DateModified, ModifyType, Retired, ImageURL, ThumbURL, UnitName, UnitNamePlural, DiscountPrice, CurrentFlavor, RefillTrigger, OutOfStockReporter, OutOfStockDate " .
-        "FROM Item WHERE Type ='" . $itemType . "' " .$nameQuery . " AND Hidden != 1 ORDER BY Retired, BackstockQuantity DESC, ShelfQuantity DESC";
+        $cardQuery = "SELECT ID, Name, Date, ChartColor, TotalCans, " . getQuantityQuery() .
+        ",Price, ItemIncome, ItemExpenses, ItemProfit, " .
+        "Retired, ImageURL, ThumbURL, UnitName, UnitNamePlural, DiscountPrice, CurrentFlavor, RefillTrigger, OutOfStockReporter, OutOfStockDate " .
+        "FROM Item i WHERE Type = :itemType " .$nameQuery . " AND Hidden != 1 ORDER BY Retired, BackstockAmount DESC, ShelfAmount DESC";
         
         if( IsLoggedIn() ) {
             // Sort by user preference
             // This sort pretty much breaks them into 3 groups (bought ones at #1, discontinued at #3, the rest at #2) and sorts those 3,
             // then inside those groups it sorts by frequency, then shelf, then backstock
-            $cardQuery = "SELECT ID, Name, Date, ChartColor, TotalCans, BackstockQuantity, ShelfQuantity, Price, TotalIncome, TotalExpenses, DateModified, " .
-            "ModifyType, Retired, ImageURL, ThumbURL, UnitName, UnitNamePlural, (SELECT count(*) FROM Purchase_History p WHERE p.UserID = " . $_SESSION["UserID"] .
+            $cardQuery = "SELECT ID, Name, Date, ChartColor, TotalCans, " . getQuantityQuery() .
+            ",Price, ItemIncome, ItemExpenses, ItemProfit, " .
+            "Retired, ImageURL, ThumbURL, UnitName, UnitNamePlural, (SELECT count(*) FROM Purchase_History p WHERE p.UserID = " . $_SESSION["UserID"] .
             " AND p.ItemID = i.ID AND p.Cancelled IS NULL) as Frequency, DiscountPrice, CurrentFlavor, RefillTrigger, OutOfStockReporter, OutOfStockDate FROM Item i " .
-            "WHERE Type ='" . $itemType . "' " .$nameQuery . " AND Hidden != 1 " . 
-            "ORDER BY CASE WHEN Retired = 1 AND ShelfQuantity = 0 THEN '3' WHEN Frequency > 0 AND Retired = 0 THEN '1'  ELSE '2' END ASC, Frequency DESC, ShelfQuantity DESC, BackstockQuantity DESC"; 
+            "WHERE Type = :itemType " .$nameQuery . " AND Hidden != 1 " .
+            "ORDER BY CASE WHEN Retired = 1 AND ShelfAmount = 0 THEN '3' WHEN Frequency > 0 AND Retired = 0 THEN '1'  ELSE '2' END ASC, Frequency DESC, ShelfAmount DESC, BackstockAmount DESC";
         }
         
-        $results = $db->query($cardQuery);
-        
+        $statement = $db->prepare( $cardQuery );
+        $statement->bindValue( ":nameSearch", "%" .$itemSearch . "%" );
+        $statement->bindValue( ":aliasSearch", "%" .$itemSearch . "%" );
+        $statement->bindValue( ":itemType", $itemType );
+        $results = $statement->execute();
+
         //---------------------------------------
         // BUILD ITEM CARDS
         //---------------------------------------
         $columnNumber = 1;
         while ($row = $results->fetchArray()) {
-
+            $item_id = $row['ID'];
             $retired_item = $row['Retired'];
-            $cold_item = $row['ShelfQuantity'];
-            $warm_item = $row['BackstockQuantity'];
+
+            $shelfAmount = $row['ShelfAmount'];
+            $backstockAmount = $row['BackstockAmount'];
 
             $hideDiscontinued = true;
 
@@ -60,7 +69,7 @@
                 $hideDiscontinued = false;
             }
 
-            if( $retired_item == 1 && $hideDiscontinued && $cold_item == 0 ) {
+            if( $retired_item == 1 && $hideDiscontinued && $shelfAmount == 0 ) {
                 continue;
             }
 
@@ -68,7 +77,7 @@
             
             $outOfStock = $row['RefillTrigger'];
             $outOfStockReporter = $row['OutOfStockReporter'];
-            $item_id = $row['ID'];
+
             $item_name = $row['Name'];
             $price = $row['Price'];
             $originalPrice = $price;
@@ -119,7 +128,7 @@
                 $unitNamePlural = $row['UnitNamePlural'];
             }
             
-            $unitNameFinal = $cold_item > 1 ? $unitNamePlural : $unitName;
+            $unitNameFinal = $shelfAmount > 1 ? $unitNamePlural : $unitName;
             
             $amountLeft = "N/A";
             $amountClass = "";
@@ -129,7 +138,7 @@
             $lightRopeClass = "";
             
             if( $retired_item == 1) {
-                if($cold_item == 0) {
+                if($shelfAmount == 0) {
                     $amountLeft = "Discontinued";
                     $amountClass = "discontinued";
                     $statusClass = "post-module-discontinued";
@@ -137,23 +146,26 @@
                     $lightRopeClass = "class='dead'";
                 } else {
                     $amountClass = "discontinued-soon";
-                    $amountLeft = "<div><span>$cold_item</span> $unitNameFinal Left</div>" . 
+                    $amountLeft = "<div><span>$shelfAmount</span> $unitNameFinal Left</div>" .
                     "<div style='font-size: 0.8em; font-weight:bold; margin-top:5px; color:#ffe000'>(discontinued soon)</div>";
                 }
             } else {
-                if($cold_item == 0) {
+                if($shelfAmount == 0) {
                     $amountLeft = "SOLD OUT";
                     $amountClass = "sold-out";
                     $thumbnailClass = "sold-out";
                     $buttonClass = "disabled";
                 } else {
-                    $amountLeft = "<span>$cold_item</span> $unitNameFinal Left";
+                    $amountLeft = "<span>$shelfAmount</span> $unitNameFinal Left";
                 }
             }
             
-            echo "<input id='shelf_quantity_" . $item_id . "' type='hidden' value='" . $cold_item . "'/>";
+            echo "<input id='shelf_quantity_" . $item_id . "' type='hidden' value='" . $shelfAmount . "'/>";
             
-            $resultsPopularity = $db->query('SELECT ItemID, Date FROM Restock where ItemID = ' . $row['ID'] . ' ORDER BY Date DESC');
+            $statementPopularity = $db->prepare('SELECT ItemID, Date FROM Restock where ItemID = :itemID ORDER BY Date DESC');
+            $statementPopularity->bindValue( ":itemID", $row['ID'] );
+            $resultsPopularity = $statementPopularity->execute();
+
             $firstDate = "";
             $lastDate = "";
             $totalPurchases = 0;
@@ -202,9 +214,12 @@
                 $previewImage = "<img class='preview_zoom' style='width: 100px; height: 100px; padding-top:70px;' src='" . IMAGES_LINK . "no_image.png' />";
             }
 
-            $total_can_sold = $row['TotalCans'] - ( $row['BackstockQuantity'] + $row['ShelfQuantity'] );
+            $total_can_sold = $row['TotalCans'] - ( $backstockAmount + $shelfAmount );
             
-            $resultsDefect = $db->query("SELECT Sum(Amount) as 'TotalDefect' From Defectives where ItemID = ". $row['ID']);
+            $statementDefect = $db->prepare("SELECT Sum(Amount) as 'TotalDefect' From Defectives where ItemID = :itemID" );
+            $statementDefect->bindValue( ":itemID",  $row['ID'] );
+            $resultsDefect = $statementDefect->execute();
+
             $rowDefect = $resultsDefect->fetchArray();
             $totalDefects = $rowDefect['TotalDefect'];
             
@@ -221,8 +236,8 @@
             if( $outOfStock == "1" ) {
                 $reportType = "out of stock";
                 $reportClass = "out_of_stock";
-                if( $outOfStockReporter == "SodaBot" ) {
-                    if( $cold_item > 0 ) {
+                if( $outOfStockReporter == "StockBot" ) {
+                    if( $shelfAmount > 0 ) {
                         $reportType = "running low";
                         $reportClass = "running_low";
                     }
@@ -261,10 +276,10 @@
                         echo "<h1 class='sub_title'><u>Current Flavor:</u> <i>$currentFlavor</i></h1>";
                     }
 
-                    $income = $row['TotalIncome'];
-                    $expense = $row['TotalExpenses'];
-                    
-                    $profit = $income - $expense;
+                    $income = $row['ItemIncome'];
+                    $expense = $row['ItemExpenses'];
+                    $profit = $row['ItemProfit'];
+
                     $profitClass = $profit > 0 ? "income" : "expenses";
 
                     $actionsClass = "actions_no_stats";
@@ -341,187 +356,196 @@
     } 
     else if( $type == "ToggleRequestCompleted" ) {
         $requestID = $_POST['id'];
-        $results = $db->query("SELECT Completed FROM Requests WHERE ID =" . $requestID );
+        $statement = $db->prepare("SELECT Completed FROM Requests WHERE ID = :requestID" );
+        $statement->bindValue( ":requestID", $requestID );
+        $results = $statement->execute();
+
         $row = $results->fetchArray();
         
         if( $row['Completed'] == 1 ) {
-            $db->exec( "UPDATE Requests set Completed = 0 WHERE ID = " . $requestID );
+            $statement = $db->prepare( "UPDATE Requests set Completed = 0 WHERE ID = :requestID" );
+            $statement->bindValue( ":requestID", $requestID );
+            $statement->execute();
         } else {
-            $date = date('Y-m-d H:i:s');
-            $db->exec( "UPDATE Requests set Completed = 1, DateCompleted = '$date' WHERE ID = " . $requestID );
+            $statement = $db->prepare( "UPDATE Requests set Completed = 1, DateCompleted = :dateCompleted WHERE ID = :requestID" );
+            $statement->bindValue( ":requestID", $requestID );
+            $statement->bindValue( ":dateCompleted", date('Y-m-d H:i:s') );
+            $statement->execute();
         }
     }
     else if( $type == "ToggleRequestPriority" ) {
-        $requestID = $_POST['id'];
-        $priority = $_POST['priority'];
-        $db->exec( "UPDATE Requests set Priority = '$priority' WHERE ID = " . $requestID );
+        $statement = $db->prepare( "UPDATE Requests set Priority = :priority WHERE ID = :requestID" );
+        $statement->bindValue( ":requestID", $_POST['id'] );
+        $statement->bindValue( ":priority", $_POST['priority'] );
+        $statement->execute();
     }
     else if( $type == "CancelPurchase" ) {
-        $dailyAmountID = trim($_POST["DailyAmountID"]);
-        
-        $results = $db->query("SELECT u.FirstName, u.LastName, u.SlackID, p.Cost, p.DiscountCost, p.UserID, i.Type, i.Name, d.ItemID, d.BackstockQuantityBefore, d.BackstockQuantity, d.ShelfQuantityBefore, d.ShelfQuantity, d.Price from Daily_Amount d JOIN Item i on d.ItemID =  i.ID JOIN Purchase_History p on d.ID = p.DailyAmountID JOIN User u on p.UserID = u.UserID WHERE d.ID = $dailyAmountID");
+        $inventoryHistoryID = trim($_POST["DailyAmountID"]);
+
+        $statement = $db->prepare("SELECT u.FirstName, u.LastName, u.UserName, u.SlackID, p.ItemDetailsID, p.ItemID, p.UserID " .
+        "FROM Inventory_History d " .
+        "JOIN Purchase_History p on d.ID = p.DailyAmountID " .
+        "JOIN User u on p.UserID = u.UserID " .
+        "WHERE d.ID = :inventoryHistoryID" );
+        $statement->bindValue( ":inventoryHistoryID", $inventoryHistoryID );
+        $results = $statement->execute();
+
         $row = $results->fetchArray();
-        
+
         $date = date('Y-m-d H:i:s');
-        $itemID = $row['ItemID'];
-        $itemName = $row['Name'];
         $userID = $row['UserID'];
         $username = $row['FirstName'] . " " . $row['LastName'];
         $slackID = $row['SlackID'];
-        $itemType = $row['Type'];
-        $backstockBefore = $row['BackstockQuantityBefore'];
-        $backstockAfter= $row['BackstockQuantity'];
-        $shelfBefore = $row['ShelfQuantityBefore'];
-        $shelfAfter= $row['ShelfQuantity'];
-        $price= $row['Cost'];
-        $discountPrice= $row['DiscountCost'];
-        
-        $actualPrice = $discountPrice == 0.0 ? $price : $discountPrice;
-        
+        $username = $row['UserName'];
+
+        $itemDetailsID = $row['ItemDetailsID'];
+        $itemID = $row['ItemID'];
+
+        $db->exec("BEGIN;");
+
+        $itemDetailsObj = addToShelfQuantity( $db, 1, $itemID, $itemDetailsID, "CANCEL SITE PURCHASE" )[0];
+
+        $actualPrice = $itemDetailsObj->getSitePurchasePrice();
+        $price = $itemDetailsObj->getFullPrice();
+        $discountPrice = $itemDetailsObj->getDiscountPrice();
+
+        $itemType = $itemDetailsObj->getItemType();
+        $itemName = $itemDetailsObj->getItemName();
+
         $savings = $price - $discountPrice;
-        
-        $cancelDailySQL = "UPDATE Daily_Amount SET Cancelled = 1 WHERE ID = $dailyAmountID";
-        log_sql("Cancel Daily Amount SQL: [" . $cancelDailySQL . "]" );
-        $db->exec( $cancelDailySQL );
-        
-        $cancelPurchaseSQL = "UPDATE Purchase_History SET Cancelled = 1 WHERE DailyAmountID = $dailyAmountID";
-        log_sql("Cancel SQL: [" . $cancelPurchaseSQL . "]" );
-        $db->exec( $cancelPurchaseSQL );
-        
-        $newIncome = addToValue( $db, "Item", "TotalIncome", $actualPrice, "where ID = $itemID", false );
-        $itemQuery = "UPDATE Item SET ShelfQuantity = ShelfQuantity + 1, TotalIncome = $newIncome, DateModified = '$date', ModifyType = 'Cancelled' where ID = $itemID";
-        log_sql("Item SQL: [" . $itemQuery . "]" );
-        $db->exec( $itemQuery );
-        
-        $newIncome = addToValue( $db, "Information", "Income", $actualPrice, "where ItemType = '$itemType'", false );
-        $infoQuery = "UPDATE Information SET Income = $newIncome where ItemType = '$itemType'";
-        log_sql("Info SQL: [" . $infoQuery . "]" );
-        $db->exec( $infoQuery );
-        
+
+
+        $statement = $db->prepare( "UPDATE Inventory_History SET Cancelled = 1 WHERE ID = :inventoryHistoryID" );
+        $statement->bindValue( ":inventoryHistoryID", $inventoryHistoryID );
+        $statement->execute();
+
+        $statement = $db->prepare( "UPDATE Purchase_History SET Cancelled = 1 WHERE DailyAmountID = :inventoryHistoryID" );
+        $statement->bindValue( ":inventoryHistoryID", $inventoryHistoryID );
+        $statement->execute();
+
+        $statement = $db->prepare( "UPDATE Item SET ItemIncome = ItemIncome - :actualPrice where ID = :itemID" );
+        $statement->bindValue( ":itemID", $itemID );
+        $statement->bindValue( ":actualPrice", $actualPrice );
+        $statement->execute();
+
+        $statement = $db->prepare( "UPDATE Information SET SiteIncome = SiteIncome - :actualPrice where ItemType = :itemType" );
+        $statement->bindValue( ":itemType", $itemType );
+        $statement->bindValue( ":actualPrice", $actualPrice );
+        $statement->execute();
+
         $typeOfBalance = $itemType . "Balance";
         $typeOfSavings = $itemType . "Savings";
-        
-        $newBalance = addToValue( $db, "User", $typeOfBalance, $actualPrice, "where UserID = $userID", false );
-        $newSavings = addToValue( $db, "User", $typeOfSavings, $savings, "where UserID = $userID", false );
-        $balanceUpdateQuery = "UPDATE User SET $typeOfBalance = $newBalance, $typeOfSavings = $newSavings where UserID = $userID";
 
-        log_sql("Balance Update SQL [" . $balanceUpdateQuery . "]" );
-        $db->exec( $balanceUpdateQuery );
-        
+        $statement = $db->prepare( "UPDATE User SET $typeOfBalance = $typeOfBalance - :actualPrice, $typeOfSavings = $typeOfSavings - :savings where UserID = :userID" );
+        $statement->bindValue( ":actualPrice", $actualPrice );
+        $statement->bindValue( ":savings", $savings );
+        $statement->bindValue( ":userID", $userID );
+        $statement->execute();
+
+        $db->exec("COMMIT;");
+
         $purchaseMessage = $itemName . " (+ " . getPriceDisplayWithDollars( $actualPrice ) . ")";
-        
+
         if( $slackID == "" ) {
             sendSlackMessageToMatt( "Failed to send notification for " . $username . ". Create a SlackID!", ":no_entry:", $itemType . "Stock - ERROR!!", "#bb3f3f" );
         } else {
-            sendSlackMessageToUser($slackID,  $purchaseMessage , ":money_mouth_face:" , $itemType . "Stock - REFUND", "#3f5abb" );
+            sendSlackMessageToUser( $slackID,  $purchaseMessage , ":money_mouth_face:" , $itemType . "Stock - REFUND", "#3f5abb", $username );
         }
-        
+
         sendSlackMessageToMatt( "*(" . $username . ")*\n" . $purchaseMessage, ":money_mouth_face:", $itemType . "Stock - REFUND", "#3f5abb" );
+        // TODO MTM: Get rid of DateModified and ModifyType - never use it. Removing a column is hard. Create new temp table.
+
+
     }
     else if( $type == "CancelInventory" ) {
-        $dailyAmountID = trim($_POST["DailyAmountID"]);
-        
-        $results = $db->query("SELECT i.Type, d.ItemID, d.BackstockQuantityBefore, d.BackstockQuantity, d.ShelfQuantityBefore, d.ShelfQuantity, d.Price from Daily_Amount d JOIN Item i on d.ItemID =  i.ID WHERE d.ID = $dailyAmountID");
-        $row = $results->fetchArray();
-        
-        $date = date('Y-m-d H:i:s');
-        $itemID = $row['ItemID'];
-        $itemType = $row['Type'];
-        $backstockBefore = $row['BackstockQuantityBefore'];
-        $backstockAfter= $row['BackstockQuantity'];
-        $shelfBefore = $row['ShelfQuantityBefore'];
-        $shelfAfter= $row['ShelfQuantity'];
-        $price= $row['Price'];
-        
-        $quantityBefore = $backstockBefore + $shelfBefore;
-        $quantityAfter = $backstockAfter + $shelfAfter;
-        
-        $backstockDelta = $backstockBefore - $backstockAfter;
-        $shelfDelta = $shelfBefore - $shelfAfter;
-        
-        $income = ($quantityBefore - $quantityAfter) * $price;
-        
-        $cancelSQL = "UPDATE Daily_Amount SET Cancelled = 1 WHERE ID = $dailyAmountID";
-        log_sql("Cancel SQL: [" . $cancelSQL . "]" );
-        $db->exec( $cancelSQL );
-        
-        $newIncome = addToValue( $db, "Item", "TotalIncome", $income, "where ID = $itemID", false );
-        $itemSQL = "UPDATE Item SET TotalIncome = $newIncome, BackstockQuantity = BackstockQuantity + $backstockDelta, ShelfQuantity = ShelfQuantity + $shelfDelta, ModifyType = 'Cancelled', DateModified = '$date' where ID = $itemID";
-        log_sql("Item SQL: [" . $itemSQL . "]" );
-        $db->exec( $itemSQL );
-        
-        $newIncome = addToValue( $db, "Information", "Income", $income, "where ItemType = '$itemType'", false );
-        $infoSQL = "UPDATE Information SET Income = $newIncome where ItemType = '$itemType'";
-
-        log_sql("Info SQL: [" . $infoSQL . "]" );
-        $db->exec( $infoSQL );
+            // TODO MTM: Fix Cancel Inventory
+//        $dailyAmountID = trim($_POST["DailyAmountID"]);
+//
+//        $results = $db->query("SELECT i.Type, d.ItemID, d.BackstockQuantityBefore, d.BackstockQuantity, d.ShelfQuantityBefore, d.ShelfQuantity, d.Price, d.RetailCost, d.ItemDetailsID from Inventory_History d JOIN Item i on d.ItemID =  i.ID WHERE d.ID = $dailyAmountID");
+//        $row = $results->fetchArray();
+//
+//        $date = date('Y-m-d H:i:s');
+//        $itemID = $row['ItemID'];
+//        $itemType = $row['Type'];
+//        $backstockBefore = $row['BackstockQuantityBefore'];
+//        $backstockAfter= $row['BackstockQuantity'];
+//        $shelfBefore = $row['ShelfQuantityBefore'];
+//        $shelfAfter= $row['ShelfQuantity'];
+//        $price = $row['Price'];
+//        $itemDetailsID = $row['ItemDetailsID'];
+//
+//        $quantityBefore = $backstockBefore + $shelfBefore;
+//        $quantityAfter = $backstockAfter + $shelfAfter;
+//
+//        $backstockDelta = $backstockBefore - $backstockAfter;
+//        $shelfDelta = $shelfBefore - $shelfAfter;
+//
+//        $income = ($quantityBefore - $quantityAfter) * $price;
+//
+//        $cancelSQL = "UPDATE Inventory_History SET Cancelled = 1 WHERE ID = $dailyAmountID";
+//        log_sql("Cancel SQL: [" . $cancelSQL . "]" );
+//        $db->exec( $cancelSQL );
+//
+//        $newIncome = addToValue( $db, "Item", "TotalIncome", $income, "where ID = $itemID", false );
+//        $itemSQL = "UPDATE Item SET TotalIncome = $newIncome, ModifyType = 'Cancelled', DateModified = '$date' where ID = $itemID";
+//        log_sql("Item SQL: [" . $itemSQL . "]" );
+//        $db->exec( $itemSQL );
+//
+//        addToBackstockQuantity( $db, $backstockDelta, $itemID, $itemDetailsID, "CANCEL MANUAL PURCHASE" );
+//        addToShelfQuantity( $db, $shelfDelta, $itemID, $itemDetailsID, "CANCEL MANUAL PURCHASE" );
+//
+//        $newIncome = addToValue( $db, "Information", "Income", $income, "where ItemType = '$itemType'", false );
+//        $infoSQL = "UPDATE Information SET Income = $newIncome where ItemType = '$itemType'";
+//
+//        log_sql("Info SQL: [" . $infoSQL . "]" );
+//        $db->exec( $infoSQL );
     }
     else if( $type == "CancelRestock" ) {
         $restockID = trim($_POST["RestockID"]);
-        
-        $results = $db->query("SELECT r.Cost, r.ItemID, r.NumberOfCans, i.Type From Restock r JOIN Item i on r.ItemID = i.ID where RestockID = $restockID");
+
+        $statement = $db->prepare("SELECT r.Cost, r.ItemID, r.NumberOfCans, i.Type From Restock r JOIN Item i on r.ItemID = i.ID where RestockID = :restockID" );
+        $statement->bindValue( ":restockID", $restockID );
+        $results = $statement->execute();
+
         $row = $results->fetchArray();
-        
+
         $cost = $row['Cost'];
         $numberOfCans = $row['NumberOfCans'];
         $itemType = $row['Type'];
         $itemID = $row['ItemID'];
 
-        $cancelSQL = "UPDATE Restock SET Cancelled = 1 where RestockID = $restockID";
-        log_sql( "Cancel SQL [$cancelSQL]" );
-        $db->exec( $cancelSQL );
-        
-        $newTotalExpenses = addToValue( $db, "Item", "TotalExpenses", $cost, "where ID = $itemID", false );
-        $itemSQL = "UPDATE Item SET TotalExpenses = $newTotalExpenses, BackstockQuantity = BackstockQuantity - $numberOfCans, TotalCans = TotalCans - $numberOfCans where ID = $itemID";
-        log_sql( "Item SQL [$itemSQL]" );
-        $db->exec( $itemSQL );
-        
-        $newExpenses = addToValue( $db, "Information", "Expenses", $cost, "where ItemType = '$itemType'", false );
-        $infoSQL = "UPDATE Information SET Expenses = $newExpenses where ItemType = '$itemType'";
-        log_sql( "Info SQL [$infoSQL]" );
-        $db->exec( $infoSQL );
+        $db->exec( "BEGIN;" );
+
+        $statement = $db->prepare( "UPDATE Restock SET Cancelled = 1 where RestockID = :restockID" );
+        $statement->bindValue( ":restockID", $restockID );
+        $statement->execute();
+
+        removeFromBackstockQuantity( $db, $numberOfCans, $itemID, "CANCEL RESTOCK" );
+
+        $statement = $db->prepare( "UPDATE Item SET ItemExpenses = ItemExpenses - :cost, TotalCans = TotalCans - :numberOfUnits where ID = :itemID" );
+        $statement->bindValue( ":cost", $cost );
+        $statement->bindValue( ":numberOfUnits", $numberOfCans );
+        $statement->bindValue( ":itemID", $itemID );
+        $statement->execute();
+
+        $statement = $db->prepare( "UPDATE Information SET SiteExpenses = SiteExpenses - :cost where ItemType = :itemType" );
+        $statement->bindValue( ":cost", $cost );
+        $statement->bindValue( ":itemType", $itemType );
+        $statement->execute();
+
+        $db->exec( "COMMIT;" );
     }
     else if( $type == "CancelPayment" ) {
-        
         $paymentID = trim($_POST["PaymentID"]);
-        
-        $results = $db->query("SELECT UserID, Amount, ItemType From Payments where PaymentID = $paymentID");
-        $row = $results->fetchArray();
-        
-        $userID = $row['UserID'];
-        $amount = $row['Amount'];
-        $itemType = $row['ItemType'];
-        
-        $isUserPayment = $userID > 0;
-        
-        $cancelSQL = "Update Payments SET Cancelled = 1 WHERE PaymentID = $paymentID";
-        log_sql("Cancel [$cancelSQL]");
-        
-        $db->exec( $cancelSQL );
-    
-        if( $isUserPayment ) {
-            $balanceType = $itemType . "Balance";
-            
-            $newBalance = addToValue( $db, "User", $balanceType, $amount, "where UserID = $userID", true );
-            $balanceSQL = "UPDATE User SET $balanceType = " . $newBalance . " where UserID = $userID";
-            log_sql("UserBalance [$balanceSQL]");
-            $db->exec( $balanceSQL );
-        }
-    
-        $newProfit = addToValue( $db, "Information", "ProfitActual", $amount, "where ItemType = '$itemType'", false );
-        $infoSQL = "UPDATE Information SET ProfitActual = $newProfit where ItemType = '$itemType'";
-
-        log_sql("Info [$infoSQL]");
-        $db->exec( $infoSQL );
-        
-        $db->exec();
+        cancelPayment( $db, $paymentID );
     }
     else if( $type == "NotifyUserOfPayment" ) {
         $month = trim($_POST["month"]);
         $year = trim($_POST["year"]);
         $displayMonth = trim($_POST["displayMonth"]);
         
-        $results = $db->query("SELECT UserID, UserName, SlackID, SodaBalance, SnackBalance, FirstName, LastName FROM User" );
+        $statement = $db->prepare("SELECT UserID, UserName, UserName, SlackID, SodaBalance, SnackBalance, FirstName, LastName FROM User" );
+        $results = $statement->execute();
         log_debug( "Notifying Users of Payment..." );
         
         while ($row = $results->fetchArray()) {
@@ -530,6 +554,7 @@
             $userName = $row['UserName'];
             $slackID = $row['SlackID'];
             $userID = $row['UserID'];
+            $username = $row['UserName'];
             $name = $row["FirstName"] . " " . $row['LastName'];
 
 //            if( $userName != "mmiles" ) {
@@ -558,19 +583,23 @@
                         "*Total Balance Owed:* " . getPriceDisplayWithDollars( $totalBalance ) . "\n\n" .
                         "You can view more details on the <https://penguinore.net/purchase_history.php|Purchase/Payment History Page>. Have a great day! :grin:";
                 
-                sendSlackMessageToUser( $slackID, $slackMessage, ":credit:", "FoodStock Collection Agency", "#ff7a7a" );
+                sendSlackMessageToUser( $slackID, $slackMessage, ":credit:", "FoodStock Collection Agency", "#ff7a7a", $username );
             }
         }
     }
     else if( $type == "OutOfStockRequest" ) {
-        $itemID = $_POST['itemID'];
         $itemName = $_POST['itemName'];
-        $reporter = $_POST['reporter'];
-        $date = date('Y-m-d H:i:s', time());
-        $db->exec( "UPDATE Item set RefillTrigger = 1, OutOfStockDate = '$date', OutOfStockReporter = '$reporter' WHERE ID = $itemID" );
+        $reporter =  $_POST['reporter'];
+
+        $statement = $db->prepare( "UPDATE Item set RefillTrigger = 1, OutOfStockDate = :date, OutOfStockReporter = :reporter WHERE ID = :itemID" );
+        $statement->bindValue( ":date", date('Y-m-d H:i:s', time()) );
+        $statement->bindValue( ":reporter", $reporter );
+        $statement->bindValue( ":itemID", $_POST['itemID'] );
+        $statement->execute();
+
         sendSlackMessageToMatt( "*Item Name:* " . $itemName . "\n*Reporter:* " . $reporter, ":negative_squared_cross_mark:", "OUT OF STOCK REPORT", "#791414" );
     }
-    else if($type == "DrawCart" ) {
+    else if( $type == "DrawCart" ) {
         $itemQuantities = array();
         $itemPrices = array();
         $itemDiscountPrices = array();
@@ -583,7 +612,10 @@
 
         foreach ($itemsInCart as $itemID) {
             if (array_key_exists($itemID, $itemQuantities) === false) {
-                $results = $db->query("SELECT * FROM Item WHERE ID =" . $itemID);
+                $statement = $db->prepare("SELECT * FROM Item WHERE ID = :itemID");
+                $statement->bindValue( ":itemID",  $itemID );
+                $results = $statement->execute();
+
                 $row = $results->fetchArray();
                 $itemName = $row['Name'];
                 $itemPrice = $row['Price'];
@@ -745,24 +777,30 @@
 
         echo "</div>";
         echo "</form>";
-    } else if($type == "UpdateChecklist" )
-    {
+    } else if($type == "UpdateChecklist" ) {
         $itemID = $_POST['id'];
         $checklistType = $_POST['checklistType'];
         $isBought = 0;
 
-        $results = $db->query("SELECT IsBought, Name, Type, ShelfQuantity, BackstockQuantity, Retired FROM Item WHERE ID =" . $itemID );
+        $statement = $db->prepare("SELECT IsBought, Name, Type," . getQuantityQuery() . ",Retired FROM Item i WHERE ID = :itemID"  );
+        $statement->bindValue( ":itemID", $itemID );
+        $results = $statement->execute();
+
         $row = $results->fetchArray();
 
         if( $row['IsBought'] == 1 ) {
-            $db->exec( "UPDATE Item set IsBought = 0 WHERE ID = " . $itemID );
+            $statement = $db->prepare( "UPDATE Item set IsBought = 0 WHERE ID = :itemID" );
+            $statement->bindValue( ":itemID", $itemID );
+            $statement->execute();
             $isBought = 0;
         } else {
-            $db->exec( "UPDATE Item set IsBought = 1 WHERE ID = " . $itemID );
+            $statement = $db->prepare( "UPDATE Item set IsBought = 1 WHERE ID = :itemID" );
+            $statement->bindValue( ":itemID", $itemID );
+            $statement->execute();
             $isBought = 1;
         }
 
-        drawCheckListRow( $isBought, $itemID, $row['Name'], $row['Type'], $row['ShelfQuantity'], $row['BackstockQuantity'], $row['Retired'], $checklistType );
+        drawCheckListRow( $isBought, $itemID, $row['Name'], $row['Type'], $row['ShelfAmount'], $row['BackstockAmount'], $row['Retired'], $checklistType, "" );
         die();
     }
 ?>
diff --git a/common/handle_forms.php b/common/handle_forms.php
index fdf1a7f..741971a 100644
--- a/common/handle_forms.php
+++ b/common/handle_forms.php
@@ -1,13 +1,15 @@
 <?php
 include(__DIR__ . "/../appendix.php" );
 $db = new SQLite3( getDB() );
-if (!$db) die ($error);
+if (!$db) die ("DB is missing");
 
 
 include( SESSION_FUNCTIONS_PATH );
 include(UI_FUNCTIONS_PATH);
+include(QUANTITY_FUNCTIONS_PATH);
 include(SLACK_FUNCTIONS_PATH);
 include_once(LOG_FUNCTIONS_PATH);
+include_once(ACTION_FUNCTIONS_PATH);
 date_default_timezone_set('America/New_York');
 
 Login($db);
@@ -24,163 +26,12 @@ if(isset($_POST['Purchase'])) {
     } else {
         $itemsInCart = json_decode($_POST['items']);
         $cashOnly = isset( $_POST['CashOnly'] );
-
-        $totalPrice = 0.0;
-        $totalCredits = 0.0;
-        $totalSavings = 0.0;
-
-        $errors = "";
-        $purchaseMessage = "";
-        $itemType = "UNKNOWN";
-        $itemsOutOfStock = array();
-
-        $creditsOfUser = $_SESSION['Credits'];
-        $creditsLeftOfUser = $creditsOfUser;
-
-        foreach( $itemsInCart as $itemID ) {
-            $startTimeItem = time();
-            $results = $db->query("SELECT * FROM Item WHERE ID =" . $itemID );
-            $row = $results->fetchArray();
-            $itemPrice = $row['Price'];
-            $originalItemPrice = $itemPrice;
-            $discountItemPrice = $row['DiscountPrice'];
-
-            // Apply the discount
-            if( $discountItemPrice != "" && $discountItemPrice != 0 ) {
-                $totalSavings += ( $itemPrice - $discountItemPrice );
-                $itemPrice = $discountItemPrice;
-            }
-
-            if( $discountItemPrice == "" ) {
-                $discountItemPrice = 0;
-            }
-
-            $itemName = $row['Name'];
-            $shelfQuantity = $row['ShelfQuantity'];
-            $backstockQuantity = $row['BackstockQuantity'];
-            $itemType = $row['Type'];
-
-            if( $shelfQuantity - 1 <= -1 ) {
-                $errors .= "Not enough " . $itemName . " in stock. Purchase of THAT ITEM cancelled. Contact Matt.\\n";
-            } else {
-
-                $refillTriggerAmount = $itemType == "Snack" ? 3 : 1;
-                $refillTrigger = "";
-                if( $shelfQuantity - 1 <= $refillTriggerAmount ) {
-
-                    if( $shelfQuantity - 1 <= 0  ) {
-                        $itemsOutOfStock[] = $itemName;
-                    }
-                    $date = date('Y-m-d H:i:s', time());
-                    $refillTrigger = " ,RefillTrigger = 1, OutOfStockDate = '$date', OutOfStockReporter='SodaBot'";
-                }
-
-                $date = date('Y-m-d H:i:s', time());
-                $useCredits = 0;
-
-                if( $creditsLeftOfUser > 0 && !$cashOnly ) {
-                    $useCredits = $creditsLeftOfUser;
-                    $creditsLeftOfUser -= $itemPrice;
-
-                    if( $creditsLeftOfUser < 0 ) {
-                        // If we went over their credit limit, we need to add it to their balance now
-                        $totalPrice += abs( $creditsLeftOfUser );
-                        $totalCredits += $useCredits;
-                        $creditsLeftOfUser = 0;
-                    } else {
-                        $useCredits = $itemPrice;
-                        $totalCredits += $itemPrice;
-                    }
-                } else {
-                    $totalPrice += $itemPrice;
-                }
-
-                $cashOnlyInteger = $cashOnly ? 1 : 0;
-
-                $inventoryQuery = "INSERT INTO Daily_Amount (ItemID, Date, BackstockQuantityBefore, BackstockQuantity, ShelfQuantityBefore, ShelfQuantity, Price, Restock, PurchaseID) VALUES($itemID, '$date', $backstockQuantity, $backstockQuantity, $shelfQuantity," . ($shelfQuantity - 1) . ", $itemPrice, 0, -2)";
-                $db->exec( $inventoryQuery );
-                $dailyAmountID = $db->lastInsertRowID();
-
-                $purchaseHistoryQuery = "INSERT Into Purchase_History (UserID, ItemID, Cost, DiscountCost, Date, CashOnly, DailyAmountID, UseCredits) VALUES (" . $_SESSION['UserID'] . "," . $itemID . "," . $originalItemPrice . "," . $discountItemPrice . ",'" . $date . "'," . $cashOnlyInteger .  ", " . $dailyAmountID . ",$useCredits)";
-
-                $newTotalIncome = addToValue( $db, "Item", "TotalIncome", $itemPrice, "where ID = $itemID", true );
-                $itemQuery = "UPDATE Item SET TotalIncome = $newTotalIncome, DateModified = '$date', ModifyType = 'Purchased by " . $_SESSION['UserID'] . "' where ID = $itemID";
-
-                $itemCountQuery = "UPDATE Item SET ShelfQuantity = ShelfQuantity - 1 $refillTrigger where ID = $itemID";
-
-                $newIncome = addToValue( $db, "Information", "Income", $itemPrice, "where ItemType = '$itemType'", true );
-                $informationQuery = "UPDATE Information SET Income = $newIncome where ItemType = '$itemType'";
-
-
-                $db->exec( $purchaseHistoryQuery );
-                $db->exec( $itemCountQuery );
-                $db->exec( $itemQuery );
-                $db->exec( $informationQuery );
-
-
-                $purchaseMessage = $purchaseMessage . "- " . $itemName . " (" . getPriceDisplayWithDollars( $itemPrice ) . ")\n";
-            }
-            $stopTimeItem = time();
-            $totalTimeItem = $stopTimeItem - $startTimeItem;
-
-            log_benchmark( "Time to complete purchase for [$itemName]: $totalTimeItem seconds" );
-        }
-
-        if( !$cashOnly ) {
-            $typeOfBalance = $itemType . "Balance";
-            $typeOfSavings = $itemType . "Savings";
-
-            $newBalance = addToValue( $db, "User", $typeOfBalance, $totalPrice, "where UserID = " . $_SESSION['UserID'], true );
-            $newSavings = addToValue( $db, "User", $typeOfSavings, $totalSavings, "where UserID = " . $_SESSION['UserID'], true );
-            $balanceUpdateQuery = "UPDATE User SET $typeOfBalance = $newBalance , $typeOfSavings = $newSavings, Credits = $creditsLeftOfUser where UserID = " . $_SESSION['UserID'];
-            log_sql("Balance Update SQL: [" . $balanceUpdateQuery . "]" );
-            $db->exec( $balanceUpdateQuery );
-
-            $_SESSION[$typeOfBalance] = $_SESSION[$typeOfBalance] + $totalPrice;
-        }
-
-        if( $totalCredits > 0 ) {
-            $purchaseMessage = $purchaseMessage . "*Total Credits:* " . getPriceDisplayWithDollars( $totalCredits ) . "\n";
-        }
-
-        if( $totalPrice > 0 ) {
-            $purchaseMessage = $purchaseMessage . "*Total Price:* " . getPriceDisplayWithDollars($totalPrice) . "\n";
-        }
-
-        if( !$cashOnly ) {
-            $totalBalance = $_SESSION['SodaBalance'] + $_SESSION['SnackBalance'];
-            $purchaseMessage = $purchaseMessage . "*Your Balance:* " . getPriceDisplayWithDollars( $totalBalance ) . "\n";
-        } else {
-            $purchaseMessage = $purchaseMessage . "*THIS PURCHASE WAS CASH-ONLY*\n";
-        }
-
-        if( $_SESSION["SlackID"] == "" ) {
-            sendSlackMessageToMatt( "Failed to send notification for " . $_SESSION['UserName'] . ". Create a SlackID!", ":no_entry:", $itemType . "Stock - ERROR!!", "#bb3f3f" );
-        } else {
-            sendSlackMessageToUser( $_SESSION["SlackID"],  $purchaseMessage , ":shopping_trolley:" , $itemType . "Stock - RECEIPT", "#3f5abb" );
-        }
-
-        sendSlackMessageToMatt( "*(" . strtoupper($_SESSION['FirstName'] . " " . $_SESSION['LastName']) . ")*\n" . $purchaseMessage, ":shopping_trolley:", $itemType . "Stock - RECEIPT", "#3f5abb" );
-        $userMessage = "Purchase Completed";
-        $_SESSION['PurchaseCompleted'] = 1;
-
-        if( $errors != "" ) {
-            error_log( "ERROR: [" . $_SESSION['UserID'] . "]" . $errors );
-            $userMessage = "Something went wrong - contact Matt!! " . $errors;
-            sendSlackMessageToMatt( "Errors: " . $errors, ":no_entry:", $itemType . "Stock - ERROR!!", "#bb3f3f" );
-        }
-
-        if( count( $itemsOutOfStock) > 0 ) {
-            foreach($itemsOutOfStock  as $item ) {
-                sleep( 1 );
-                sendSlackMessageToMatt( "*Item Name:* " . $item . "\n*Buyer:* " . $_SESSION['FirstName'] . " " . $_SESSION['LastName'], ":negative_squared_cross_mark:", "OUT OF STOCK BY PURCHASE", "#791414" );
-            }
-        }
+        $userMessage = purchaseItems( $db, false, $_SESSION['UserID'], $itemsInCart, $cashOnly );
     }
 
 } else if(isset($_POST['Preferences'])) {
     $userID = $_SESSION['UserID'];
-    $anonAnimal = trim( $_POST['Preferences_AnonAnimal'] );
+    $anonAnimal = strip_tags( trim( $_POST['Preferences_AnonAnimal'] ) );
     $showDiscontinued = 0;
     $showCashOnly = 0;
     $showCredit = 0;
@@ -217,7 +68,11 @@ if(isset($_POST['Purchase'])) {
         $showTrending = 1;
     }
 
-    $results = $db->query("SELECT count(*) as Total FROM User WHERE AnonName = '$anonAnimal' AND UserID != $userID" );
+    $statement = $db->prepare("SELECT count(*) as Total FROM User WHERE AnonName = :anonAnimal AND UserID != :userID" );
+    $statement->bindValue( ":anonAnimal", $anonAnimal );
+    $statement->bindValue( ":userID", $userID );
+    $results = $statement->execute();
+
     $row = $results->fetchArray();
     $total = $row['Total'];
 
@@ -225,14 +80,23 @@ if(isset($_POST['Purchase'])) {
     if( $total > 0 ) {
         $userMessage = "The Anonymous Animal '$anonAnimal' is already being used by another user.";
     } else {
-        $anonNameUpdate = ", AnonName = '$anonAnimal' ";
+        $anonNameUpdate = ", AnonName = :anonAnimal ";
         $_SESSION['AnonName'] = $anonAnimal;
         $userMessage = "User Preferences saved.";
     }
 
-    $editUserQuery = "UPDATE User SET ShowDiscontinued=$showDiscontinued, ShowCashOnly=$showCashOnly, ShowCredit=$showCredit, ShowItemStats=$showItemStats, ShowShelf=$showShelf, SubscribeRestocks=$subscribeRestocks, ShowTrending=$showTrending $anonNameUpdate where UserID = $userID";
-    log_sql("Edit User SQL: [" . $editUserQuery . "]" );
-    $db->exec( $editUserQuery );
+    $statement = $db->prepare( "UPDATE User SET ShowDiscontinued=:showDiscontinued, ShowCashOnly=:showCashOnly, ShowCredit=:showCredit, ShowItemStats=:showItemStats, " .
+        "ShowShelf=:showShelf, SubscribeRestocks=:subscribeRestocks, ShowTrending=:showTrending $anonNameUpdate where UserID = :userID" );
+    $statement->bindValue( ":showDiscontinued", $showDiscontinued );
+    $statement->bindValue( ":showCashOnly", $showCashOnly );
+    $statement->bindValue( ":showCredit", $showCredit );
+    $statement->bindValue( ":showItemStats", $showItemStats );
+    $statement->bindValue( ":showShelf", $showShelf );
+    $statement->bindValue( ":subscribeRestocks", $subscribeRestocks );
+    $statement->bindValue( ":showTrending", $showTrending );
+    $statement->bindValue( ":anonAnimal", $anonAnimal );
+    $statement->bindValue( ":userID", $userID );
+    $statement->execute();
 
     $_SESSION['ShowDiscontinued'] = $showDiscontinued;
     $_SESSION['ShowCashOnly'] = $showCashOnly;
@@ -248,25 +112,36 @@ if(isset($_POST['Purchase'])) {
     $itemName = $db->escapeString(trim($_POST["ItemName_Request"]));
     $note = "";
 
-    if( isset( $_POST["Note_Request"]) ) {
-        $note = $db->escapeString(trim($_POST["Note_Request"]));
-    }
+    if( $itemName == "" ) {
+        $userMessage = "Your request cannot be blank.";
+    } else {
 
-    $userID = $_SESSION['UserID'];
-    $username = $_SESSION['FirstName'] . " " . $_SESSION['LastName'];
-    $slackID = $_SESSION['SlackID'];
+        if (isset($_POST["Note_Request"])) {
+            $note = $db->escapeString(trim($_POST["Note_Request"]));
+        }
 
-    if( $slackID == "" ) {
-        sendSlackMessageToMatt( "Failed to send notification for " . $username . ". Create a SlackID!", ":no_entry:", $itemType . "Stock - ERROR!!", "#bb3f3f"  );
-    } else {
-        sendSlackMessageToUser( $slackID,  "*Item Name:* " . $itemName . "\n*Notes:* " . $note, ":ballot_box_with_ballot:", "REQUEST RECEIVED", "#863fbb" );
-    }
+        $userID = $_SESSION['UserID'];
+        $username = $_SESSION['FirstName'] . " " . $_SESSION['LastName'];
+        $slackID = $_SESSION['SlackID'];
 
-    sendSlackMessageToMatt( "*(" . strtoupper($username) . ")*\n*Item Name:* " . $itemName . "\n*Notes:* " . $note, ":ballot_box_with_ballot:", "REQUEST RECEIVED", "#863fbb" );
+        if ($slackID == "") {
+            sendSlackMessageToMatt("Failed to send notification for " . $username . ". Create a SlackID!", ":no_entry:", $itemType . "Stock - ERROR!!", "#bb3f3f");
+        } else {
+            sendSlackMessageToUser($slackID, "*Item Name:* " . $itemName . "\n*Notes:* " . $note, ":ballot_box_with_ballot:", "REQUEST RECEIVED", "#863fbb", $_SESSION['UserName']);
+        }
 
-    $db->exec("INSERT INTO Requests (UserID, ItemName, Date, Note, ItemType,Priority) VALUES($userID, '$itemName', '$date', '$note', '$itemType', '')");
+        sendSlackMessageToMatt("*(" . strtoupper($username) . ")*\n*Item Name:* " . $itemName . "\n*Notes:* " . $note, ":ballot_box_with_ballot:", "REQUEST RECEIVED", "#863fbb");
 
-    $userMessage = "Request submitted successfully.";
+        $statement = $db->prepare("INSERT INTO Requests (UserID, ItemName, Date, Note, ItemType, Priority) VALUES(:userID, :itemName, :date, :note, :itemType, '')");
+        $statement->bindValue(":userID", $userID);
+        $statement->bindValue(":itemName", $itemName);
+        $statement->bindValue(":date", $date);
+        $statement->bindValue(":note", $note);
+        $statement->bindValue(":itemType", $itemType);
+        $statement->execute();
+
+        $userMessage = "Request submitted successfully.";
+    }
 } else if(isset($_POST['Shopping'])) {
         $itemID = trim($_POST["ItemDropdown"]);
         $store = trim($_POST["StoreDropdown"]);
@@ -294,10 +169,31 @@ if(isset($_POST['Purchase'])) {
             $store = "'$store'";
         }
 
+        $statement = $db->prepare( "INSERT INTO Shopping_Guide (ItemID, PackQuantity, RegularPrice, SalePrice, Store, User, Date) VALUES " .
+            "(:itemID, :packQuantity, :regularPrice, :salePrice, :store, :submitter, :date)" );
+
+        $statement->bindValue( ":itemID", $itemID );
+        $statement->bindValue( ":packQuantity", $packQuantity );
+        $statement->bindValue( ":regularPrice", $regularPrice );
+        $statement->bindValue( ":salePrice", $salePrice );
+        $statement->bindValue( ":store", $store );
+        $statement->bindValue( ":submitter", $submitter );
+        $statement->bindValue( ":date", $date );
+        $statement->execute();
+
+} else if(isset($_POST['RegisterUser'])) {
+    $username = $db->escapeString(trim($_POST["UserName"]));
+    $password = $_POST["Password"];
+    $passwordAgain = $_POST["PasswordAgain"];
+    $firstName = $db->escapeString($_POST["FirstName"]);
+    $lastName = $db->escapeString($_POST["LastName"]);
+    $phoneNumber = "";
+
+    if( isset( $_POST['PhoneNumber'] ) ) {
+        $phoneNumber = $db->escapeString($_POST["PhoneNumber"]);
+    }
 
-        $shoppingQuery = "INSERT INTO Shopping_Guide (ItemID, PackQuantity, RegularPrice, SalePrice, Store, User, Date) VALUES($itemID, $packQuantity, $regularPrice, $salePrice, $store, '$submitter', '$date')";
-        log_sql("Shopping SQL: [" . $shoppingQuery . "]" );
-        $db->exec( $shoppingQuery );
+    $userMessage = registerUser( $db, false, $username, $password, $passwordAgain, $firstName, $lastName, $phoneNumber );
 } else {
     // ------------------------------------
     // HANDLE ADMIN QUERIES
@@ -306,27 +202,15 @@ if(isset($_POST['Purchase'])) {
         $userMessage = "YOU ARE NOT LOGGED IN AS ADMIN!";
     } else {
         if(isset($_POST['AddItem'])) {
-            $userMessage = addItem( $db, $_POST["ItemName"], $_POST["ChartColor"], $_POST["CurrentPrice"], $_POST["ItemType"] );
+            $userMessage = addItem( $db, $_POST["ItemName"], $_POST["ChartColor"], $_POST["CurrentPrice"], $_POST["CurrentDiscountPrice"], $_POST["ItemType"] );
         } else if(isset($_POST['EditItem'])) {
             $itemType = trim($_POST["ItemType"]);
 
-            $id = trim($_POST["Edit" . $itemType . "Dropdown"]);
+            $itemID = trim($_POST["Edit" . $itemType . "Dropdown"]);
             $name = trim($_POST["EditItemName" . $itemType]);
             $chartColor = trim($_POST["EditChartColor" . $itemType]);
             $price = convertDecimalToWholeCents( trim($_POST["EditPrice" . $itemType]) );
             $discountPrice = convertDecimalToWholeCents( trim($_POST["EditDiscountPrice" . $itemType]) );
-
-            $imageURL = "";
-            $thumbURL = "";
-
-            if( isset( $_POST["EditImageURL" . $itemType] ) ) {
-                $imageURL = trim($_POST["EditImageURL" . $itemType]);
-            }
-
-            if( isset( $_POST["EditThumbURL" . $itemType] ) ) {
-                $thumbURL = trim($_POST["EditThumbURL" . $itemType]);
-            }
-
             $unitName = trim($_POST["EditUnitName" . $itemType]);
             $unitNamePlural = trim($_POST["EditUnitNamePlural" . $itemType]);
             $alias = trim($_POST["EditAlias" . $itemType]);
@@ -334,42 +218,7 @@ if(isset($_POST['Purchase'])) {
             $status = trim($_POST["EditStatus" . $itemType]);
             $expirationDate = trim($_POST["EditExpirationDate" . $itemType]);
 
-            $retired = $status == "active" ? 0 : 1;
-
-            $updateImageURL = "";
-            $updateThumbURL = "";
-
-            if ( is_uploaded_file($_FILES['uploadedImage']['tmp_name'] ) ) {
-                log_debug( "FOUND TMP: [" .$_FILES['uploadedImage']['tmp_name'] . "]" );
-                log_debug( "FOUND NAME: [" .$_FILES['uploadedImage']['name'] . "]" );
-                $targetFileName = basename( $_FILES['uploadedImage']['name'] );
-                log_debug( "FOUND TARGET: [" .$targetFileName . "]" );
-                $target = IMAGES_NORMAL_PATH . $targetFileName;
-                log_debug( "FOUND TARGET PATH: [" .$target . "]" );
-
-                if( !move_uploaded_file( $_FILES['uploadedImage']['tmp_name'], $target ) ) {
-                    error_log(" THERE WAS AN ERROR UPLOADING THIS IMAGE: " . $_FILES['uploadedImage']['tmp_name'] );
-                } else {
-                    $updateImageURL = ", ImageURL = '$targetFileName'";
-                    log_debug( "FOUND UPDATE: [" .$updateImageURL . "]" );
-                }
-            }
-
-            if ( is_uploaded_file($_FILES['uploadedThumb']['tmp_name'] ) ) {
-                $targetFileName = basename( $_FILES['uploadedThumb']['name'] );
-                $target = IMAGES_THUMBNAILS_PATH . $targetFileName;
-                if( !move_uploaded_file( $_FILES['uploadedThumb']['tmp_name'], $target ) ) {
-                    error_log(" THERE WAS AN ERROR UPLOADING THIS THUMBNAIL: " . $_FILES['uploadedThumb']['tmp_name'] );
-                } else {
-                    $updateThumbURL = ", ThumbURL = '$targetFileName'";
-                }
-            }
-
-            $editUserQuery = "UPDATE Item SET Name='$name', ChartColor='$chartColor', Price = $price, DiscountPrice = $discountPrice, Retired = $retired $updateImageURL $updateThumbURL, UnitName = '$unitName', UnitNamePlural = '$unitNamePlural', Alias = '$alias', CurrentFlavor = '$currentFlavor', ExpirationDate = '$expirationDate' where ID = $id";
-            log_sql("Edit Item SQL: [" . $editUserQuery . "]" );
-            $db->exec( $editUserQuery );
-
-            $userMessage = "Item \"$name\" edited successfully.";
+            $userMessage = editItem( $db, $itemID, $name, $chartColor, $price, $discountPrice, $unitName, $unitNamePlural, $alias, $currentFlavor, $status, $expirationDate );
         } else if(isset($_POST['SendBot'])) {
             $botMessage = trim($_POST["BotMessage"]);
             $emoji = trim($_POST["Emoji"]);
@@ -380,7 +229,7 @@ if(isset($_POST['Purchase'])) {
             $_SESSION['Emoji'] = $emoji;
             sendSlackMessageToNerdHerd($botMessage, ":$emoji:", $botName );
         } else if(isset($_POST['EditUser'])) {
-            $id = trim($_POST["EditUserDropdown"]);
+            $userID = trim($_POST["EditUserDropdown"]);
             $slackID = trim($_POST["SlackID"]);
             $anonName = trim($_POST["AnonName"]);
 
@@ -400,352 +249,71 @@ if(isset($_POST['Purchase'])) {
                 $resetPassword = true;
             }
 
-            $uniqueID = uniqid();
-            $resetPasswordQuery = "";
-
-            if( $resetPassword == true ) {
-                log_debug("Resetting Password");
-                $resetPasswordQuery = " Password='" . sha1($uniqueID) . "',";
-                $userMessage = $userMessage . "Password for user was reset to \"$uniqueID\". ";
-            }
-
-            $editUserQuery = "UPDATE User SET SlackID='$slackID', AnonName='$anonName', $resetPasswordQuery Inactive = $inactive, IsCoop = $isCoop where UserID = $id";
-            log_sql("Edit User SQL: [" . $editUserQuery . "]" );
-            $db->exec( $editUserQuery );
-
-            $userMessage = $userMessage . "User edited successfully.";
+            $userMessage = editUser( $db, $userID, $slackID, $anonName, $inactive, $resetPassword, $isCoop );
         } else if(isset($_POST['CreditUser'])) {
-            $id = trim($_POST["EditUserDropdown"]);
+            $userID = trim($_POST["EditUserDropdown"]);
             $creditAmountInDecimal = trim($_POST["CreditAmount"]);
-            $creditAmountWholeCents = convertDecimalToWholeCents( $creditAmountInDecimal );
-
-            $returnCredits = false;
-            $validCredits = true;
-
-            $creditResults = $db->query("SELECT Credits, SlackID, FirstName, LastName, UserName From User where UserID = $id");
-            $creditRow = $creditResults->fetchArray();
-            $currentCredits = $creditRow['Credits'];
-            $slackID = $creditRow['SlackID'];
-            $username = $creditRow['UserName'];
-            $name = $creditRow['FirstName'] . " " . $creditRow['LastName'];
-
-            $creditMessage = "Welp, I got nothing. Talk to Matt.";
-
-            if( isset($_POST["ReturnCredits"]) ) {
-                if( $currentCredits - $creditAmountWholeCents < 0 ) {
-                    $validCredits = false;
-                    $userMessage = $userMessage . "Failure! User only has $currentCredits cents -  cannot subtract $creditAmountWholeCents cents!";
-                }
-                $creditAmountWholeCents = $creditAmountWholeCents * -1;
-
-                $creditMessage = "*$" . $creditAmountInDecimal . "* credits have been deducted from your account.";
-            } else {
-                $creditMessage = "*$" . $creditAmountInDecimal . "* credits have been added to your account.";
-            }
-
-            if( $validCredits ) {
-                $editUserQuery = "UPDATE User SET Credits=Credits + $creditAmountWholeCents where UserID = $id";
-                log_sql("Edit User SQL: [" . $editUserQuery . "]");
-                $db->exec($editUserQuery);
+            $returnCredits = isset($_POST["ReturnCredits"]);
 
-                $date = date('Y-m-d H:i:s', time());
-
-                $purchaseHistoryQuery = "INSERT Into Purchase_History (UserID, ItemID, Cost, Date ) VALUES ($id, " . CREDIT_ID . ", $creditAmountWholeCents,'" . $date . "')";
-                log_sql("Update Purchase_History SQL: [" . $purchaseHistoryQuery . "]");
-                $db->exec($purchaseHistoryQuery);
-
-                $userMessage = $userMessage . "User credited successfully with " . getPriceDisplayWithDollars($creditAmountWholeCents);
-
-                if( $slackID == "" ) {
-                    sendSlackMessageToMatt( "Failed to send notification for " . $username . ". Create a SlackID!", ":no_entry:", "FoodStock - ERROR!!", "#bb3f3f" );
-                } else {
-                    sendSlackMessageToUser($slackID,  $creditMessage , ":label:" , $itemType . "Stock - CREDITS", "#3f5abb" );
-                    sendSlackMessageToMatt( "*(" . strtoupper($name ) . ")*\n" . $creditMessage, ":label:", "FoodStock - CREDITS", "#3f5abb" );
-
-                }
-            }
+            $userMessage = creditUser( $db, false, $userID, $creditAmountInDecimal, $returnCredits );
         } else if(isset($_POST['Restock'])) {
-            $id = trim($_POST["RestockDropdown"]);
+            $itemID = trim($_POST["RestockDropdown"]);
             $itemType = trim($_POST["ItemType"]);
-            $date = date('Y-m-d H:i:s');
-            $numberOfCans = trim($_POST["NumberOfCans"]);
-            $cost = convertDecimalToWholeCents(  trim($_POST["Cost"] ) );
+            $quantity = trim($_POST["NumberOfCans"]);
+            $expDate = trim($_POST["ExpDate"]);
+            $retailCost = $_POST["Cost"];
             $multiplier = trim($_POST["Multiplier"]);
 
-            if( $multiplier > 1 ) {
-                $numberOfCans *= $multiplier;
-                $cost *= $multiplier;
-            }
-
-            $restockTrigger = "";
-            if( $numberOfCans > 3 ) {
-                $date = date('Y-m-d H:i:s', time());
-                $restockTrigger = " RestockTrigger = 0, IsBought = 0,";
-            }
-
-            $db->exec("INSERT INTO Restock (ItemID, Date, NumberOfCans, Cost) VALUES($id, '$date', $numberOfCans, $cost)");
-
-            $newTotalExpenses = addToValue( $db, "Item", "TotalExpenses", $cost, "where ID = $id", true );
-            $db->exec("UPDATE Item SET TotalExpenses = $newTotalExpenses, $restockTrigger BackstockQuantity = BackstockQuantity + $numberOfCans, TotalCans = TotalCans + $numberOfCans where ID = $id");
-
-            $newExpenses = addToValue( $db, "Information", "Expenses", $cost, "where ItemType = '$itemType'", true );
-            $db->exec("UPDATE Information SET Expenses = $newExpenses where ItemType = '$itemType'");
-
-            $userMessage = "Restocked successfully.";
+            $userMessage = restockItem( $db, $itemID, $quantity, $multiplier, $retailCost, $itemType, $expDate );
         }  else if(isset($_POST['Defective'])) {
-            $id = trim($_POST["DefectiveDropdown"]);
+            $itemID = trim($_POST["DefectiveDropdown"]);
             $itemType = trim($_POST["ItemType"]);
-            $date = date('Y-m-d H:i:s');
-            $numberOfCans = trim($_POST["NumberOfUnits"]);
-
-            $results = $db->query("SELECT Price, BackstockQuantity, ShelfQuantity From Item where ID = $id");
-            $row = $results->fetchArray();
-            $price = $row['Price'];
-            $shelfQuantity = $row['ShelfQuantity'];
-            $backstockQuantity = $row['BackstockQuantity'];
-
-            $totalQuantity = $shelfQuantity + $backstockQuantity;
-
-            if( $numberOfCans > $totalQuantity ) {
-                $userMessage = "Error: Trying to defect out more than you have.";
-            } else {
-                $shelfDecrement = 0;
-                $backstockDecrement = 0;
-
-                if( $numberOfCans > $shelfQuantity ) {
-                    $backstockDecrement = $numberOfCans -  $shelfQuantity;
-                    $shelfDecrement  = $shelfQuantity;
-                } else {
-                    $shelfDecrement = $numberOfCans;
-                }
-
-                $db->exec("INSERT INTO Defectives (ItemID, Date, Amount, Price) VALUES($id, '$date', $numberOfCans, $price)");
-                $db->exec("UPDATE Item SET ShelfQuantity=ShelfQuantity-$shelfDecrement, BackstockQuantity=BackstockQuantity-$backstockDecrement WHERE ID = $id");
-                $userMessage = "Defectives successfully.";
-            }
+            $quantity = trim($_POST["NumberOfUnits"]);
+            $userMessage = defectItem( $db, $itemID, $quantity );
+
         } else if(isset($_POST['Payment'])) {
             $userID = trim($_POST["UserID"]);
             $paymentMonth = trim($_POST["Month"]);
-            $date = date('Y-m-d H:i:s');
             $snackAmount = convertDecimalToWholeCents( trim($_POST["SnackAmount"]) );
             $sodaAmount = convertDecimalToWholeCents( trim($_POST["SodaAmount"]) );
             $note = trim($_POST["Note"]);
             $method = trim($_POST["MethodDropdown"]);
-            log_payment( "Incoming payment for User [$userID] Month [$paymentMonth] Snack[$snackAmount] Soda[$sodaAmount]" );
 
-            if( $userID > 0 ) {
-                log_payment( "User payment found for [$userID]" );
-                $results = $db->query("SELECT SodaBalance, SnackBalance, SlackID, UserName, FirstName, LastName From User where UserID = $userID");
-                $row = $results->fetchArray();
-                $sodaBalance = $row['SodaBalance'];
-                $snackBalance = $row['SnackBalance'];
-                $slackID = $row['SlackID'];
-                $username = $row['FirstName'] . " " . $row['LastName'];
+            $userMessage = makePayment( $db, $userID, $paymentMonth, $sodaAmount, $snackAmount, $note, $method );
 
-                $isBalanceValid = true;
 
-                if( $sodaAmount > $sodaBalance ) {
-                    $isBalanceValid = false;
-                    error_log( "Bad Soda balance. Amount: [" . $sodaAmount . "] Balance: [" . $sodaBalance . "]" );
-                    $userMessage = "This payment [" . getPriceDisplayWithDollars( $sodaAmount ) . "] is larger than the user\"s Soda Balance of [" . getPriceDisplayWithDollars( $sodaBalance ) . "]. Payment denied!";
-                }
+            // WHEN DOING FULL ADUIT THE PROCESS SHOULD BE...
+            // COUNT BACKSTOCK, REFILL WHATEVER IS MISSING
+            // COUNT SHELF, INVENTORY WHAT IS MISSING
+            // SHELF AND BACKSTOCK SHOULD BE READONLY
 
-                if( $snackAmount > $snackBalance) {
-                    $isBalanceValid = false;
-                    error_log( "Bad Snack balance. Amount: [" . $snackAmount . "] Balance: [" . $snackBalance . "]" );
-                    $userMessage = "This payment [" . getPriceDisplayWithDollars( $snackAmount ) . "] is larger than the user\"s Snack Balance of [" . getPriceDisplayWithDollars( $snackBalance ) . "]. Payment denied!";
-                }
+            // INVENTORY MEANS WE ARE SUBTRACTING STUFF - REMOVING FROM ITEMS_IN_STOCK
+            // TURNS INTO A COUNT IN THE INVENTORY_HISTORY - STORE THE LARGEST RETAIL COST SINCE WE'RE GROUPING
+            // IF WE HAVE TO UNDO WE'LL LOSE THOSE CHEAPER RETAIL COSTS WHEN WE PUT BACK INTO ITEMS_IN_STOCK BUT THATS YOUR PROBLEM
 
-                if( $isBalanceValid ) {
-                    $newSodaBalance = $sodaBalance - $sodaAmount;
-                    log_payment( "Reduced Soda balance [" . $newSodaBalance . "] is [" . $sodaBalance . " Balance - " . $sodaAmount . " Amount]" );
+            // REFILL MEANS WERE FLIPPING THE BACKSTOCK BIT ON X NUMBER OF ITEMS - NOTHING ELSE, NO SUBTRACTION OR ADDING
 
-                    $newSnackBalance = $snackBalance - $snackAmount;
-                    log_payment( "Reduced Snack balance [" . $newSnackBalance . "] is [" . $snackBalance . " Balance - " . $snackAmount . " Amount]" );
-
-                    $newTotalBalance = $newSodaBalance + $newSnackBalance;
-                    $balance = $sodaBalance + $snackBalance;
-                    $amount = $sodaAmount + $snackAmount;
-
-                    $paymentMessage = "Your payment with $method was received for $paymentMonth.\n\n" .
-                    "Your Current Balance: *" . getPriceDisplayWithDollars( $newTotalBalance ) . "*       (*" . getPriceDisplayWithDollars( $balance ) . "* original balance  -  *" . getPriceDisplayWithDollars( $amount ) . "* payment)";
-
-                    if( $slackID == "" ) {
-                        sendSlackMessageToMatt( "Failed to send notification for " . $username . ". Create a SlackID!", ":no_entry:", "FoodStock - ERROR!!", "#bb3f3f");
-                    } else {
-                        sendSlackMessageToUser( $slackID,  $paymentMessage, ":dollar:", "PAYMENT RECEIVED", "#127b3c" );
-                    }
-
-                    sendSlackMessageToMatt( "*(" . strtoupper($username) . ")*\n$paymentMessage", ":dollar:", "PAYMENT RECEIVED", "#127b3c" );
-
-                    // DEV: Changing this code? Change the payment code for Auditing as well (above)
-                    $db->exec("INSERT INTO Payments (UserID, Method, Amount, Date, Note, ItemType, MonthForPayment) VALUES($userID, '$method', $sodaAmount, '$date', '$note', 'Soda', '$paymentMonth')");
-                    $db->exec("INSERT INTO Payments (UserID, Method, Amount, Date, Note, ItemType, MonthForPayment) VALUES($userID, '$method', $snackAmount, '$date', '$note', 'Snack', '$paymentMonth')");
-
-                    $newSodaBalance = addToValue( $db, "User", "SodaBalance", $sodaAmount, "where UserID = $userID", false );
-                    $newSnackBalance = addToValue( $db, "User", "SnackBalance", $snackAmount,  "where UserID = $userID", false );
-
-                    $db->exec("UPDATE User SET SodaBalance = $newSodaBalance where UserID = $userID");
-                    $db->exec("UPDATE User SET SnackBalance = $newSnackBalance where UserID = $userID");
-
-                    $newProfitSoda = addToValue( $db, "Information", "ProfitActual", $sodaAmount, "where ItemType = 'Soda'", true );
-                    $newProfitSnack = addToValue( $db, "Information", "ProfitActual", $snackAmount, "where ItemType = 'Snack'", true );
+            // ADDING IS FOR RESTOCK
+        } else if(isset($_POST['Inventory'])) {
+            $itemID_all = $_POST["ItemID"];
+            $removeFromShelf_all = $_POST["ShelfQuantity"];
+            $auditAmount = $_POST["AuditAmount"];
+            $itemType = $_POST["ItemType"];
 
-                    $db->exec("UPDATE Information SET ProfitActual = $newProfitSoda where ItemType = 'Soda'");
-                    $db->exec("UPDATE Information SET ProfitActual = $newProfitSnack where ItemType = 'Snack'");
+            $userMessage = inventoryItem( $db, $itemID_all, $removeFromShelf_all, $auditAmount, $itemType );
 
-                    $userMessage = "Payment added successfully.";
-                }
-            }
-        } else if(isset($_POST['Inventory'])) {
-            $id_all = $_POST["ItemID"];
+        } else if(isset($_POST['Refill'])) {
+            $itemID_all = $_POST["RefillItemID"];
             $sendToSlack = false;
 
             if( isset($_POST['SendToSlack']) && $_POST['SendToSlack'] == 'on') {
                 $sendToSlack = true;
             }
 
-            $date = date('Y-m-d H:i:s');
-            $backstockQuantity_all = $_POST["BackstockQuantity"];
-            $shelfQuantity_all = $_POST["ShelfQuantity"];
-            $auditAmount = convertDecimalToWholeCents( $_POST["AuditAmount"] );
+            $addToShelf_all = $_POST["RefillAddToShelf"];
             $itemType = $_POST["ItemType"];
-            $price_all = 0;
-
-            if( isset($_POST['CurrentPrice']) ) {
-                $price_all = $_POST["CurrentPrice"];
-            }
-            $restocked = 0;
-
-            $backstockQuantityBefore = 0;
-            $shelfQuantityBefore = 0;
-            $priceBefore = 0;
-            $auditID = 0;
-            $auditMessage = "";
-
-            if( $auditAmount != "" ) {
-                log_debug(" Audit found [$auditAmount] - [$itemType]" );
-                $auditQuery = "INSERT INTO Audit (Date, MissingMoney, ItemType) VALUES('$date', 0, '$itemType')";
-                log_sql(" Audit SQL [$auditQuery]" );
-                $db->exec( $auditQuery );
-                $auditID = $db->lastInsertRowID();
-                $auditMessage = "(AUDIT #$auditID)";
-
-                $firstOfMonth = mktime(0, 0, 0, date("m"), 1, date("Y") );
-                $monthLabel = date('F Y', $firstOfMonth);
-                $paymentQuery = "INSERT INTO Payments (UserID, Method, Amount, Date, Note, ItemType, MonthForPayment, AuditID) VALUES(0, '', $auditAmount, '$date', 'Audited', '$itemType', '$monthLabel', $auditID)";
-                log_sql(" Payment SQL [$paymentQuery]" );
-                $db->exec( $paymentQuery);
-                $newProfit = addToValue( $db, "Information", "ProfitActual", $auditAmount, "where ItemType = '$itemType'", true );
-                $db->exec("UPDATE Information SET ProfitActual = $newProfit where ItemType = '$itemType'");
-            }
 
-            $slackMessageItems = "";
-            $itemType = "";
-
-            for ($i = 0; $i < count($id_all); $i++) {
-                $startTimeItem = time();
-                $id = $id_all[$i];
-                $backstockQuantity = $backstockQuantity_all[$i];
-                $shelfQuantity = $shelfQuantity_all[$i];
-                $price = $price_all == 0 ? "" : convertDecimalToWholeCents( $price_all[$i] );
-                $itemName = "N/A";
-
-
-                $results = $db->query("SELECT ID, BackstockQuantity, ShelfQuantity, Price, Name, Type, UnitName, UnitNamePlural, CurrentFlavor FROM Item WHERE ID = $id");
-                while ($row = $results->fetchArray()) {
-                    $backstockQuantityBefore = $row['BackstockQuantity'];
-                    $shelfQuantityBefore = $row['ShelfQuantity'];
-                    $priceBefore = $row['Price'];
-                    $itemName = $row['Name'];
-                    $itemType = $row['Type'];
-                    $itemUnits = $row['UnitName'];
-                    $itemUnitsPlural = $row['UnitNamePlural'];
-                    $currentFlavor = $row['CurrentFlavor'];
-
-                    if( $currentFlavor != "" ) {
-                        $currentFlavor = "[" . $currentFlavor . "] ";
-                    }
-                }
-
-                if( $price == "") {
-                    $price = $priceBefore;
-                }
-
-                $refillTrigger = "";
-                if( $shelfQuantity > $shelfQuantityBefore ) {
-                    //New item was added to the fridge
-                    $priceDisplay = getPriceDisplayWithEnglish( $priceBefore );
-
-                    $slackMessageItems = $slackMessageItems . "*" . $itemName . " $currentFlavor:* " . $shelfQuantityBefore . " " .
-                            ( $shelfQuantityBefore == 1 ? $itemUnits : $itemUnitsPlural ) .
-                            " --> *" . $shelfQuantity . " " .
-                            ( $shelfQuantity == 1 ? $itemUnits : $itemUnitsPlural ) . "*    ($priceDisplay)\n";
-
-                    // Only clear the trigger of the items that are refilled
-                    if( $shelfQuantity > 3 ) {
-                        $refillTrigger = "RefillTrigger = 0, IsBought = 0,";
-                    }
-                }
-
-                $totalCansBefore = $backstockQuantityBefore + $shelfQuantityBefore;
-                $totalCans = $backstockQuantity + $shelfQuantity;
-
-                $income = ($totalCansBefore - $totalCans) * $priceBefore;
-
-                $restockTrigger = "";
-                if( $backstockQuantity <= 3 ) {
-                    $date = date('Y-m-d H:i:s', time());
-                    $restockTrigger = " RestockTrigger = 1, ";
-                }
-
-                $refillTriggerAmount = $itemType == "Snack" ? 3 : 1;
-
-                if( $shelfQuantity <= $refillTriggerAmount ) {
-                    $date = date('Y-m-d H:i:s', time());
-                    $refillTrigger = " RefillTrigger = 1, ";
-                }
-
-                $dailyAmountQuery = "INSERT INTO Daily_Amount (ItemID, Date, BackstockQuantityBefore, BackstockQuantity, ShelfQuantityBefore, ShelfQuantity, Price, Restock, PurchaseID, AuditID) VALUES($id, '$date', $backstockQuantityBefore, $backstockQuantity, $shelfQuantityBefore, $shelfQuantity, $price, $restocked, -3, $auditID)";
-                log_sql("Daily Amount SQL: [" . $dailyAmountQuery . "]" );
-                $db->exec( $dailyAmountQuery );
-                $db->exec("UPDATE Item SET Price = $price, DateModified = '$date' where ID = $id");
-
-                $newTotalIncome = addToValue( $db, "Item", "TotalIncome", $income, "where ID = $id", true );
-                $db->exec("UPDATE Item SET TotalIncome = $newTotalIncome, BackstockQuantity = $backstockQuantity, ShelfQuantity = $shelfQuantity, $refillTrigger $restockTrigger DateModified = '$date', ModifyType = 'Counted' where ID = $id");
-
-                $newIncome = addToValue( $db, "Information", "Income", $income, "where ItemType = '$itemType'", true );
-                $db->exec("UPDATE Information SET Income = $newIncome where ItemType = '$itemType'");
-
-                $stopTimeItem = time();
-                $totalTimeItem = $stopTimeItem - $startTimeItem;
-
-                log_benchmark( "Time to complete purchase for [$itemName]: $totalTimeItem seconds" );
-            }
-
-
-            $userMessage = "Inventory was successful for " . count($id_all) . " items. $auditMessage";
-
-            $emoji = ":soda:";
-            $location = "fridge";
-            $page = SODASTOCK_LINK;
-
-            if( $itemType == "Snack" ) {
-                $emoji = ":cookie:";
-                $location = "cabinet";
-                $page = SNACKSTOCK_LINK;
-            }
-            if( $slackMessageItems != "" && $sendToSlack == true) {
-                $slackMessage = $slackMessageItems ."\n\nVisit <https://penguinore.net$page|Foodstock> to see the prices and inventory of all snacks & sodas.";
-
-                sendSlackMessageToRandom($slackMessage, $emoji, $itemType. "Stock - REFILL" );
-
-                $subscribeResults = $db->query("SELECT SlackID FROM User where SubscribeRestocks = 1" );
-                while( $row = $subscribeResults->fetchArray() ) {
-                    $slackIDToNotify = $row['SlackID'];
-                    sendSlackMessageToUser( $slackIDToNotify, $slackMessage, $emoji, $itemType. "Stock - REFILL", "#000000" );
-                }
-            }
+            $userMessage = refillItem( $db,  false, $itemID_all, $addToShelf_all, $sendToSlack );
         }
     }
 }
@@ -763,17 +331,4 @@ if( isset( $_POST['redirectURL'] ) ) {
     // Redirect to page
     header( "Location:" . $_POST['redirectURL'] );
 }
-
-function addItem( $db, $name, $chartColor, $price, $itemType ) {
-    $name = trim($name);
-    $date = date('Y-m-d H:i:s');
-    $chartColor = trim($chartColor);
-    $price = convertDecimalToWholeCents( trim( $price  ) );
-    $itemType = trim( $itemType );
-
-    $addItemQuery = "INSERT INTO Item (Name, Date, ChartColor, TotalCans, BackstockQuantity, ShelfQuantity, Price, TotalIncome, TotalExpenses, Type, RefillTrigger, RestockTrigger, IsBought) VALUES( '$name', '$date', '$chartColor', 0, 0, 0, $price, 0.00, 0.00, '$itemType', 0, 0, 0)";
-    $db->exec( $addItemQuery );
-
-    return "Item \"$name\" added successfully.";
-}
 ?>
\ No newline at end of file
diff --git a/common/header.php b/common/header.php
index 44785af..f4985e5 100644
--- a/common/header.php
+++ b/common/header.php
@@ -26,6 +26,11 @@
             $titleName = "Admin - Weekly Audit";
             $trackingName = "Admin - Weekly Audit";
             break;
+        case ADMIN_TESTING_LINK:
+            $isAdminPage = true;
+            $titleName = "Admin - Automation Testing";
+            $trackingName = "Admin - Automation Testing";
+            break;
         case ADMIN_BOT_LINK:
             $isAdminPage = true;
             $titleName = "Admin - Bot";
@@ -46,6 +51,11 @@
             $titleName = "Admin - Items";
             $trackingName = "Admin - Items";
             break;
+        case ADMIN_ITEMS_IN_STOCK_LINK:
+            $isAdminPage = true;
+            $titleName = "Admin - Items in Stock";
+            $trackingName = "Admin - Items in Stock";
+            break;
         case ADMIN_PAYMENTS_LINK:
             $isAdminPage = true;
             $titleName = "Admin - Payments";
@@ -119,9 +129,10 @@
     
     include( CSS_PATH );
 
-    include( SESSION_FUNCTIONS_PATH );
-    include( UI_FUNCTIONS_PATH );
-    include( SLACK_FUNCTIONS_PATH );
+    include_once( SESSION_FUNCTIONS_PATH );
+    include_once( UI_FUNCTIONS_PATH );
+    include_once( QUANTITY_FUNCTIONS_PATH );
+    include_once( SLACK_FUNCTIONS_PATH );
     require_once( MOBILE_DETECTION_PATH );
     
     $db = new SQLite3( getDB() );
@@ -175,7 +186,7 @@
             echo "loadItemModals('Snack');\n";
         }
 
-        if( $url == ADMIN_SHOPPING_GUIDE_LINK ) {
+        if( $url == ADMIN_SHOPPING_GUIDE_LINK || $url == ADMIN_CHECKLIST_LINK ) {
             echo "loadShoppingModal();\n";
         }
 
diff --git a/css/style_6_3.css b/css/style_6_3.css
index d1aaafd..a93c110 100644
--- a/css/style_6_3.css
+++ b/css/style_6_3.css
@@ -408,47 +408,6 @@ body { font-family: Helvetica, Arial, Sans-Serif; margin:0 auto; width:100%; hei
     margin-right:5px;
 }
 
-.version {
-	background-color: #1b79ef;
-}
-
-.version_old {
-    background-color: #10335e;
-}
-
-.version, .version_old {
-    /*
-    background-image: -webkit-linear-gradient(42deg, #a50707 100px, #246f05 130px);
-    background-image: -ms-linear-gradient(42deg, #a50707 100px, #246f05 130px);
-    */
-    color:#FFFFFF;
-    font-weight:bold;
-    padding:5px;
-    border: #000 2px solid;
-    /*animation: version_color 10s infinite linear;*/
-}
-
-.version a, .version_old a {
-    color:#FFFFFF;
-}
-
-.version a:visited, .version_old a:visited {
-	color:#FFFFFF;
-}
-
-.version a:hover, .version_old a:hover {
-    color: #5aecf6;
-}
-
-
-
-
-
-
-
-
-
-
 
 .post-module-discontinued {
 	opacity:0.33;
@@ -1119,6 +1078,14 @@ body { font-family: Helvetica, Arial, Sans-Serif; margin:0 auto; width:100%; hei
   background-color: #fdcbcb;
 }
 
+.rounded_table .backstock_row:nth-child(even), .rounded_table_no_border .backstock_row:nth-child(even)  {
+  background-color: #1d1d1d;
+}
+
+.rounded_table .backstock_row:nth-child(odd), .rounded_table_no_border .backstock_row:nth-child(odd)  {
+  background-color: #393838;
+}
+
 .rounded_table tr:hover, .rounded_table_no_border tr:hover {
   font-weight:bold;
 }
@@ -1291,7 +1258,7 @@ body { font-family: Helvetica, Arial, Sans-Serif; margin:0 auto; width:100%; hei
 
 #navigation_bar {
     color:#FFF;
-    background-color:#46465f;
+    background-color:#36365d;
     z-index: 3000;
     border-bottom: 3px solid #000;
     width:100%;
@@ -1351,6 +1318,155 @@ body { font-family: Helvetica, Arial, Sans-Serif; margin:0 auto; width:100%; hei
     margin: 0 auto;
 }
 
+.goal_meter {
+    width: 185px;
+    height: 20px;  /* Can be anything */
+	position: relative;
+	background: #000000;
+	-moz-border-radius: 25px;
+	-webkit-border-radius: 25px;
+	border-radius: 25px;
+	padding: 3px;
+	box-shadow: inset 0 -1px 1px rgba(255,255,255,0.3);
+}
+
+.goal_meter > .goal_bar {
+  display: block;
+  height: 100%;
+  border-top-right-radius: 8px;
+  border-bottom-right-radius: 8px;
+  border-top-left-radius: 20px;
+  border-bottom-left-radius: 20px;
+  background-color: rgb(43,194,83);
+  background-image: linear-gradient(
+    center bottom,
+    rgb(43,194,83) 37%,
+    rgb(84,240,84) 69%
+  );
+  box-shadow:
+    inset 0 2px 9px  rgba(255,255,255,0.3),
+    inset 0 -2px 6px rgba(0,0,0,0.4);
+  position: relative;
+  overflow: hidden;
+}
+
+.goal_meter > .goal_bar:after, .animate > .goal_bar > .goal_bar {
+  content: "";
+  position: absolute;
+  top: 0; left: 0; bottom: 0; right: 0;
+  background-image: linear-gradient(
+    -45deg,
+    rgba(255, 255, 255, .2) 25%,
+    transparent 25%,
+    transparent 50%,
+    rgba(255, 255, 255, .2) 50%,
+    rgba(255, 255, 255, .2) 75%,
+    transparent 75%,
+    transparent
+  );
+  z-index: 1;
+  background-size: 50px 50px;
+  animation: move_meter 2s linear infinite;
+  border-top-right-radius: 8px;
+  border-bottom-right-radius: 8px;
+  border-top-left-radius: 20px;
+  border-bottom-left-radius: 20px;
+  overflow: hidden;
+}
+
+.stat_box {
+    text-align: center;
+    color:black;
+    padding:5px 15px;
+    position: relative;
+}
+
+.stat_box .version_box {
+    position: absolute;
+    top: 0;
+    right: 0;
+    padding: 5px;
+}
+
+#cart_area {
+    position:relative;
+    margin-bottom:5px;
+    padding:10px;
+    color:#000000;
+    background-color:#FFFFFF;
+    border: 3px #8e8b8b solid;
+    display: none;
+}
+
+.snack_body .stat_box {
+    background-color:#3a0b0f;
+    color: #b67d52;
+    /*border-left: 2px solid #653f3d;*/
+    /*border-right: 2px solid #653f3d;*/
+    /*border-bottom: 2px solid #653f3d;*/
+}
+
+.snack_body .version_box {
+    /*border-left: 2px solid #653f3d;*/
+    /*border-bottom: 2px solid #653f3d;*/
+    background-color: #28090c;
+    color: #864949;
+    font-size: 1.0em;
+}
+
+.soda_body .stat_box {
+    background-color:#0b233a;
+    color: #497886;
+    /*border-left: 2px solid #466282;*/
+    /*border-right: 2px solid #466282;*/
+    /*border-bottom: 2px solid #466282;*/
+}
+
+.soda_body .version_box {
+    /*border-left: 2px solid #466282;*/
+    /*border-bottom: 2px solid #466282;*/
+    background-color: #091528;
+    color: #265a78;
+    font-size: 1.0em;
+}
+
+
+.version_box a {
+    color:#d9ce56;
+    font-weight: bold;
+    text-decoration: none;
+    font-size: 1.2em;
+}
+
+.snack_body .version_box a:visited {
+	color: #d9ce56;
+}
+
+.soda_body .version_box a:visited {
+	color: #d9ce56;
+}
+
+.snack_body .version_box a:hover, .soda_body .version_box a:hover {
+    color: #f6f115;
+}
+
+.animate > span:after {
+  display: none;
+}
+
+@keyframes move_meter {
+  0% {
+    background-position: 0 0;
+  }
+  100% {
+    background-position: 50px 50px;
+  }
+}
+
+.meter > span:after, .animate > span > span {
+  animation: move_meter 2s linear infinite;
+}
+
 @media screen and (max-width : 760px){
 
     .unsupported_mobile {
diff --git a/foodstock.php b/foodstock.php
index 00fc0c7..61eb6fc 100644
--- a/foodstock.php
+++ b/foodstock.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale = 1.0,maximum-scale=1.0">
 
 <?php
@@ -76,6 +75,7 @@ function main( $url, $itemType, $className, $location ) {
                 isMobile:isMobile,
                 url:'<?php  echo $url; ?>'
             },function(data) {
+                $('#cart_area').show();
                 $('#cart_area').html(data);
         });
     }
@@ -116,6 +116,7 @@ function main( $url, $itemType, $className, $location ) {
                 isMobile:isMobile,
                 url:'<?php  echo $url; ?>'
             },function(data) {
+                $('#cart_area').show();
                 $('#cart_area').html(data);
         });
     }
@@ -142,7 +143,7 @@ function main( $url, $itemType, $className, $location ) {
             if( minutes < 10 ) { minutes = "0" + minutes; }
             if( seconds < 10 ) { seconds = "0" + seconds; }
 
-            $('#warning_time').html( minutes + ":" + seconds );
+            // $('#warning_time').html( minutes + ":" + seconds );
 
             if( totalTimeLeft == 0 ) {
                 $("body").append("<div id='overlay' style='background-color:#000000; opacity:0.85; z-index:4000; width:100%; height: 100%; position:fixed; top:0; bottom:0; right:0; left:0;'>&nbsp;</div>");
@@ -174,36 +175,50 @@ if( !$isMobile ) {
 
 echo "</div>";
 
-$results = $db->query("SELECT Income, Expenses, ProfitExpected, ProfitActual, FirstDay FROM Information WHERE ItemType ='" . $itemType . "'");
+/** @var  $db SQLite3 */
+$statement = $db->prepare("SELECT SiteIncome, SiteExpenses, SitePayments, SiteProfit, FirstDay, FirstRebornDay, SiteLoss FROM Information WHERE ItemType = :itemType");
+$statement->bindValue( ":itemType", $itemType );
+$results = $statement->execute();
 
 //---------------------------------------
 // BUILD TOP SECTION STATS
 //---------------------------------------
 if(!$isMobile) {
-    $version = "6.3";
-    $versionString = "Version $version (Jun 23rd, 2019)";
-
-    $total_income = 0;
-    $total_expense = 0;
+    $version = "7.1";
+    $versionString = "Version $version";
+    $versionDateString = "(Nov 22nd, 2019)";
 
     $row = $results->fetchArray();
-    $total_income = $row['Income'];
-    $total_expense = $row['Expenses'];
-    $total_profit = $total_income - $total_expense;
-    $total_income_actual = $row['ProfitActual']; // This is actually the INCOME - NOT PROFIT
+    $siteIncome = $row['SiteIncome']; // The amount of money that SHOULD be coming in
+    $siteExpenses = $row['SiteExpenses']; // The amount of money buying the product
+    $sitePayments = $row['SitePayments']; // The amount of money actually coming in
+    $siteProfit = $row['SiteProfit']; // The profit made (retail cost - cost)
+    $siteLoss = $row['SiteLoss']; // The money lost (expected vs actual for inventory)
+
+
     $dateNow = new DateTime();
     $firstDay = DateTime::createFromFormat('Y-m-d H:i:s', $row['FirstDay']);
-    
     $time_since = $dateNow->diff($firstDay);
     $days_ago = $time_since->format('%a');
 
-    $profitPerDay = $total_profit / $days_ago;
+    $firstRebornDay = DateTime::createFromFormat('Y-m-d H:i:s', $row['FirstRebornDay']);
+    $time_since_reborn = $dateNow->diff($firstRebornDay);
+    $reborn_days_ago = $time_since_reborn->format('%a');
+
+    $profitPerDay = $siteProfit / $reborn_days_ago;
 
     echo "<div style='margin: auto;'>";
     
-    echo "<table style='margin:0px 20px'>";
+    echo "<table style='border-collapse:collapse; margin:0px 20px; border-right: 2px solid #000; border-left: 2px solid #000; border-bottom: 2px solid #000;'>";
     echo "<tr>";
-    echo "<td rowspan='2'><img src='" . IMAGES_LINK . "logo.jpg'/></td>";
+    $logoFile = "soda_logo.jpg";
+
+    if( $itemType == "Snack" ) {
+        $logoFile = "snack_logo.jpg";
+    }
+    echo "<td style='padding: 0px;' class='stat_box'>";
+    echo "<img style='height: 29%;' src='" . IMAGES_LINK . "$logoFile'/>";
+    echo "</td>";
 
     $newIcon = "";
     $versionClass = "version_old";
@@ -212,25 +227,20 @@ if(!$isMobile) {
     if ( !isset( $_COOKIE["version_viewed"] ) || isset( $_COOKIE["version_viewed"] ) && $_COOKIE["version_viewed"] != $version ) {
         $newIcon = "<img style='vertical-align:middle; padding: 0px 5px;' width='32px' src='" .  IMAGES_LINK . "new.png'/>";
         $versionClass = "version";
+    } else {
+        $versionDateString = "";
     }
 
-    echo "<td class='$versionClass'>";
-    echo "$newIcon <a onclick='setVersionCookie(\"" . $version . "\");' href='#change_log'>$versionString</a>$newIcon ";
-    echo "</td>";
-
-    if( $isLoggedInAdmin ) {
-        echo "<td style='color:black; background-color:#FFFFFF; padding:5px 15px; border: #000 2px solid;'><b>Profit / Day:</b> " . getPriceDisplayWithDollars($profitPerDay) . "</td>";
-    }
-
-    echo "<td style='color:black; background-color:#B888FF; padding:5px 15px; border: #000 2px solid;'><b>Days Active: </b>". $days_ago ." days</td>";
-    echo "<td style='color:black; background-color:#fffa5c; padding:5px 15px; border: #000 2px solid;' title='Purchase Reminder - After being idle for five minutes without a purchase it will ask if you forgot to pay for something.'>";
-    echo "<img style='vertical-align:middle;' width='30px' src='" . IMAGES_LINK . "timer.png'/>&nbsp;<span style='font-weight:bold;' id='warning_time'>-</span>";
-    echo "</td>";
-
     if(  !IsLoggedIn() || $_SESSION['ShowTrending'] == 1 ) {
-        $startTrendingHour = date('Y-m-d' ) . " 00:00:00";
-        $stopTrendingHour = date('Y-m-d' ) . " 23:59:59";
-        $trendingResults = $db->query("select p.itemID, i.Name, count(p.ItemID) as Amount, max(p.Date), i.Type, i.ImageURL from Purchase_History p JOIN Item i on p.ItemID = i.ID where p.Date > '$startTrendingHour' and p.Date < '$stopTrendingHour' and i.Type = '$itemType' group by p.ItemID order by count(p.itemID) desc");
+        $trendingStatement = $db->prepare("SELECT p.itemID, i.Name, count(p.ItemID) as Amount, max(p.Date), i.Type, i.ImageURL " .
+            "FROM Purchase_History p " .
+            "JOIN Item i on p.ItemID = i.ID " .
+            "WHERE p.Date > :startTrendingHour and p.Date < :stopTrendingHour and i.Type = :itemType group by p.ItemID order by count(p.itemID) desc");
+        $trendingStatement->bindValue( ":startTrendingHour", date('Y-m-d' ) . " 00:00:00" );
+        $trendingStatement->bindValue( ":stopTrendingHour", date('Y-m-d' ) . " 23:59:59" );
+        $trendingStatement->bindValue( ":itemType", $itemType );
+        $trendingResults = $trendingStatement->execute();
+
         $trendingRow = $trendingResults->fetchArray();
         $trendingItem = $trendingRow['Name'];
         $trendingAmount = $trendingRow['Amount'];
@@ -247,31 +257,58 @@ if(!$isMobile) {
             }
         }
 
-        echo "<td style='color:black; background-color:#50ff5a; padding:5px 15px; border: #000 2px solid;' title=\"What's Trending\">";
-        echo "<span><b>Trending:</b> $trendingImageURL $trendingDisplay</span>";
+        echo "<td class='stat_box'  title=\"What's Trending\">";
+        echo "<span><div style='font-weight:bold;'>Trending</div> <div style='font-size: 0.9em; padding-top:10px;'>$trendingImageURL $trendingDisplay</span>";
         echo "</td>";
-    }
 
-    if( $isLoggedInAdmin ) {
-        echo "<td>&nbsp;</td>";
-        echo "<td style='text-align:right; font-weight:bold;'>Calculated:</td>";
-        echo "<td style='color:black; background-color:#90EE90; padding:5px 15px; border: #000 2px solid;'><b>Income:</b> ". getPriceDisplayWithDollars( $total_income )."</td>";
-        echo "<td style='color:black; background-color:#EBEB59; padding:5px 15px; border: #000 2px solid;'><b>Profit:</b> ". getPriceDisplayWithDollars( $total_profit )."</td>";
-        echo "<td style='color:black; background-color:#EE4545; padding:5px 15px; border: #000 2px solid;'><b>Expenses:</b> ". getPriceDisplayWithDollars( $total_expense )."</td>";
+        echo "<td class='stat_box' title=\"What's Trending\">";
+        echo "<span><div style='font-size: 0.9em; padding-top:10px;'>";
+
+        /** @var  $db SQLite3 */
+        $fridgeStatement = $db->prepare("SELECT SUM( SiteProfit ) as Sum FROM Information");
+        $fridgeResults = $fridgeStatement->execute();
+
+        $fridgeRow = $fridgeResults->fetchArray();
+        $siteProfitForAllTypes = $fridgeRow['Sum'];
+
+        $percentageComplete = round(($siteProfitForAllTypes / 18999) * 100);
+
+        if( $percentageComplete > 100 ) {
+            $percentageComplete = 100;
+        }
+
+        echo "<div>";
+
+        echo "<div style='font-size: 0.9em; padding-bottom: 10px; border-bottom: 1px solid #000000;'><span style='font-weight: bold;'>Profit per Day: </span>" . getPriceDisplayWithDollars($profitPerDay) . "</div>";
+        echo "<div style='font-size: 0.9em; padding-top: 5px; margin-top: 5px; padding-bottom: 5px;'><span style='font-weight: bold;'>Mini Fridge Goal: </span>$189.99</div>";
+
+        echo "<div class='goal_meter'>";
+        echo "<span class='goal_bar' style='width: $percentageComplete%'><span class='goal_bar' style='color: #000000; font-weight: bold; font-size: 0.8em; display:block; margin-top: 4px;'></span></span>";
+        echo "<span class='goal_banner'>" . getPriceDisplayWithDollars( $siteProfitForAllTypes ) . "</span>";
+        echo "</div>";
+
+        echo "</div>";
+        echo "</span>";
+        echo "</td>";
+
+        echo "<td class='stat_box' style='text-align:left; font-size:0.9em; width:100%;'>";
+
+        echo "<span class='version_box' style='padding:5px;'>";
+        echo "$newIcon <a onclick='setVersionCookie(\"" . $version . "\");' href='#change_log'>$versionString</a>&nbsp;&nbsp;$versionDateString";
+        echo "</span>";
+
+        echo "<div style='display:flex; align-items:center;'>";
+        echo "<img width='40px' src='" . IMAGES_LINK . "sale.png'/>&nbsp;Discounted prices are only available when you buy through the site.";
+        echo "</div>";
+
+        echo "<div style='display:flex; align-items:center;'>";
+        echo "<img width='40px' src='" . IMAGES_LINK . "handle_with_care.png'/>&nbsp;Remember to pick up your product first and have it physically in your hand before you buy on the website to avoid buying something that was recently all bought out by someone else.";
+        echo "</div>";
+
+        echo "</td>";
     }
     echo "</tr>";
     
-    if( $isLoggedInAdmin ) {
-        echo "<tr>";
-        echo "<td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td>";
-        echo "<td style='text-align:right; font-weight:bold;'>Payments:</td>";
-        echo "<td style='color:black; background-color:#ebb159; padding:5px 15px; border: #000 2px solid;'><b>Income:</b> ". getPriceDisplayWithDollars( $total_income_actual )."</td>";
-        $actualProfit = $total_income - $total_income_actual;
-        $actualDebt = $total_income_actual - $total_expense;
-        echo "<td style='color:black; background-color:#EBEB59; padding:5px 15px; border: #000 2px solid;'><b>Owed Money:</b> ". getPriceDisplayWithDollars( $actualProfit )."</td>";
-        echo "<td style='color:black; background-color:#EE4545; padding:5px 15px; border: #000 2px solid;'><b>Actual Debt:</b> ". getPriceDisplayWithDollars( $actualDebt )."</td>";
-        echo "</tr>";
-    }
     echo "</table>";
     
     echo "<div></div>";
@@ -285,23 +322,29 @@ if( isset( $_SESSION['PurchaseCompleted'] ) ) {
     echo "<script>startReminderTimer();</script>";
 }
 
-echo "<div id='cart_area' class='cart_area' style='position:relative; margin-bottom:5px; padding:10px; color:#000000; background-color:#FFFFFF; border: 3px #8e8b8b solid;'>";
-echo "<div style='display:flex; align-items:center;'>";
-echo "<img width='40px' src='" . IMAGES_LINK . "handle_with_care.png'/>&nbsp;Remember to pick up your product first and have it physically in your hand before you buy on the website to avoid buying something that was recently all bought out by someone else.";
-echo "</div>";
 
-echo "<div style='display:flex; align-items:center;'>";
-echo "<img width='40px' src='" . IMAGES_LINK . "sale.png'/>&nbsp;Discounted prices are only available when you buy through the site.";
-echo "</div>";
-echo "</div>";
+if( $isLoggedInAdmin ) {
+    echo "<table>";
+    echo "<tr>";
+    echo "<td title='The amount of money that SHOULD be coming in. From both inventory and purchases.' style='color:black; background-color:#59daeb; padding:5px 15px; border: #000 2px solid;'><b>Income:</b> ". getPriceDisplayWithDollars( $siteIncome )."</td>";
+    echo "<td title='The amount of money spent on items. From the restocks.' style='color:black; background-color:#eb5e4b; padding:5px 15px; border: #000 2px solid;'><b>Expenses:</b> " . getPriceDisplayWithDollars( $siteExpenses )."</td>";
+    echo "<td title='The amount of money ACTUALLY coming in from payments only. Not the jar.' style='color:black; background-color:#1ab843; padding:5px 15px; border: #000 2px solid;'><b>Payments:</b> " . getPriceDisplayWithDollars( $sitePayments )."</td>";
+    echo "<td title='The profit being made across all items by taking into account items sold and the retail cost and price it was sold.' style='color:black; background-color:#d5ca41; padding:5px 15px; border: #000 2px solid;'><b>Profit:</b> " . getPriceDisplayWithDollars( $siteProfit )."</td>";
+    echo "<td title='The amount of money loss when doing inventory.' style='color:black; background-color:#424242; padding:5px 15px; border: #000 2px solid;'><b>Loss:</b> " . getPriceDisplayWithDollars( $siteLoss )."</td>";
+    echo "</tr>";
+    echo "</table>";
+}
 
+echo "<div id='cart_area'></div>";
 $showShelf = true;
 if( isset( $_SESSION['ShowShelf'] ) && $_SESSION['ShowShelf'] == 0 ) {
     $showShelf = false;
 }
 
 if( !$isMobile && $itemType != "Snack" && $showShelf ) {
-    $results = $db->query("SELECT ID, Name, ShelfQuantity, DateModified, ThumbURL, Hidden FROM Item WHERE Type ='" . $itemType . "' AND Hidden != 1 ORDER BY DateModified DESC");
+    $statement = $db->prepare("SELECT ID, Name," . getQuantityQuery() . ",DateModified, ThumbURL, Hidden FROM Item i WHERE Type =:itemType AND Hidden != 1 ORDER BY DateModified DESC");
+    $statement->bindValue( ":itemType", $itemType );
+    $results = $statement->execute();
     
     echo "<div style='margin:20px; padding:10px; background-color:#2f2f2f; border: 3px #8e8b8b solid;'>";
     echo "<div style='color:#8e8b8b; font-weight:bold; padding-bottom:10px;'>The Shelf <span style='font-size:0.7em;'>(currently in the $location, clicking these will also add one to your cart)</span></div>";
@@ -309,7 +352,7 @@ if( !$isMobile && $itemType != "Snack" && $showShelf ) {
     while ($row = $results->fetchArray()) {
         $name = $row['Name'];
         $id = $row['ID'];
-        $shelf = $row['ShelfQuantity'];
+        $shelf = $row['ShelfAmount'];
         $thumbURL = $row['ThumbURL'];
         
         if( $lastUpdated == "") {
@@ -331,7 +374,7 @@ if( !$isMobile && $itemType != "Snack" && $showShelf ) {
     echo "</div>";
 }
 
-echo "<input placeholder='Search Items' autofocus type='text' style='padding:5px; border-radius:20px; font-size:1.6em;' onChange=\"updateCardArea('$itemType', '$className', '$location', '$isMobile', this.value );\"/>";
+echo "<input placeholder='Search Items' autofocus type='text' style='padding:5px; border-radius:20px; font-size:1.6em;' onkeyup= \"updateCardArea('$itemType', '$className', '$location', '$isMobile', this.value );\"/>";
 
 echo "<div id='card_area'>";
 echo "<script>updateCardArea('$itemType', '$className', '$location', '$isMobile', '' );</script>";
@@ -394,6 +437,13 @@ if( !$isMobile) {
     echo "<div id='change_log' class='rounded_header'><span class='title'>Change Log <span style='font-size: 0.7em; margin-left: 20px;'>(<span style='$requestClass'>Requests in Purple</span> | <span style='$adminClass'>Admin Changes in Red</span> | <span style='$dbClass'>Database and Server Changes in Green</span> | <span style='$bugClass'>Bug Fixes in Orange</span>)</span></span></div>";
     echo "<ul style='margin:0px 40px 0px 0px; list-style-type: none;'>";
 
+    // Parameterized Queries
+    // One record per Item in Stock
+    // Inline store prices in checklist
+    // Items in Stock PAGE
+
+
+
     // CREDIT: https://icons8.com/icon/2270/crown - CDN77
     // https://i2kplay.com/icon-new/
 
diff --git a/functions/action_functions.php b/functions/action_functions.php
index a48ea76..8399792 100644
--- a/functions/action_functions.php
+++ b/functions/action_functions.php
@@ -1,7 +1,1222 @@
 <?php
+include(AUDIT_OBJ);
+
 /**
- * Created by PhpStorm.
- * User: Matt
- * Date: 9/15/2019
- * Time: 7:50 PM
- */
\ No newline at end of file
+ * @param $db SQLite3
+ * @param $name
+ * @param $chartColor
+ * @param $price
+ * @param $itemType
+ * @return string
+ */
+function addItem( $db, $name, $chartColor, $price, $discountPrice, $itemType ) {
+    $name = trim($name);
+    $date = date('Y-m-d H:i:s');
+    $chartColor = trim($chartColor);
+    $price = convertDecimalToWholeCents( trim( $price ) );
+    $discountPrice = convertDecimalToWholeCents( trim( $discountPrice ) );
+    $itemType = trim( $itemType );
+
+    $itemCountStatement = $db->prepare("SELECT COUNT(*) as Count FROM Item WHERE Name = :name AND Type = :itemType");
+    $itemCountStatement->bindValue( ":name", $name );
+    $itemCountStatement->bindValue( ":itemType", $itemType );
+    $itemCountResults = $itemCountStatement->execute();
+
+    $itemCountRow = $itemCountResults->fetchArray();
+    $numOfExistingItems = $itemCountRow['Count'];
+
+    if( $numOfExistingItems > 0 ) {
+        return "Item \"$name\" already exists.";
+    } else {
+        $statement = $db->prepare( "INSERT INTO Item (Name, Date, ChartColor, TotalCans, Price, DiscountPrice, TotalIncome, TotalExpenses, Type, RefillTrigger, RestockTrigger, IsBought) VALUES " .
+            "( :name, :date, :chartColor, 0, :price, :discountPrice, 0.00, 0.00, :itemType, 0, 0, 0)" );
+
+        $statement->bindValue( ":name", $name );
+        $statement->bindValue( ":date", $date );
+        $statement->bindValue( ":chartColor", $chartColor );
+        $statement->bindValue( ":price", $price );
+        $statement->bindValue( ":discountPrice", $discountPrice );
+        $statement->bindValue( ":itemType", $itemType );
+        $statement->execute();
+
+        return "Item \"$name\" added successfully.";
+    }
+}
+
+/**
+ * @param $db SQLite3
+ * @param $itemType
+ * @param $itemID
+ * @param $name
+ * @param $chartColor
+ * @param $price
+ * @param $discountPrice
+ */
+function editItem( $db, $itemID, $name, $chartColor, $price, $discountPrice, $unitName, $unitNamePlural, $alias, $currentFlavor, $status, $expirationDate ) {
+
+    $retired = $status == "active" ? 0 : 1;
+
+    $updateImageURL = "";
+    $updateThumbURL = "";
+    $targetImageFileName = "";
+    $targetThumbFileName = "";
+
+    if ( is_uploaded_file($_FILES['uploadedImage']['tmp_name'] ) ) {
+        log_debug( "FOUND TMP: [" .$_FILES['uploadedImage']['tmp_name'] . "]" );
+        log_debug( "FOUND NAME: [" .$_FILES['uploadedImage']['name'] . "]" );
+        $targetImageFileName = basename( $_FILES['uploadedImage']['name'] );
+        log_debug( "FOUND TARGET: [" .$targetImageFileName . "]" );
+        $target = IMAGES_NORMAL_PATH . $targetImageFileName;
+        log_debug( "FOUND TARGET PATH: [" .$target . "]" );
+
+        if( !move_uploaded_file( $_FILES['uploadedImage']['tmp_name'], $target ) ) {
+            error_log(" THERE WAS AN ERROR UPLOADING THIS IMAGE: " . $_FILES['uploadedImage']['tmp_name'] );
+        } else {
+            $updateImageURL = ", ImageURL = :targetImageFileName";
+            log_debug( "FOUND UPDATE: [" .$updateImageURL . "]" );
+        }
+    }
+
+    if ( is_uploaded_file($_FILES['uploadedThumb']['tmp_name'] ) ) {
+        $targetThumbFileName = basename( $_FILES['uploadedThumb']['name'] );
+        $target = IMAGES_THUMBNAILS_PATH . $targetThumbFileName;
+        if( !move_uploaded_file( $_FILES['uploadedThumb']['tmp_name'], $target ) ) {
+            error_log(" THERE WAS AN ERROR UPLOADING THIS THUMBNAIL: " . $_FILES['uploadedThumb']['tmp_name'] );
+        } else {
+            $updateThumbURL = ", ThumbURL = :targetThumbFileName";
+        }
+    }
+
+    $statement = $db->prepare( "UPDATE Item SET Name=:name, ChartColor=:chartColor, Price = :price, DiscountPrice = :discountPrice, Retired = :retired $updateImageURL $updateThumbURL, " .
+        "UnitName = :unitName, UnitNamePlural = :unitNamePlural, Alias = :alias, CurrentFlavor = :currentFlavor, ExpirationDate = :expirationDate where ID = :itemID" );
+
+    $statement->bindValue( ":name", $name );
+    $statement->bindValue( ":chartColor", $chartColor );
+    $statement->bindValue( ":price", $price );
+    $statement->bindValue( ":discountPrice", $discountPrice );
+    $statement->bindValue( ":retired", $retired );
+    $statement->bindValue( ":unitName", $unitName );
+    $statement->bindValue( ":unitNamePlural", $unitNamePlural );
+    $statement->bindValue( ":alias", $alias );
+    $statement->bindValue( ":currentFlavor", $currentFlavor );
+    $statement->bindValue( ":expirationDate", $expirationDate );
+    $statement->bindValue( ":itemID", $itemID );
+    $statement->bindValue( ":targetImageFileName", $targetImageFileName, SQLITE3_TEXT );
+    $statement->bindValue( ":targetThumbFileName", $targetThumbFileName, SQLITE3_TEXT );
+    $statement->execute();
+
+    return "Item \"$name\" edited successfully.";
+}
+
+/**
+ * @param $db SQLite3
+ * @param $userID
+ * @param $slackID
+ * @param $anonName
+ * @param $inactive
+ * @param $resetPassword
+ * @param $isCoop
+ * @return string
+ */
+function editUser( $db, $userID, $slackID, $anonName, $inactive, $resetPassword, $isCoop ) {
+    $uniqueID = uniqid();
+    $userMessage = "";
+
+    $resetPasswordQuery = "";
+    $randomPassword = "";
+
+    if( $resetPassword == true ) {
+        log_debug("Resetting Password");
+        $randomPassword = sha1($uniqueID);
+        $resetPasswordQuery = " Password=:randomPassword,";
+        $userMessage .= "Password for user was reset to \"$uniqueID\". ";
+    }
+
+    $statement = $db->prepare( "UPDATE User SET SlackID=:slackID, AnonName=:anonName, $resetPasswordQuery Inactive = :inactive, IsCoop = :isCoop where UserID = :userID" );
+
+    $statement->bindValue( ":slackID", $slackID );
+    $statement->bindValue( ":anonName", strip_tags( $anonName ) );
+    $statement->bindValue( ":inactive", $inactive );
+    $statement->bindValue( ":isCoop", $isCoop );
+    $statement->bindValue( ":userID", $userID );
+    $statement->bindValue( ":randomPassword", $randomPassword );
+    $statement->execute();
+
+    return $userMessage . "User edited successfully.";
+}
+
+/**
+ * @param $db SQLite3
+ * @param $userID
+ * @param $paymentMonth
+ * @param $sodaAmount
+ * @param $snackAmount
+ * @param $note
+ * @param $method
+ */
+function makePayment( $db, $userID, $paymentMonth, $sodaAmount, $snackAmount, $note, $method ) {
+    log_payment( "Incoming payment for User [$userID] Month [$paymentMonth] Snack[$snackAmount] Soda[$sodaAmount]" );
+
+    if( $userID > 0 ) {
+        log_payment( "User payment found for [$userID]" );
+        $statement = $db->prepare("SELECT SodaBalance, SnackBalance, SlackID, UserName, FirstName, LastName From User where UserID = :userID");
+        $statement->bindValue( ":userID", $userID );
+        $results = $statement->execute();
+
+        $row = $results->fetchArray();
+        $sodaBalance = $row['SodaBalance'];
+        $snackBalance = $row['SnackBalance'];
+        $slackID = $row['SlackID'];
+        $name = $row['FirstName'] . " " . $row['LastName'];
+        $username = $row['UserName'];
+
+        if( $sodaAmount > $sodaBalance ) {
+            error_log( "Bad Soda balance. Amount: [" . $sodaAmount . "] Balance: [" . $sodaBalance . "]" );
+            return "This payment [" . getPriceDisplayWithDollars( $sodaAmount ) . "] is larger than the user\"s Soda Balance of [" . getPriceDisplayWithDollars( $sodaBalance ) . "]. Payment denied!";
+        }
+
+        if( $snackAmount > $snackBalance) {
+            error_log( "Bad Snack balance. Amount: [" . $snackAmount . "] Balance: [" . $snackBalance . "]" );
+            return "This payment [" . getPriceDisplayWithDollars( $snackAmount ) . "] is larger than the user\"s Snack Balance of [" . getPriceDisplayWithDollars( $snackBalance ) . "]. Payment denied!";
+        }
+
+        $newSodaBalance = $sodaBalance - $sodaAmount;
+        log_payment( "Reduced Soda balance [" . $newSodaBalance . "] is [" . $sodaBalance . " Balance - " . $sodaAmount . " Amount]" );
+
+        $newSnackBalance = $snackBalance - $snackAmount;
+        log_payment( "Reduced Snack balance [" . $newSnackBalance . "] is [" . $snackBalance . " Balance - " . $snackAmount . " Amount]" );
+
+        $newTotalBalance = $newSodaBalance + $newSnackBalance;
+        $balance = $sodaBalance + $snackBalance;
+        $amount = $sodaAmount + $snackAmount;
+
+        $paymentMessage = "Your payment with $method was received for $paymentMonth.\n\n" .
+        "Your Current Balance: *" . getPriceDisplayWithDollars( $newTotalBalance ) . "*       (*" . getPriceDisplayWithDollars( $balance ) . "* original balance  -  *" . getPriceDisplayWithDollars( $amount ) . "* payment)";
+
+        if( $slackID == "" ) {
+            sendSlackMessageToMatt( "Failed to send notification for " . $name . ". Create a SlackID!", ":no_entry:", "FoodStock - ERROR!!", "#bb3f3f");
+        } else {
+            sendSlackMessageToUser( $slackID,  $paymentMessage, ":dollar:", "PAYMENT RECEIVED", "#127b3c", $username );
+        }
+
+        sendSlackMessageToMatt( "*(" . strtoupper($name) . ")*\n$paymentMessage", ":dollar:", "PAYMENT RECEIVED", "#127b3c" );
+
+        $date = date('Y-m-d H:i:s');
+
+        // DEV: Changing this code? Change the payment code for Auditing as well (above)
+        $db->exec("BEGIN;");
+
+        $stmt=$db->prepare("INSERT INTO Payments (UserID, Method, Amount, Date, Note, ItemType, MonthForPayment) VALUES ".
+            "(:userID, :method, :sodaAmount, :date, :note, 'Soda', :paymentMonth)");
+        $stmt->bindValue(':userID', $userID );
+        $stmt->bindValue(':method', $method );
+        $stmt->bindValue(':sodaAmount', $sodaAmount );
+        $stmt->bindValue(':date', $date );
+        $stmt->bindValue(':note', $note );
+        $stmt->bindValue(':paymentMonth', $paymentMonth );
+        $stmt->execute();
+
+        $stmt=$db->prepare("INSERT INTO Payments (UserID, Method, Amount, Date, Note, ItemType, MonthForPayment) VALUES " .
+            "(:userID, :method, :snackAmount, :date, :note, 'Snack', :paymentMonth)");
+        $stmt->bindValue(':userID', $userID );
+        $stmt->bindValue(':method', $method );
+        $stmt->bindValue(':snackAmount', $snackAmount );
+        $stmt->bindValue(':date', $date );
+        $stmt->bindValue(':note', $note );
+        $stmt->bindValue(':paymentMonth', $paymentMonth );
+        $stmt->execute();
+
+        $stmt=$db->prepare("UPDATE User SET SodaBalance = SodaBalance - :sodaAmount where UserID = :userID");
+        $stmt->bindValue(':sodaAmount', $sodaAmount );
+        $stmt->bindValue(':userID', $userID );
+        $stmt->execute();
+
+        $stmt=$db->prepare("UPDATE User SET SnackBalance = SnackBalance - :snackAmount where UserID = :userID");
+        $stmt->bindValue(':snackAmount', $snackAmount );
+        $stmt->bindValue(':userID', $userID );
+        $stmt->execute();
+
+        $stmt=$db->prepare("UPDATE Information SET SitePayments = SitePayments + :sodaAmount where ItemType = 'Soda'");
+        $stmt->bindValue(':sodaAmount', $sodaAmount );
+        $stmt->execute();
+
+        $stmt=$db->prepare("UPDATE Information SET SitePayments = SitePayments + :snackAmount where ItemType = 'Snack'");
+        $stmt->bindValue(':snackAmount', $snackAmount );
+        $stmt->execute();
+
+        $db->exec("COMMIT;");
+
+        return "Payment added successfully.";
+    }
+}
+/**
+ * @param $db SQLite3
+ * @param $quantity
+ * @param $multiplier
+ * @param $retailCost
+ * @param $itemType
+ * @return string
+ */
+function restockItem( $db, $itemID, $quantity, $multiplier, $retailCost, $itemType, $expDate ) {
+
+    $retailCost = convertDecimalToWholeCents( trim( $retailCost ) );
+
+    if( $multiplier > 1 ) {
+        $quantity *= $multiplier;
+        $retailCost *= $multiplier;
+    }
+
+    $restockTrigger = "";
+    if( $quantity > 3 ) {
+        $restockTrigger = " RestockTrigger = 0, IsBought = 0,";
+    }
+
+    $date = date('Y-m-d H:i:s', time());
+    $costEach = round( $retailCost / $quantity );
+
+    // Get the current prices from the item catalog
+    $itemStatement = $db->prepare("SELECT Price, DiscountPrice From Item where ID = :itemID");
+    $itemStatement->bindValue( ":itemID", $itemID );
+    $itemResults = $itemStatement->execute();
+
+    $itemRow = $itemResults->fetchArray();
+    $price = $itemRow['Price'];
+    $discountPrice = $itemRow['DiscountPrice'];
+
+    $stmt=$db->prepare("INSERT INTO Item_Details (ItemID, Price, DiscountPrice, RetailPrice, ExpDate) VALUES " .
+        "(:itemID, :price, :discountPrice, :costEach, :expDate)");
+    $stmt->bindValue(':itemID', $itemID );
+    $stmt->bindValue(':price', $price );
+    $stmt->bindValue(':discountPrice', $discountPrice );
+    $stmt->bindValue(':costEach', $costEach );
+    $stmt->bindValue(':expDate', $expDate );
+    $stmt->execute();
+    $itemDetailsID = $db->lastInsertRowID();
+
+    $db->exec("BEGIN;");
+
+    $stmt=$db->prepare("INSERT INTO Restock (ItemID, Date, NumberOfCans, Cost) VALUES " .
+        "(:itemID, :date, :quantity, :retailCost)");
+    $stmt->bindValue(':itemID', $itemID );
+    $stmt->bindValue(':date', $date );
+    $stmt->bindValue(':quantity', $quantity );
+    $stmt->bindValue(':retailCost', $retailCost );
+    $stmt->execute();
+
+    addToBackstockQuantity( $db, $quantity, $itemID, $itemDetailsID, "RESTOCK" );
+
+    $stmt=$db->prepare("UPDATE Item SET ItemExpenses = ItemExpenses + :retailCost, $restockTrigger TotalCans = TotalCans + :quantity where ID = :itemID");
+    $stmt->bindValue(':retailCost', $retailCost );
+    $stmt->bindValue(':quantity', $quantity );
+    $stmt->bindValue(':itemID', $itemID );
+    $stmt->execute();
+
+    $stmt=$db->prepare("UPDATE Information SET SiteExpenses = SiteExpenses + :retailCost where ItemType = :itemType");
+    $stmt->bindValue(':retailCost', $retailCost );
+    $stmt->bindValue(':itemType', $itemType );
+    $stmt->execute();
+
+    $db->exec("COMMIT;");
+
+    return "Restocked successfully.";
+}
+
+/**
+ * @param $db SQLite3
+ * @param $itemID_all
+ * @param $addToShelf_all
+ * @param $sendToSlack
+ */
+function refillItem( $db, $isTest, $itemID_all, $addToShelf_all, $sendToSlack ) {
+
+    benchmark_start( "REFILL" );
+    $date = date('Y-m-d H:i:s');
+
+    $slackMessageItems = "";
+    $itemType = "";
+    for ($i = 0; $i < count($itemID_all); $i++) {
+        $itemID = $itemID_all[$i];
+        $addToShelfQuantity = $addToShelf_all[$i];
+
+        benchmark_start("Refill Item $itemID");
+
+        if( $addToShelfQuantity > 0 ) {
+            error_log("Item ID [$itemID] Quantity [$addToShelfQuantity]");
+
+            $backstockQuantityBefore = 0;
+            $shelfQuantityBefore = 0;
+
+            $itemName = "N/A";
+            $price = "N/A";
+            $itemUnits = "N/A";
+            $itemUnitsPlural = "N/A";
+            $currentFlavor = "N/A";
+
+            benchmark_start("Refill - Get Quantity $itemID");
+            $statement = $db->prepare("SELECT i.ID," . getQuantityQuery() . ",i.Price, i.Name, i.Type, i.UnitName, i.UnitNamePlural, i.CurrentFlavor FROM Item i WHERE i.ID = :itemID");
+            $statement->bindValue( ":itemID", $itemID );
+            $results = $statement->execute();
+
+            while ($row = $results->fetchArray()) {
+                $backstockQuantityBefore = $row['BackstockAmount'];
+                $shelfQuantityBefore = $row['ShelfAmount'];
+                $itemName = $row['Name'];
+                $price = $row['Price'];
+                $itemType = $row['Type'];
+                $itemUnits = $row['UnitName'];
+                $itemUnitsPlural = $row['UnitNamePlural'];
+                $currentFlavor = $row['CurrentFlavor'];
+
+                if ($currentFlavor != "") {
+                    $currentFlavor = "[" . $currentFlavor . "] ";
+                }
+            }
+
+            benchmark_stop("Refill - Get Quantity $itemID");
+
+            benchmark_start("Refill - Phase 1 $itemID");
+
+            $newShelfQuantity = $shelfQuantityBefore + $addToShelfQuantity;
+            $newBackstockQuantity = $backstockQuantityBefore - $addToShelfQuantity;
+
+            $refillTrigger = "";
+            //New item was added to the fridge
+            $priceDisplay = getPriceDisplayWithEnglish($price);
+
+            $slackMessageItems = $slackMessageItems . "*" . $itemName . " $currentFlavor:* " . $shelfQuantityBefore . " " .
+                ($shelfQuantityBefore == 1 ? $itemUnits : $itemUnitsPlural) .
+                " --> *" . $newShelfQuantity . " " .
+                ($newShelfQuantity == 1 ? $itemUnits : $itemUnitsPlural) . "*    ($priceDisplay)\n";
+
+            // Only clear the trigger of the items that are refilled
+            if ($newShelfQuantity > 3) {
+                $refillTrigger = "RefillTrigger = 0, IsBought = 0,";
+            }
+
+            benchmark_stop("Refill - Phase 1 $itemID");
+
+            benchmark_start("Refill - Move Quantity  $itemID");
+            $itemDetailsArray = moveToShelfQuantity($db, $addToShelfQuantity, $itemID);
+            benchmark_stop("Refill - Move Quantity  $itemID");
+
+            benchmark_start("Refill - Add Inv  $itemID");
+
+            $currentBackstockQuantityCounter = $backstockQuantityBefore;
+            $currentShelfQuantityCounter = $shelfQuantityBefore;
+
+            $db->exec("BEGIN;");
+            foreach ($itemDetailsArray as $itemDetails) {
+                $itemDetailsID = $itemDetails->getItemDetailsID();
+
+                $statement = $db->prepare( "INSERT INTO Inventory_History (ItemID, Date, BackstockQuantityBefore, BackstockQuantity, ShelfQuantityBefore, ShelfQuantity, InventoryType, ItemDetailsID) VALUES " .
+                    "(:itemID, :date, :backstockBefore, :backstockAfter, :shelfBefore, :shelfAfter, :inventoryType, :itemDetailsID)" );
+
+                $statement->bindValue(":itemID", $itemID );
+                $statement->bindValue(":date", $date );
+                $statement->bindValue(":backstockBefore", $currentBackstockQuantityCounter );
+                $statement->bindValue(":backstockAfter",  ($currentBackstockQuantityCounter - 1) );
+                $statement->bindValue(":shelfBefore", $currentShelfQuantityCounter );
+                $statement->bindValue(":shelfAfter", ($currentShelfQuantityCounter + 1) );
+                $statement->bindValue(":inventoryType", 'REFILL' );
+                $statement->bindValue(":itemDetailsID", $itemDetailsID );
+
+                $statement->execute();
+
+                $currentBackstockQuantityCounter--;
+                $currentShelfQuantityCounter++;
+            }
+            $db->exec("COMMIT;");
+
+            benchmark_stop("Refill - Add Inv  $itemID");
+
+            $restockTrigger = "";
+            if ($newBackstockQuantity <= 3) {
+                $restockTrigger = " RestockTrigger = 1, ";
+            }
+
+            $statement = $db->prepare( "UPDATE Item SET $refillTrigger $restockTrigger DateModified = :date where ID = :itemID" );
+
+            $statement->bindValue(":itemID", $itemID );
+            $statement->bindValue(":date", $date );
+            $statement->execute();
+        }
+
+        benchmark_stop( "Refill Item $itemID" );
+    }
+
+    $emoji = ":soda:";
+    $page = SODASTOCK_LINK;
+
+    if( $itemType == "Snack" ) {
+        $emoji = ":cookie:";
+        $page = SNACKSTOCK_LINK;
+    }
+
+    if( !$isTest && $slackMessageItems != "" && $sendToSlack == true) {
+        $slackMessage = $slackMessageItems ."\n\nVisit <https://penguinore.net$page|Foodstock> to see the prices and inventory of all snacks & sodas.";
+
+        sendSlackMessageToRandom($slackMessage, $emoji, $itemType. "Stock - REFILL" );
+
+        $subscribeStatement = $db->prepare("SELECT SlackID, UserName FROM User where SubscribeRestocks = 1" );
+        $subscribeResults = $subscribeStatement->execute();
+
+        while( $row = $subscribeResults->fetchArray() ) {
+            $slackIDToNotify = $row['SlackID'];
+            $username = $row['UserName'];
+            sendSlackMessageToUser( $slackIDToNotify, $slackMessage, $emoji, $itemType. "Stock - REFILL", "#000000", $username );
+        }
+    }
+    benchmark_stop( "REFILL" );
+
+    return "Refill was successful for " . count($itemID_all) . " items.";
+}
+
+function cancelInventory( $dailyAmountID ) {
+//            $dailyAmountID = trim($_POST["DailyAmountID"]);
+//
+//        $results = $db->query("SELECT i.Type, d.ItemID, d.BackstockQuantityBefore, d.BackstockQuantity, d.ShelfQuantityBefore, d.ShelfQuantity, d.Price, d.RetailCost, d.ItemDetailsID from Inventory_History d JOIN Item i on d.ItemID =  i.ID WHERE d.ID = $dailyAmountID");
+//        $row = $results->fetchArray();
+//
+//        $date = date('Y-m-d H:i:s');
+//        $itemID = $row['ItemID'];
+//        $itemType = $row['Type'];
+//        $backstockBefore = $row['BackstockQuantityBefore'];
+//        $backstockAfter= $row['BackstockQuantity'];
+//        $shelfBefore = $row['ShelfQuantityBefore'];
+//        $shelfAfter= $row['ShelfQuantity'];
+//        $price = $row['Price'];
+//        $itemDetailsID = $row['ItemDetailsID'];
+//
+//        $quantityBefore = $backstockBefore + $shelfBefore;
+//        $quantityAfter = $backstockAfter + $shelfAfter;
+//
+//        $backstockDelta = $backstockBefore - $backstockAfter;
+//        $shelfDelta = $shelfBefore - $shelfAfter;
+//
+//        $income = ($quantityBefore - $quantityAfter) * $price;
+//
+//        $cancelSQL = "UPDATE Inventory_History SET Cancelled = 1 WHERE ID = $dailyAmountID";
+//        log_sql("Cancel SQL: [" . $cancelSQL . "]" );
+//        $db->exec( $cancelSQL );
+//
+//        $newIncome = addToValue( $db, "Item", "TotalIncome", $income, "where ID = $itemID", false );
+//        $itemSQL = "UPDATE Item SET TotalIncome = $newIncome, ModifyType = 'Cancelled', DateModified = '$date' where ID = $itemID";
+//        log_sql("Item SQL: [" . $itemSQL . "]" );
+//        $db->exec( $itemSQL );
+//
+//        addToBackstockQuantity( $db, $backstockDelta, $itemID, $itemDetailsID, "CANCEL MANUAL PURCHASE" );
+//        addToShelfQuantity( $db, $shelfDelta, $itemID, $itemDetailsID, "CANCEL MANUAL PURCHASE" );
+//
+//        $newIncome = addToValue( $db, "Information", "Income", $income, "where ItemType = '$itemType'", false );
+//        $infoSQL = "UPDATE Information SET Income = $newIncome where ItemType = '$itemType'";
+//
+//        log_sql("Info SQL: [" . $infoSQL . "]" );
+//        $db->exec( $infoSQL );
+}
+/**
+ * @param $db SQLite3
+ * @return string
+ */
+function inventoryItem( $db, $itemID_all, $removeFromShelf_all, $auditAmount, $itemType ) {
+    $date = date('Y-m-d H:i:s');
+
+    $backstockQuantityBefore = 0;
+    $shelfQuantityBefore = 0;
+    $auditID = 0;
+    $auditMessage = "";
+
+    if( $auditAmount != "" ) {
+        $auditAmount =  convertDecimalToWholeCents( $auditAmount );
+
+        log_debug(" Audit found [$auditAmount] - [$itemType]" );
+
+        $statement = $db->prepare( "INSERT INTO Audit (Date, MissingMoney, ItemType) VALUES(:date, 0, :itemType)" );
+
+        $statement->bindValue(":date", $date );
+        $statement->bindValue(":itemType", $itemType );
+
+        $statement->execute();
+        $auditID = $db->lastInsertRowID();
+
+        $auditMessage = "(AUDIT #$auditID)";
+
+        $firstOfMonth = mktime(0, 0, 0, date("m"), 1, date("Y") );
+        $monthLabel = date('F Y', $firstOfMonth);
+
+        $statement = $db->prepare( "INSERT INTO Payments (UserID, Method, Amount, Date, Note, ItemType, MonthForPayment, AuditID) VALUES " .
+            "(0, '', :auditAmount, :date, 'Audited', :itemType, :monthLabel, :auditID)" );
+
+        $statement->bindValue(":auditAmount", $auditAmount );
+        $statement->bindValue(":date", $date );
+        $statement->bindValue(":itemType", $itemType );
+        $statement->bindValue(":monthLabel", $monthLabel );
+        $statement->bindValue(":auditID", $auditID );
+
+        $statement->execute();
+    }
+
+    $db->exec("BEGIN;");
+
+    for ($i = 0; $i < count($itemID_all); $i++) {
+        $itemID = $itemID_all[$i];
+        $newShelfQuantity = $removeFromShelf_all[$i];
+
+        $statement = $db->prepare("SELECT " . getQuantityQuery() . " FROM Item i WHERE i.ID = :itemID");
+        $statement->bindValue( ":itemID", $itemID );
+        $results = $statement->execute();
+
+        while ($row = $results->fetchArray()) {
+            $shelfQuantityBefore = $row['ShelfAmount'];
+            $backstockQuantityBefore = $row['BackstockAmount'];
+        }
+
+        $shelfDelta = $shelfQuantityBefore - $newShelfQuantity;
+
+        $itemDetailsArray = removeFromShelfQuantity( $db, $shelfDelta, $itemID );
+
+        $totalIncome = 0;
+        $totalProfit = 0;
+
+        $currentShelfQuantityCounter = $shelfQuantityBefore;
+        foreach( $itemDetailsArray as $itemDetailsObj ) {
+            $totalIncome += $itemDetailsObj->getFullPrice();
+            $totalProfit += ( $itemDetailsObj->getFullPrice() - $itemDetailsObj->getRetailPrice() );
+            $itemDetailsID = $itemDetailsObj->getItemDetailsID();
+
+            $statement = $db->prepare( "INSERT INTO Inventory_History (ItemID, Date, BackstockQuantityBefore, BackstockQuantity, ShelfQuantityBefore, ShelfQuantity, Restock, InventoryType, ItemDetailsID, AuditID) VALUES " .
+                "(:itemID, :date, :backstockQuantityBefore, :backstockQuantityAfter, :shelfQuantityBefore, :shelfQuantityAfter,  0, 'MANUAL PURCHASE', :itemDetailsID, :auditID)" );
+
+            $statement->bindValue(":itemID", $itemID );
+            $statement->bindValue(":date", $date );
+            $statement->bindValue(":backstockQuantityBefore", $backstockQuantityBefore );
+            $statement->bindValue(":backstockQuantityAfter", $backstockQuantityBefore );
+            $statement->bindValue(":shelfQuantityBefore", $currentShelfQuantityCounter );
+            $statement->bindValue(":shelfQuantityAfter", ($currentShelfQuantityCounter - 1) );
+            $statement->bindValue(":itemDetailsID", $itemDetailsID );
+            $statement->bindValue(":auditID", $auditID );
+
+            $statement->execute();
+
+            $currentShelfQuantityCounter--;
+        }
+
+        $refillTriggerAmount = $itemType == "Snack" ? 3 : 1;
+
+        $refillTrigger = "";
+        if( $newShelfQuantity <= $refillTriggerAmount ) {
+            $date = date('Y-m-d H:i:s', time());
+            $refillTrigger = " RefillTrigger = 1, ";
+        }
+
+        $statement = $db->prepare( "UPDATE Information SET SiteIncome = SiteIncome + :totalIncome, SiteProfit = SiteProfit + :totalProfit  where ItemType = :itemType" );
+
+        $statement->bindValue(":totalIncome", $totalIncome );
+        $statement->bindValue(":totalProfit", $totalProfit );
+        $statement->bindValue(":itemType", $itemType );
+
+        $statement->execute();
+
+
+        $statement = $db->prepare( "UPDATE Item SET $refillTrigger ItemIncome = ItemIncome + :itemIncome, ItemProfit = ItemProfit + :itemProfit  where ID = :itemID" );
+
+        $statement->bindValue(":itemIncome", $totalIncome );
+        $statement->bindValue(":itemProfit", $totalProfit );
+        $statement->bindValue(":itemID", $itemID );
+
+        $statement->execute();
+    }
+
+    if( $auditAmount != "" ) {
+        $auditDetails = getAuditDetails( $db, $auditID, $itemType );
+        $totalIncomeForAudit = $auditDetails->getTotalIncomeForAudit();
+        $missingMoney = $totalIncomeForAudit - $auditAmount;
+
+        error_log("[$auditAmount] Audit Amount [$totalIncomeForAudit] Total Income [$missingMoney] Missing Money" );
+
+        $statement = $db->prepare( "UPDATE Information SET SiteLoss = SiteLoss + :missingMoney where ItemType = :itemType" );
+
+        $statement->bindValue(":missingMoney", $missingMoney );
+        $statement->bindValue(":itemType", $itemType );
+
+        $statement->execute();
+    }
+
+    $db->exec("COMMIT;");
+
+    return "Inventory was successful for " . count($itemID_all) . " items. $auditMessage";
+}
+
+/**
+ * @param $db SQLite3
+ * @param $userID
+ * @param $amount
+ * @param $returnCredits
+ */
+function creditUser( $db, $isTest, $userID, $creditAmountInDecimal, $returnCredits ) {
+    $creditAmountWholeCents = convertDecimalToWholeCents( $creditAmountInDecimal );
+    $userMessage = "";
+
+    $validCredits = true;
+
+    $creditStatement = $db->prepare("SELECT Credits, SlackID, FirstName, LastName, UserName From User where UserID = :userID");
+    $creditStatement->bindValue( ":userID", $userID );
+    $creditResults = $creditStatement->execute();
+
+    $creditRow = $creditResults->fetchArray();
+    $currentCredits = $creditRow['Credits'];
+    $slackID = $creditRow['SlackID'];
+    $username = $creditRow['UserName'];
+    $name = $creditRow['FirstName'] . " " . $creditRow['LastName'];
+
+    if( $returnCredits ) {
+        if( $currentCredits - $creditAmountWholeCents < 0 ) {
+            $validCredits = false;
+            $userMessage = $userMessage . "Failure! User only has $currentCredits cents -  cannot subtract $creditAmountWholeCents cents!";
+        }
+        $creditAmountWholeCents = $creditAmountWholeCents * -1;
+
+        $creditMessage = "*$" . $creditAmountInDecimal . "* credits have been deducted from your account.";
+    } else {
+        $creditMessage = "*$" . $creditAmountInDecimal . "* credits have been added to your account.";
+    }
+
+    if( $validCredits ) {
+        $db->exec("BEGIN;" );
+
+        $statement = $db->prepare( "UPDATE User SET Credits=Credits + :creditAmountWholeCents where UserID = :userID" );
+
+        $statement->bindValue(":creditAmountWholeCents", $creditAmountWholeCents );
+        $statement->bindValue(":userID", $userID );
+
+        $statement->execute();
+
+        $statement = $db->prepare( "INSERT Into Purchase_History (UserID, ItemID, Cost, Date ) VALUES (:userID, " . CREDIT_ID . ", :creditAmountWholeCents, :date)" );
+
+        $statement->bindValue(":userID", $userID );
+        $statement->bindValue(":creditAmountWholeCents", $creditAmountWholeCents );
+        $statement->bindValue(":date", date('Y-m-d H:i:s', time()) );
+
+        $statement->execute();
+
+        $db->exec("COMMIT;" );
+
+        $userMessage = $userMessage . "User credited successfully with " . getPriceDisplayWithDollars($creditAmountWholeCents);
+
+        if( !$isTest ) {
+            if ($slackID == "") {
+                sendSlackMessageToMatt("Failed to send notification for " . $username . ". Create a SlackID!", ":no_entry:", "FoodStock - ERROR!!", "#bb3f3f");
+            } else {
+                sendSlackMessageToUser($slackID, $creditMessage, ":label:", "FoodStock - CREDITS", "#3f5abb", $username);
+                sendSlackMessageToMatt("*(" . strtoupper($name) . ")*\n" . $creditMessage, ":label:", "FoodStock - CREDITS", "#3f5abb");
+            }
+        }
+    }
+
+    return $userMessage;
+}
+/**
+ * @param $db SQLite3
+ * @param $cashOnly
+ * @param $itemsInCart
+ * @param $userID
+ * @param $creditsOfUser
+ */
+function purchaseItems( $db, $isTest, $userID, $itemsInCart, $cashOnly )
+{
+    if( count ( $itemsInCart ) == 0 ) {
+        error_log( "Something is wrong. Zero items were purchased?" );
+        return;
+    }
+
+    $totalPrice = 0.0;
+    $totalCredits = 0.0;
+    $totalSavings = 0.0;
+
+    $errors = "";
+    $purchaseMessage = "";
+    $itemsOutOfStock = array();
+
+    $userQuery = "SELECT SlackID, UserName, FirstName, LastName, SnackBalance, SodaBalance, Credits FROM User WHERE UserID = :userID";
+    $userStatement = $db->prepare( $userQuery );
+    $userStatement->bindValue( ":userID", $userID );
+    $userResults = $userStatement->execute();
+
+    $userRow = $userResults->fetchArray();
+
+    $creditsLeftOfUser = $userRow['Credits'];
+    $firstName = $userRow['FirstName'];
+    $lastName = $userRow['LastName'];
+    $slackID = $userRow['SlackID'];
+    $userName = $userRow['UserName'];
+    $currentSodaBalance = $userRow['SodaBalance'];
+    $currentSnackBalance = $userRow['SnackBalance'];
+
+    $itemQuantityValidationArray = array();
+    $itemQuantityValidationPassed = true;
+    $itemType = "UNKNOWN";
+    foreach ($itemsInCart as $itemID) {
+
+        if( array_key_exists( $itemID, $itemQuantityValidationArray ) === false ) {
+            $itemValidationStatement = $db->prepare( "SELECT i.Type, " . getQuantityQuery() . " FROM Item i WHERE ID = :itemID" );
+            $itemValidationStatement->bindValue( ":itemID", $itemID );
+            $itemValidationResults = $itemValidationStatement->execute();
+
+            $itemValidationRow = $itemValidationResults->fetchArray();
+            $itemValidationShelfQuantity = $itemValidationRow['ShelfAmount'];
+            $itemType = $itemValidationRow['Type'];
+            $itemQuantityValidationArray[$itemID] = $itemValidationShelfQuantity;
+        }
+
+        $itemQuantityValidationArray[$itemID]--;
+
+        if( $itemQuantityValidationArray[$itemID] < 0 ) {
+            $itemQuantityValidationPassed = false;
+            $errors .= "Validation failed for Item ID [$itemID]. Purchasing more than what is available.\n";
+        }
+    }
+
+    if( !$itemQuantityValidationPassed ) {
+        $errors .= "The following items were purchased by *$firstName $lastName*: [" . implode(",", $itemsInCart ) . "] :angrymob: GET THEM! :angrymob: ";
+    }
+
+    log_payment( "=======================================================================" );
+    log_payment("START ItemType: [$itemType] Count: [" . count( $itemsInCart ) . "] Credits: [$creditsLeftOfUser]" );
+
+    // TODO MTM: This is a bit slow with 25 purchased items
+    if( $itemQuantityValidationPassed ) {
+        foreach ($itemsInCart as $itemID) {
+            $startTimeItem = time();
+            $itemQuery = "SELECT i.Name," . getQuantityQuery() . " FROM Item i WHERE ID = :itemID";
+            log_sql("ITEM QUERY [$itemQuery]");
+            $statement = $db->prepare($itemQuery);
+            $statement->bindValue( ":itemID", $itemID );
+            $results = $statement->execute();
+
+            $row = $results->fetchArray();
+
+            $itemProfit = 0.0;
+            $itemName = $row['Name'];
+            $shelfQuantity = $row['ShelfAmount'];
+            $backstockQuantity = $row['BackstockAmount'];
+
+            if ($shelfQuantity - 1 <= -1) {
+                $errors .= "Welp, this should never happen. Validation should have caught this. Item Name: " . $itemName;
+                error_log("FAIL [$itemType] [$itemName]");
+            } else {
+                $db->exec( "BEGIN;" );
+                $itemDetailsObj = removeFromShelfQuantity($db, 1, $itemID )[0];
+                $db->exec( "COMMIT;" );
+
+                $itemType = $itemDetailsObj->getItemType();
+                log_payment("GOOD [$itemType] [$itemName]");
+                $itemPrice = $itemDetailsObj->getSitePurchasePrice();
+                $originalItemPrice = $itemDetailsObj->getFullPrice();
+                $itemDetailsID = $itemDetailsObj->itemDetailsID;
+                $retailCostPerItem = $itemDetailsObj->getRetailPrice();
+
+                $refillTriggerAmount = $itemType == "Snack" ? 3 : 1;
+                $refillTrigger = "";
+                if ($shelfQuantity - 1 <= $refillTriggerAmount) {
+
+                    if ($shelfQuantity - 1 <= 0) {
+                        $itemsOutOfStock[] = $itemName;
+                    }
+                    $date = date('Y-m-d H:i:s', time());
+                    $refillTrigger = " ,RefillTrigger = 1, OutOfStockDate = '$date', OutOfStockReporter='StockBot'";
+                }
+
+                $date = date('Y-m-d H:i:s', time());
+                $useCredits = 0;
+
+                log_payment( "Purchase. ItemPrice [$itemPrice] FullPrice [$originalItemPrice] CreditsLeft[$creditsLeftOfUser] Type[$itemType]" );
+                if ($creditsLeftOfUser > 0 && !$cashOnly) {
+                    $useCredits = $creditsLeftOfUser;
+                    $creditsLeftOfUser -= $itemPrice;
+
+                    log_payment("Use Credits: [$useCredits] Credits Left: [$creditsLeftOfUser]" );
+
+                    if ($creditsLeftOfUser < 0) {
+                        // If we went over their credit limit, we need to add it to their balance now
+                        $totalPrice += abs($creditsLeftOfUser);
+                        $totalCredits += $useCredits;
+                        $creditsLeftOfUser = 0;
+
+                        log_payment("Part Credits, Part Balance. Total Balance: [$totalPrice]" );
+                    } else {
+                        $useCredits = $itemPrice;
+                        $totalCredits += $itemPrice;
+
+                        log_payment("All Credits. Credits Left: [$totalPrice]" );
+                    }
+                } else {
+                    $totalPrice += $itemPrice;
+                }
+
+                $itemProfit += ($itemPrice - $retailCostPerItem);
+
+                log_payment("Profit [$itemProfit] = Item Price [$itemPrice] - RetailCost [$retailCostPerItem] - [UPDATE Item SET ItemProfit = ItemProfit + $itemProfit where ID = $itemID]" );
+
+                $cashOnlyInteger = $cashOnly ? 1 : 0;
+
+                $statement = $db->prepare( "INSERT INTO Inventory_History (ItemID, Date, BackstockQuantityBefore, BackstockQuantity, ShelfQuantityBefore, ShelfQuantity, Restock, InventoryType, ItemDetailsID ) VALUES " .
+                    "(:itemID, :date, :backstockQuantityBefore, :backstockQuantityAfter, :shelfQuantityBefore, :shelfQuantityAfter, 0, 'SITE PURCHASE', :itemDetailsID )" );
+
+                $statement->bindValue(":itemID", $itemID );
+                $statement->bindValue(":date", $date );
+                $statement->bindValue(":backstockQuantityBefore", $backstockQuantity );
+                $statement->bindValue(":backstockQuantityAfter", $backstockQuantity );
+                $statement->bindValue(":shelfQuantityBefore", $shelfQuantity );
+                $statement->bindValue(":shelfQuantityAfter",  ($shelfQuantity - 1) );
+                $statement->bindValue(":itemDetailsID",  $itemDetailsID );
+
+                $statement->execute();
+                $inventoryHistoryID = $db->lastInsertRowID();
+
+                $db->exec( "BEGIN;" );
+                $statement = $db->prepare( "UPDATE Item SET ItemIncome = ItemIncome + :itemPrice, ItemProfit = ItemProfit + :itemProfit where ID = :itemID" );
+
+                $statement->bindValue(":itemPrice", $itemPrice );
+                $statement->bindValue(":itemProfit", $itemProfit );
+                $statement->bindValue(":itemID", $itemID );
+
+                $statement->execute();
+
+                $statement = $db->prepare( "UPDATE Information SET SiteIncome = SiteIncome + :itemPrice, SiteProfit = SiteProfit + :itemProfit where ItemType = :itemType" );
+
+                $statement->bindValue(":itemPrice", $itemPrice );
+                $statement->bindValue(":itemProfit", $itemProfit );
+                $statement->bindValue(":itemType", $itemType );
+
+                $statement->execute();
+
+
+                $statement = $db->prepare( "INSERT Into Purchase_History (UserID, ItemID, Date, CashOnly, DailyAmountID, UseCredits, ItemDetailsID) VALUES " .
+                    "(:userID, :itemID, :date, :cashOnlyInteger, :inventoryHistoryID, :useCredits, :itemDetailsID )" );
+
+                $statement->bindValue(":userID", $userID );
+                $statement->bindValue(":itemID", $itemID );
+                $statement->bindValue(":date", $date );
+                $statement->bindValue(":cashOnlyInteger", $cashOnlyInteger );
+                $statement->bindValue(":inventoryHistoryID", $inventoryHistoryID );
+                $statement->bindValue(":useCredits", $useCredits );
+                $statement->bindValue(":itemDetailsID", $itemDetailsID );
+
+                $statement->execute();
+
+                $db->exec( "COMMIT;" );
+
+                $purchaseMessage = $purchaseMessage . "- " . $itemName . " (" . getPriceDisplayWithDollars($itemPrice) . ")\n";
+            }
+            $stopTimeItem = time();
+            $totalTimeItem = $stopTimeItem - $startTimeItem;
+
+            log_benchmark("Time to complete purchase for [$itemName]: $totalTimeItem seconds");
+        }
+
+        log_payment("FINAL [$itemType]");
+    }
+
+    if( $errors == "" ) {
+        if (!$cashOnly) {
+
+            if( $itemType == "Snack" ) {
+                $typeOfBalance = "SnackBalance";
+                $typeOfSavings = "SnackSavings";
+
+                $currentSnackBalance += $totalPrice;
+            } else if( $itemType == "Soda" ) {
+                $typeOfBalance = "SodaBalance";
+                $typeOfSavings = "SodaSavings";
+
+                $currentSodaBalance += $totalPrice;
+            }
+
+            $statement = $db->prepare( "UPDATE User SET $typeOfBalance = $typeOfBalance + :totalPrice , $typeOfSavings = $typeOfSavings + :totalSavings, Credits = :creditsLeftOfUser where UserID = :userID" );
+
+            $statement->bindValue(":totalPrice", $totalPrice );
+            $statement->bindValue(":totalSavings", $totalSavings );
+            $statement->bindValue(":creditsLeftOfUser", $creditsLeftOfUser );
+            $statement->bindValue(":userID", $userID );
+
+            $statement->execute();
+        }
+
+        if ($totalCredits > 0) {
+            $purchaseMessage = $purchaseMessage . "*Total Credits:* " . getPriceDisplayWithDollars($totalCredits) . "\n";
+        }
+
+        if ($totalPrice > 0) {
+            $purchaseMessage = $purchaseMessage . "*Total Price:* " . getPriceDisplayWithDollars($totalPrice) . "\n";
+        }
+
+        if (!$cashOnly) {
+            $totalBalance = $currentSodaBalance + $currentSnackBalance;
+            $purchaseMessage = $purchaseMessage . "*Your Balance:* " . getPriceDisplayWithDollars($totalBalance) . "\n";
+        } else {
+            $purchaseMessage = $purchaseMessage . "*THIS PURCHASE WAS CASH-ONLY*\n";
+        }
+
+        if( !$isTest ) {
+            if ($slackID == "") {
+                sendSlackMessageToMatt("Failed to send notification for $userName. Create a SlackID!", ":no_entry:", $itemType . "Stock - ERROR!!", "#bb3f3f");
+            } else {
+                sendSlackMessageToUser($slackID, $purchaseMessage, ":shopping_trolley:", $itemType . "Stock - RECEIPT", "#3f5abb", $userName);
+            }
+
+            sendSlackMessageToMatt("*(" . strtoupper("$firstName $lastName") . ")*\n" . $purchaseMessage, ":shopping_trolley:", $itemType . "Stock - RECEIPT", "#3f5abb");
+
+            if (count($itemsOutOfStock) > 0) {
+                foreach ($itemsOutOfStock as $item) {
+                    sleep(1);
+                    sendSlackMessageToMatt("*Item Name:* " . $item . "\n*Buyer:* " . "$firstName $lastName", ":negative_squared_cross_mark:", "OUT OF STOCK BY PURCHASE", "#791414");
+                }
+            }
+
+            $_SESSION["SodaBalance"] = $currentSodaBalance;
+            $_SESSION["SnackBalance"] = $currentSnackBalance;
+            $_SESSION['PurchaseCompleted'] = 1;
+        }
+
+        return "Purchase Completed";
+    } else {
+        error_log( "ERROR: [$userID]" . $errors );
+        sendSlackMessageToMatt( "Errors: " . $errors, ":no_entry:", $itemType . "Stock - ERROR!!", "#bb3f3f" );
+        return "Something went wrong - contact Matt!! " . $errors;
+    }
+}
+
+/**
+ * @param $db SQLite3
+ * @param $paymentID
+ */
+function cancelPayment( $db, $paymentID ) {
+    $statement = $db->prepare("SELECT UserID, Amount, ItemType From Payments where PaymentID = :paymentID");
+    $statement->bindValue( ":paymentID", $paymentID );
+    $results = $statement->execute();
+
+    $row = $results->fetchArray();
+
+    $userID = $row['UserID'];
+    $amount = $row['Amount'];
+    $itemType = $row['ItemType'];
+
+    $isUserPayment = $userID > 0;
+
+    $db->exec( "BEGIN;" );
+
+    $statement = $db->prepare( "UPDATE Payments SET Cancelled = 1 WHERE PaymentID = :paymentID" );
+    $statement->bindValue(":paymentID", $paymentID );
+    $statement->execute();
+
+    if( $isUserPayment ) {
+        $balanceType = $itemType . "Balance";
+
+        $statement = $db->prepare( "UPDATE User SET $balanceType = $balanceType + :amount WHERE UserID = :userID" );
+        $statement->bindValue(":amount", $amount );
+        $statement->bindValue(":userID", $userID );
+        $statement->execute();
+    }
+
+    $statement = $db->prepare( "UPDATE Information SET SitePayments = SitePayments - :amount WHERE ItemType = :itemType" );
+    $statement->bindValue(":amount", $amount );
+    $statement->bindValue(":itemType", $itemType );
+    $statement->execute();
+
+    $db->exec( "COMMIT;" );
+}
+/**
+ * @param $db SQLite3
+ * @param $itemID
+ * @param $itemType
+ * @param $quantity
+ */
+function defectItem($db, $itemID, $quantity ) {
+    $statement = $db->prepare("SELECT " . getQuantityQuery() . ", Type From Item i where ID = :itemID" );
+    $statement->bindValue( ":itemID", $itemID );
+    $results = $statement->execute();
+
+    $row = $results->fetchArray();
+    $shelfQuantity = $row['ShelfAmount'];
+    $itemType = $row['Type'];
+
+    error_log("DEFECTIVE [$itemID] [$quantity] [$shelfQuantity]" );
+
+    if( $quantity > $shelfQuantity ) {
+        return "Error: Trying to defect out more than you have on the shelf of $shelfQuantity units.";
+    } else {
+
+        $db->exec( "BEGIN;" );
+
+        $itemDetailsArray = removeFromShelfQuantity( $db, $quantity, $itemID );
+
+        error_log("DEFECTIVE REMOVED [$itemID] [$quantity] [$shelfQuantity]" );
+
+        foreach( $itemDetailsArray as $itemDetails ) {
+            $statement = $db->prepare( "INSERT INTO Defectives (ItemID, Date, Amount, Price) VALUES(:itemID, :date, 1, :fullPrice)" );
+            $statement->bindValue(":itemID", $itemID );
+            $statement->bindValue(":date", date('Y-m-d H:i:s') );
+            $statement->bindValue(":fullPrice", $itemDetails->getFullPrice() );
+            $statement->execute();
+
+            $statement = $db->prepare( "UPDATE Information SET SiteLoss = SiteLoss + :missingMoney where ItemType = :itemType" );
+
+            $statement->bindValue(":missingMoney", $itemDetails->getRetailPrice() );
+            $statement->bindValue(":itemType", $itemType );
+
+            $statement->execute();
+        }
+
+        $db->exec( "COMMIT;" );
+
+        return "Defectives successfully.";
+    }
+}
+/**
+ * @param $db SQLite3
+ * @param $username
+ * @param $password
+ * @param $passwordAgain
+ * @param $firstName
+ * @param $lastName
+ * @param $phoneNumber
+ * @return string
+ */
+function registerUser( $db, $isTest, $username, $password, $passwordAgain, $firstName, $lastName, $phoneNumber ) {
+    if( $username == "" || $password == "" || $passwordAgain == "" || $firstName == "" || $lastName == "" ) {
+        return "You must provide User Name, Password, First Name, and Last Name.";
+    } else if( $password != $passwordAgain ) {
+        return "Passwords did not match.";
+    } else {
+        $passwordSHA1 = sha1( $password );
+        $date = date('Y-m-d H:i:s');
+
+        $statement = $db->prepare("SELECT * FROM User WHERE UserName = :username");
+        $statement->bindValue( ":username", $username );
+        $results = $statement->execute();
+
+        $userExists = $results->fetchArray() != false;
+
+        if( $userExists ) {
+            return "User <b>$username</b> already exists!";
+        } else {
+            $statement = $db->prepare( "INSERT INTO User (UserName, Password, FirstName, LastName, PhoneNumber, DateCreated, SodaBalance, SnackBalance, SodaSavings, " .
+                "SnackSavings, AnonName, IsCoop, Inactive, Credits, ShowDiscontinued, ShowCashOnly, ShowCredit, ShowItemStats, ShowShelf, SubscribeRestocks, ShowTrending) VALUES " .
+                "( :username, :passwordSHA1, :firstName, :lastName, :phoneNumber, :date, 0.00, 0.00, 0.00, 0.00, 'Penguin', 1, 0, 0.00, 0, 0, 0, 1, 0, 0, 1)" );
+            $statement->bindValue(":username", $username );
+            $statement->bindValue(":passwordSHA1", $passwordSHA1 );
+            $statement->bindValue(":firstName", $firstName );
+            $statement->bindValue(":lastName", $lastName );
+            $statement->bindValue(":phoneNumber", $phoneNumber );
+            $statement->bindValue(":date", $date );
+            $statement->execute();
+
+            if( !$isTest ) {
+                sendSlackMessageToMatt("*User Name:* " . $username . "\n*Name:* " . $firstName . " " . $lastName, ":busts_in_silhouette:", "NEW USER", "#b7ab1a");
+            }
+            return "Registration complete! User <b>$username</b> has been created.";
+        }
+    }
+}
+
+function getSitePurchasePrice( $discountPrice, $price ) {
+    if( $discountPrice == 0 || $discountPrice == "" ) {
+        return $price;
+    } else {
+        return $discountPrice;
+    }
+}
+
+/**
+ * @param $db SQLite3
+ * @param $currentAuditID
+ * @return AuditItem
+ */
+function getAuditDetails( $db, $currentAuditID, $itemType ) {
+    $statementPreviousAudit = $db->prepare("SELECT AuditID, Date from Audit WHERE AuditID < :currentAuditID and ItemType =:itemType ORDER BY AuditID DESC" );
+    $statementPreviousAudit->bindValue( ":currentAuditID", $currentAuditID );
+    $statementPreviousAudit->bindValue( ":itemType", $itemType );
+    $resultsPreviousAudit = $statementPreviousAudit->execute();
+
+    $previousAuditArray = $resultsPreviousAudit->fetchArray();
+    $previousAuditID = $previousAuditArray['AuditID'];
+    $previousAuditDate = $previousAuditArray['Date'];
+
+    error_log("Previous Audit[$previousAuditID] [$previousAuditDate]" );
+    if( $previousAuditID == "" ) {
+        // No previous audit to compare to
+        return null;
+    }
+    $breakdownTable = "";
+    $totalIncomeForAudit = 0.0;
+    $totalProfitForAudit = 0.0;
+
+//    $shelfBeforeSQL = "SELECT before.ShelfQuantity as BeforeQuantity, before.Date, beforeDetails.Price as BeforePrice, " .
+//        "after.ShelfQuantity as AfterQuantity, after.Date, after.AuditID, " .
+//        "item.DiscountPrice, item.Price, item.id as ItemID, item.price as AfterPrice, item.Name, " .
+//        "(select count(*) from Purchase_History p where p.Date > before.Date and p.ItemID = item.ID AND p.Date < after.Date) SitePurchases, " .
+//        "(SELECT sum(d.ShelfQuantity-d.ShelfQuantityBefore) from Inventory_History d WHERE d.ShelfQuantity > d.ShelfQuantityBefore AND d.ItemID = item.ID AND d.Date > before.Date AND d.Date < after.Date) Refills " .
+//        "FROM Inventory_History before " .
+//        "JOIN Item_Details beforeDetails on before.ItemDetailsID = beforeDetails.ItemDetailsID " .
+//        "JOIN Item_Details afterDetails on after.ItemDetailsID = afterDetails.ItemDetailsID " .
+//        "JOIN Inventory_History after ON before.ItemID = after.ItemID AND after.AuditID = $currentAuditID " .
+//        "JOIN Item item on before.ItemID = item.ID " .
+//        "WHERE before.AuditID = $previousAuditID ORDER BY before.ItemID DESC";
+
+     $shelfBeforeSQL = "SELECT inv.ItemID, item.Name, details.Price, details.RetailPrice, COUNT(inv.ItemID) as Count, SUM(details.Price) as 'Total_Price', SUM(details.RetailPrice) as 'Total_Retail' " .
+         "FROM Inventory_History inv " .
+         "INNER JOIN Item_Details details ON inv.ItemDetailsID = details.ItemDetailsID " .
+         "INNER JOIN Item item ON inv.ItemID = item.ID " .
+         "WHERE inv.ID > (SELECT MAX(ID) FROM Inventory_History WHERE AuditID = :previousAuditID) " .
+         "AND inv.ID <= (SELECT MAX(ID) FROM Inventory_History WHERE AuditID = :currentAuditID) " .
+         "AND inv.InventoryType = 'MANUAL PURCHASE' ".
+         "AND inv.ItemDetailsID IS NOT NULL " .
+         "GROUP BY inv.ItemID, details.Price, details.RetailPrice " .
+         "ORDER BY inv.ItemID;";
+
+    $statementShelfBefore = $db->prepare( $shelfBeforeSQL );
+    $statementShelfBefore->bindValue( ":previousAuditID", $previousAuditID );
+    $statementShelfBefore->bindValue( ":currentAuditID", $currentAuditID );
+    $resultsShelfBefore = $statementShelfBefore->execute();
+
+    $breakdownTable .= "<div class='rounded_inner_table'>";
+//    $breakdownTable .= "[$shelfBeforeSQL]";
+    $breakdownTable .= "<table>";
+    $breakdownTable .= "<thead><tr>";
+    $breakdownTable .= "<th>Item ID</th><th>Item Name</th><th>Total Site Purchases</th><th>Full Price</th><th>Retail Price</th><th>Total Income</th><th>Total Retail Cost</th><th>Profit</th>";
+    $breakdownTable .= "</tr>";
+
+    while ($rowShelfBefore = $resultsShelfBefore->fetchArray()) {
+        $totalIncome = $rowShelfBefore['Total_Price'];
+        $totalRetail = $rowShelfBefore['Total_Retail'];
+        $totalCount = $rowShelfBefore['Count'];
+        $itemName = $rowShelfBefore['Name'];
+        $itemID = $rowShelfBefore['ItemID'];
+        $itemPrice = $rowShelfBefore['Price'];
+        $itemRetailPrice = $rowShelfBefore['RetailPrice'];
+
+        $totalProfit = $totalIncome - $totalRetail;
+
+        $rowStyle = "style='background-color: #ffb2b2; color:#000000;'";
+
+        if( $totalProfit > 0 ) {
+            $rowStyle = "style='background-color: #b2ffdb; color:#000000;'";
+        }
+        $breakdownTable .= "<tr $rowStyle'>";
+        $breakdownTable .= "<td>$itemID</td>";
+        $breakdownTable .= "<td><b>$itemName</b></td>";
+        $breakdownTable .= "<td>$totalCount</td>";
+        $breakdownTable .= "<td>" . getPriceDisplayWithDollars($itemPrice) . "</td>";
+        $breakdownTable .= "<td>" . getPriceDisplayWithDollars($itemRetailPrice) . "</td>";
+        $breakdownTable .= "<td>" . getPriceDisplayWithDollars($totalIncome) . "</td>";
+        $breakdownTable .= "<td>" . getPriceDisplayWithDollars($totalRetail) . "</td>";
+        $breakdownTable .= "<td>" . getPriceDisplayWithDollars($totalProfit) . "</td>";
+        $breakdownTable .= "</tr>";
+
+        $totalIncomeForAudit += $totalIncome;
+        $totalProfitForAudit += $totalProfit;
+    }
+    $breakdownTable .= "</table>";
+
+    return new AuditItem( $breakdownTable, $totalIncomeForAudit, $totalProfitForAudit, $previousAuditID, $previousAuditDate );
+}
+?>
\ No newline at end of file
diff --git a/functions/log_functions.php b/functions/log_functions.php
index 843c362..8d6d03f 100644
--- a/functions/log_functions.php
+++ b/functions/log_functions.php
@@ -1,4 +1,6 @@
 <?php
+    $benchmarks = array();
+
     function log_slack( $message ) {
         logger( "slack", "slack.log", $message );
     }
@@ -19,6 +21,23 @@
         logger( "benchmark", "benchmark.log", $message );
     }
 
+    function benchmark_start( $name ) {
+        global $benchMarks;
+        $mt = explode(' ', microtime());
+        $startTime = ((int)$mt[1]) * 1000 + ((int)round($mt[0] * 1000));
+        $benchMarks[$name] = $startTime;
+    }
+
+    function benchmark_stop( $name ) {
+        global $benchMarks;
+        $mt = explode(' ', microtime());
+        $stopTime = ((int)$mt[1]) * 1000 + ((int)round($mt[0] * 1000));
+        $startTime = $benchMarks[$name];
+
+        log_benchmark( "BENCHMARK [$name] - [" . ($stopTime - $startTime ) . " ms]" );
+        unset( $benchMarks[$name] );
+    }
+
     /**
      * Log function with log file rotation
      * and loglevel restrictions
diff --git a/functions/quantity_functions.php b/functions/quantity_functions.php
index 4b15142..00c8de8 100644
--- a/functions/quantity_functions.php
+++ b/functions/quantity_functions.php
@@ -1,7 +1,197 @@
 <?php
-/**
- * Created by PhpStorm.
- * User: Matt
- * Date: 8/10/2019
- * Time: 2:47 PM
- */
\ No newline at end of file
+
+    include(ITEM_OBJ);
+
+    function getPrepareStatementForInClause( $numberOfItemsInList ) {
+        return "(" . trim( str_repeat("?,", $numberOfItemsInList ), "," ) . ")";
+    }
+
+    /**
+     * @param $statement PDOStatement
+     * @param $array
+     */
+    function bindStatementsForInClause( $statement, $array ) {
+        for( $i = 1; $i <= count( $array ); $i++ ) {
+            $statement->bindValue( $i, $array[$i - 1] );
+        }
+    }
+
+    function getQuantityQuery() {
+        return "(select count(ItemID) FROM Items_In_Stock WHERE IsBackstock IS NULL OR IsBackstock = 0 AND ItemID = i.ID ) as ShelfAmount, " .
+               "(select count(ItemID) FROM Items_In_Stock WHERE IsBackstock = 1 AND ItemID = i.ID ) as BackstockAmount," .
+               "(select count(ItemID) FROM Items_In_Stock WHERE ItemID = i.ID ) as TotalAmount";
+    }
+
+    // REFILL (FLIP THE BIT)
+    /**
+     * @param $db SQLite3
+     * @param $amount
+     * @param $itemID
+     * @return Item[]
+     */
+    function moveToShelfQuantity( $db, $amount, $itemID ) {
+        $itemDetailsArray = array();
+
+        benchmark_start("Move Quantity Query  $itemID");
+        $statement = $db->prepare( "SELECT s.StockID, s.ItemDetailsID FROM Items_In_Stock s " .
+            "WHERE s.StockID IN (SELECT ss.StockID FROM Items_In_Stock ss WHERE ss.ItemID = :itemID AND ss.IsBackstock = 1 ORDER BY ss.Date ASC LIMIT $amount)" );
+        $statement->bindValue( ":itemID", $itemID );
+        $results = $statement->execute();
+
+        benchmark_stop("Move Quantity Query  $itemID");
+
+        benchmark_start("Move Quantity Loop  $itemID");
+        $stockIDs = array();
+
+        while ($row = $results->fetchArray()) {
+            $stockID = $row['StockID'];
+            $itemDetailsID = $row['ItemDetailsID'];
+
+            benchmark_start("Move Quantity Obj  $itemID");
+            $itemDetailsObj = createItemObj( $db, $itemDetailsID );
+
+            $itemDetailsArray[] = $itemDetailsObj;
+            $stockIDs[] = $stockID;
+            benchmark_stop("Move Quantity Obj  $itemID");
+        }
+        benchmark_stop("Move Quantity Loop  $itemID");
+
+        benchmark_start("Move Quantity Update  $itemID");
+        $stockIDJoin = implode( ",", $stockIDs );
+
+        $statement = $db->prepare( "UPDATE Items_In_Stock SET IsBackstock = 0 WHERE StockID in ($stockIDJoin)" );
+        $statement->bindValue(":stockIDJoin", $stockIDJoin );
+        $statement->execute();
+
+        benchmark_stop("Move Quantity Update  $itemID");
+
+        return $itemDetailsArray;
+    }
+
+    // CANCEL SITE AND MANUAL PURCHASES
+    /**
+     * @var $db SQLite3
+     * @return Item[]
+     */
+    function addToShelfQuantity( $db, $amount, $itemID, $itemDetailsID, $type ) {
+        $itemDetailsArray = array();
+
+        $itemDetailsObj = createItemObj( $db, $itemDetailsID );
+
+        if( $amount > 0 ) {
+            $date = date('Y-m-d H:i:s');
+
+            for ($shelf = 0; $shelf < $amount; $shelf++) {
+
+                $statement = $db->prepare( "INSERT INTO Items_In_Stock (ItemID, IsBackstock, Date, ItemDetailsID) VALUES (:itemID, 0, :date, :itemDetailsID)" );
+                $statement->bindValue(":itemID", $itemID );
+                $statement->bindValue(":date", $date );
+                $statement->bindValue(":itemDetailsID", $itemDetailsID );
+                $statement->execute();
+
+                // All identical items are being added, so use same object
+                $itemDetailsArray[] = $itemDetailsObj;
+            }
+        }
+
+        return $itemDetailsArray;
+    }
+
+    // RESTOCK
+    /**
+     * @var $db SQLite3
+     */
+    function addToBackstockQuantity( $db, $amount, $itemID, $itemDetailsID, $type ) {
+        // We're just adding an ItemDetails, don't need to return an Item array
+        // because we aren't doing anything with it after
+        if( $amount > 0 ) {
+            $date = date('Y-m-d H:i:s');
+
+            for ($back = 0; $back < $amount; $back++) {
+                $stmt=$db->prepare("INSERT INTO Items_In_Stock (ItemID, IsBackstock, Date, ItemDetailsID) VALUES " .
+                    "(:itemID, 1, :date, :itemDetailsID)");
+                $stmt->bindValue(':itemID', $itemID );
+                $stmt->bindValue(':date', $date );
+                $stmt->bindValue(':itemDetailsID', $itemDetailsID );
+                $stmt->execute();
+            }
+        }
+    }
+
+    // SITE PURCHASE
+    // MANUAL PURCHASE
+    // DEFECTIVE
+    /**
+     * @var $db SQLite3
+     * @return Item[]
+     */
+    function removeFromShelfQuantity($db, $amount, $itemID ) {
+        $itemDetailsArray = array();
+
+        if( $amount > 0 ) {
+            $statement = $db->prepare( "SELECT s.StockID, s.ItemDetailsID " .
+                "FROM Items_In_Stock s " .
+                "WHERE s.ItemID = :itemID AND ( s.IsBackstock IS NULL OR s.IsBackstock = 0 ) ORDER BY s.Date ASC LIMIT $amount" );
+            $statement->bindValue( ":itemID", $itemID );
+            $results = $statement->execute();
+
+            while ($row = $results->fetchArray()) {
+                $stockID = $row['StockID'];
+                $itemDetailsID = $row['ItemDetailsID'];
+
+                $itemDetailsObj = createItemObj( $db, $itemDetailsID );
+                $itemDetailsArray[] = $itemDetailsObj;
+
+                $statement = $db->prepare( "DELETE FROM Items_In_Stock WHERE StockID = $stockID" );
+                $statement->bindValue(":stockID", $stockID );
+                $statement->execute();
+            }
+        }
+
+        return $itemDetailsArray;
+    }
+
+    // CANCEL RESTOCK
+    /**
+     * @var $db SQLite3
+     * @return Item[]
+     */
+    function removeFromBackstockQuantity($db, $amount, $itemID, $type ) {
+        if( $amount > 0 ) {
+            $statement = $db->prepare( "DELETE FROM Items_In_Stock WHERE StockID IN (SELECT StockID FROM Items_In_Stock WHERE ItemID = :itemID AND IsBackstock = 1 ORDER BY Date ASC LIMIT :amount)" );
+            $statement->bindValue( ":itemID", $itemID );
+            $statement->bindValue( ":amount", $amount );
+            $statement->execute();
+        }
+    }
+
+    /**
+     * @param $db SQLite3
+     * @param $itemDetailsID
+     * @return Item
+     */
+    function createItemObj( $db, $itemDetailsID ) {
+        $itemQuery = "SELECT d.ItemID, d.Price, d.DiscountPrice, d.RetailPrice, d.ExpDate, i.Type, i.Name FROM Item_Details d JOIN ITEM i ON d.ItemID = i.ID WHERE d.ItemDetailsID = :itemDetailsID";
+        $statement = $db->prepare( $itemQuery );
+        $statement->bindValue( ":itemDetailsID", $itemDetailsID );
+        $results = $statement->execute();
+
+        $row = $results->fetchArray();
+
+        $itemID = $row['ItemID'];
+        $price = $row['Price'];
+        $discountPrice = $row['DiscountPrice'];
+        $retailPrice = $row['RetailPrice'];
+        $expDate = $row['ExpDate'];
+
+        if( $discountPrice == 0 ) {
+            // This means its the same price as the full price
+            $discountPrice = $price;
+        }
+
+        $itemName = $row['Name'];
+        $itemType = $row['Type'];
+
+        return new Item( $itemID, $price, $discountPrice, $retailPrice, $expDate, $itemName, $itemType, $itemDetailsID );
+    }
+?>
\ No newline at end of file
diff --git a/functions/session_functions.php b/functions/session_functions.php
index 306c6c3..f7f54f6 100644
--- a/functions/session_functions.php
+++ b/functions/session_functions.php
@@ -2,12 +2,18 @@
 include(__DIR__ . "/../appendix.php" );
 include_once( LOG_FUNCTIONS_PATH );
 
+/**
+ * @param $db SQLite3
+ */
 function Login($db) {
     session_start();
     
     if( isset( $_SESSION['LoggedIn'] ) && $_SESSION['LoggedIn'] == true ) {
         // Already logged in - Recache everything
-        $results = $db->query("SELECT * FROM User WHERE UserName = '" . $_SESSION['UserName'] . "'");
+        $statement = $db->prepare("SELECT * FROM User WHERE UserName = :userName");
+        $statement->bindValue( ":userName", $_SESSION['UserName'] );
+        $results = $statement->execute();
+
         $row = $results->fetchArray();
         $_SESSION['SlackID'] = $row['SlackID'];
         $_SESSION['SodaBalance'] = $row['SodaBalance'];
@@ -31,6 +37,12 @@ function Login($db) {
     LoginWithProxy( $db, false, $username, $password_sha1 );
 }
 
+/**
+ * @param $db SQLite3
+ * @param $isProxy
+ * @param $username
+ * @param $password_sha1
+ */
 function LoginWithProxy($db, $isProxy, $username, $password_sha1) {
     if (session_status() == PHP_SESSION_ACTIVE) {
         session_destroy();
@@ -39,9 +51,14 @@ function LoginWithProxy($db, $isProxy, $username, $password_sha1) {
     session_start();
     
     if( $isProxy ) {
-        $results = $db->query("SELECT * FROM User WHERE UserName = '" . $username . "'" );
+        $statement = $db->prepare("SELECT * FROM User WHERE UserName = :userName" );
+        $statement->bindValue( ":userName", $username );
+        $results = $statement->execute();
     } else {
-        $results = $db->query("SELECT * FROM User WHERE UserName = '" . $username . "' AND Password  = '" . $password_sha1 . "'");
+        $statement = $db->prepare("SELECT * FROM User WHERE UserName = :userName AND Password  = :password");
+        $statement->bindValue( ":userName", $username );
+        $statement->bindValue( ":password", $password_sha1 );
+        $results = $statement->execute();
     }
     
     $row = $results->fetchArray();
@@ -117,6 +134,10 @@ function IsAdminLoggedIn(){
     return isset( $_SESSION['IsAdmin'] ) && $_SESSION['IsAdmin'];
 }
 
+/**
+ * @param $db SQLite3
+ * @param $title
+ */
 function TrackVisit($db, $title){   
     if( IsAdminLoggedIn() || !IsLoggedIn() ) {
         // Don't track the admin, or logged out people
@@ -131,29 +152,17 @@ function TrackVisit($db, $title){
     if(isset($_SERVER['HTTP_USER_AGENT']) == true) {
         $agent = $_SERVER['HTTP_USER_AGENT'];
     }
-    
-    $db->exec("INSERT INTO Visits (IP, Date, Agent, Page) VALUES( '$ipAddress', '$date', '$agent', '$title')");
-    
+
+    $statement = $db->prepare( "INSERT INTO Visits (IP, Date, Agent, Page) VALUES( :ipAddress, :date, :agent, :title)" );
+    $statement->bindValue(":ipAddress", $ipAddress );
+    $statement->bindValue(":date", $date );
+    $statement->bindValue(":agent", $agent );
+    $statement->bindValue(":title", $title );
+    $statement->execute();
+
     // Ignore me
     if( $ipAddress != "192.9.200.54" && $ipAddress  != "::1" && $ipAddress != "72.225.38.26" ) {
         sendSlackMessageToSlackBot($title . " visited by [" . $ipAddress . "] on [" . $agent . "]", ":earth_americas:", "SITE VISIT" );
     }
 }
-
-function addToValue( $db, $tableName, $columnName, $valueToAdd, $whereClause, $doAdd )
-{
-    $results = $db->query("SELECT $columnName FROM $tableName $whereClause");
-    $row = $results->fetchArray();
-    $columnValue = $row[$columnName];
-
-    if ($doAdd) {
-        $finalValue = $columnValue + $valueToAdd;
-    } else {
-        $finalValue = $columnValue - $valueToAdd;
-    }
-
-    log_sql("[$tableName/$columnName] TABLE COLUMN --- [$columnValue] " . ($doAdd ? "+" : "-") . " [$valueToAdd] = [$finalValue]");
-
-    return $finalValue;
-}
 ?>
\ No newline at end of file
diff --git a/functions/slack_functions.php b/functions/slack_functions.php
index e9daea7..1623570 100644
--- a/functions/slack_functions.php
+++ b/functions/slack_functions.php
@@ -2,12 +2,12 @@
     include_once ( LOG_FUNCTIONS_PATH );
 
     function sendSlackMessageToMatt( $slackMessage, $emoji, $botName, $color ) {
-            sendMessageToBot( "U1FEGH4U9", $emoji, $botName, $slackMessage, $color );
+            sendMessageToBot( "U1FEGH4U9", $emoji, $botName, $slackMessage, $color, "ADMIN" );
     //     sendSlackMessagePOST( "@mmiles", $emoji, $botName, $slackMessage );
     }
     
-    function sendSlackMessageToUser( $slackID, $slackMessage, $emoji, $botName, $color ) {
-        sendMessageToBot( $slackID, $emoji, $botName, $slackMessage, $color );
+    function sendSlackMessageToUser( $slackID, $slackMessage, $emoji, $botName, $color, $username ) {
+        sendMessageToBot( $slackID, $emoji, $botName, $slackMessage, $color, $username );
     //     sendSlackMessagePOST( "@" . $slackID, $emoji, $botName, $slackMessage );
     }
     
@@ -28,9 +28,9 @@
     }
     
     
-    function sendMessageToBot( $slackID, $emoji, $botName, $slackMessage, $color  ){
+    function sendMessageToBot( $slackID, $emoji, $botName, $slackMessage, $color, $username ){
         if( isTestServer() ) {
-            $slackMessage = "`[sent to $slackID]`\n" . $slackMessage;
+            $slackMessage = "`[sent to $username]`\n" . $slackMessage;
 
             sendSlackMessageToNerdHerdTest($slackMessage, $emoji, $botName );
         } else {
@@ -90,7 +90,7 @@
     function sendSlackMessagePOST( $slackID, $emoji, $botName, $slackMessage, $bypassTestServer ) {
         
         if( $bypassTestServer == false && ( $_SERVER['SERVER_ADDR'] == "::1" || $_SERVER['SERVER_ADDR'] == "72.225.38.26" ) ) {
-            sendMessageToBot( "U1FEGH4U9", $emoji, $botName, $slackMessage, "#000000" );
+            sendMessageToBot( "U1FEGH4U9", $emoji, $botName, $slackMessage, "#000000", $slackID );
         } else {
 
             log_slack("Sending SlackBot/Channel Message:\nSlack ID: [" . $slackID . "]\nEmoji: [" . $emoji . "]\nBot Name: [" . $botName . "]\nMessage: [" . $slackMessage . "]" );
diff --git a/functions/ui_functions.php b/functions/ui_functions.php
index 1051aff..a4e561b 100644
--- a/functions/ui_functions.php
+++ b/functions/ui_functions.php
@@ -177,6 +177,14 @@ function DisplayShelfCan($itemID, $item_name, $thumbURL) {
     }
 }
 
+/**
+ * @param $db SQLite3
+ * @param $userID
+ * @param $monthNumber
+ * @param $year
+ * @param $monthLabel
+ * @return array
+ */
 function getTotalsForUser( $db, $userID, $monthNumber, $year, $monthLabel ) {
     $startDate = $year . "-" . $monthNumber . "-01";
     
@@ -194,33 +202,72 @@ function getTotalsForUser( $db, $userID, $monthNumber, $year, $monthLabel ) {
     $currentMonthSodaTotal = 0.0;
     $currentMonthSnackTotal = 0.0;
 
-    $query = "SELECT i.Name, i.Type, p.Cost, p.CashOnly, p.UseCredits, p.DiscountCost, p.Date, p.UserID FROM Purchase_History p JOIN Item i on p.itemID = i.ID WHERE p.UserID = $userID AND p.Date >= '$startDate' AND p.Date < '$endDate' AND p.Cancelled IS NULL ORDER BY p.Date DESC";
-    $results = $db->query( $query );
+    $query = "SELECT i.Name, i.Type, p.Cost as LegacyPrice, p.CashOnly, p.UseCredits, p.DiscountCost as LegacyDiscountPrice, p.Date, p.UserID, p.ItemDetailsID, d.Price, d.DiscountPrice " .
+        "FROM Purchase_History p " .
+        "JOIN Item i on p.itemID = i.ID " .
+        "LEFT JOIN Item_Details d on p.ItemDetailsID = d.ItemDetailsID " .
+        "WHERE p.UserID = :userID AND p.Date >= :startDate AND p.Date < :endDate AND p.Cancelled IS NULL " .
+        "ORDER BY p.Date DESC";
+
+    log_sql( "Payment Month: [$query]" );
+    $statement = $db->prepare( $query );
+    $statement->bindValue( ":userID", $userID );
+    $statement->bindValue( ":startDate", $startDate );
+    $statement->bindValue( ":endDate", $endDate );
+    $results = $statement->execute();
+
     while ($row = $results->fetchArray()) {
-        
-        $cost = 0.0;
-        if( $row['DiscountCost'] != "" && $row['DiscountCost'] != 0 ) {
-            $cost = $row['DiscountCost'];
+
+        $itemDetailsID =  $row['ItemDetailsID'];
+
+        $discountCost = $row['LegacyDiscountPrice'];
+        $fullCost = $row['LegacyPrice'];
+
+        if( $itemDetailsID != null ) {
+            $discountCost = $row['DiscountPrice'];
+            $fullCost = $row['Price'];
+        }
+
+        if( $discountCost != "" && $discountCost != 0 ) {
+            $cost = $discountCost;
         } else {
-            $cost = $row['Cost'];
+            $cost = $fullCost;
         }
         
         // Only purchases that WERE NOT cash-only go towards the total - because they already paid in cash
-        if( $row['CashOnly'] != 1 && $row['UseCredits'] == 0 ) {
+        if( $row['CashOnly'] != 1 ) {
+
+            $finalCost = $cost;
+
+            // Purchases that used credits might affect what was actually for balance
+            if( $row['UseCredits'] > 0 ) {
+                $finalCost -= $row["UseCredits"];
+            }
+
             if( $row['Type'] == "Snack" ) {
-                $currentMonthSnackTotal += $cost;
+                $currentMonthSnackTotal += $finalCost;
             } else if( $row['Type'] == "Soda" ) {
-                $currentMonthSodaTotal += $cost;
+                $currentMonthSodaTotal += $finalCost;
             }
         }
     }
     
-    $sodaQuery = "SELECT Sum(Amount) as 'TotalAmount' FROM Payments WHERE UserID = $userID AND MonthForPayment = '$monthLabel' AND ItemType='Soda' AND Cancelled IS NULL";
-    $sodaResults = $db->query($sodaQuery);
+    $sodaQuery = "SELECT Sum(Amount) as 'TotalAmount' FROM Payments WHERE UserID = :userID AND MonthForPayment = :monthLabel AND ItemType= :itemType AND Cancelled IS NULL";
+    $sodaStatement = $db->prepare( $sodaQuery );
+    $sodaStatement->bindValue( ":userID", $userID );
+    $sodaStatement->bindValue( ":monthLabel", $monthLabel );
+    $sodaStatement->bindValue( ":itemType", "Soda" );
+    $sodaResults = $sodaStatement->execute();
+
     $sodaTotalPaid = $sodaResults->fetchArray()['TotalAmount'];
     
-    $snackQuery = "SELECT Sum(Amount) as 'TotalAmount' FROM Payments WHERE UserID = $userID AND MonthForPayment = '$monthLabel' AND ItemType='Snack' AND Cancelled IS NULL";
-    $snackResults = $db->query($snackQuery);
+    $snackQuery = "SELECT Sum(Amount) as 'TotalAmount' FROM Payments WHERE UserID = :userID AND MonthForPayment = :monthLabel AND ItemType= :itemType AND Cancelled IS NULL";
+    $snackStatement = $db->prepare( $snackQuery );
+    $snackStatement->bindValue( ":userID", $userID );
+    $snackStatement->bindValue( ":monthLabel", $monthLabel );
+    $snackStatement->bindValue( ":itemType", "Snack" );
+    $snackResults = $snackStatement->execute();
+
     $snackTotalPaid = $snackResults->fetchArray()['TotalAmount'];
     
     $returnArray = array();
@@ -228,21 +275,29 @@ function getTotalsForUser( $db, $userID, $monthNumber, $year, $monthLabel ) {
     $returnArray['SnackTotal'] = $currentMonthSnackTotal;
     $returnArray['SodaPaid'] = $sodaTotalPaid;
     $returnArray['SnackPaid'] = $snackTotalPaid;
-    
+
+    log_debug( "Month [$monthLabel] User [$userID] Soda Total [$currentMonthSodaTotal] Snack Total [$currentMonthSnackTotal] Soda Paid: [$sodaTotalPaid] Snack Paid[$snackTotalPaid]" );
     return $returnArray;
 }
 
+/**
+ * @param $db SQLite3
+ * @param $checklistType
+ * @param $selectType
+ * @return mixed
+ */
 function getChecklistResults( $db, $checklistType, $selectType ) {
     $specialWhere = "";
-    $specialSelect = "ID, Type, Name, RefillTrigger, RestockTrigger, BackstockQuantity, ShelfQuantity, Price, Retired, Hidden, IsBought";
+    $specialSelect = "ID, Type, Name, RefillTrigger, RestockTrigger," . getQuantityQuery() .
+        ",Price, DiscountPrice, Retired, Hidden, IsBought";
 
     if( $selectType == "COUNT" ) {
-        $specialSelect = "COUNT(*) as Count";
+        $specialSelect = "COUNT(*) as Count," . getQuantityQuery();
     }
 
     if( $checklistType == "RefillTrigger" ) {
         // We don't care about refilling items that we dont have at the desk
-        $specialWhere = " AND BackstockQuantity > 0";
+        $specialWhere = " AND BackstockAmount > 0";
     } else if( $checklistType == "RestockTrigger" ) {
         // We don't care about discontinued items for store restock
         $specialWhere = " AND Retired != 1 ";
@@ -252,8 +307,8 @@ function getChecklistResults( $db, $checklistType, $selectType ) {
         $specialWhere .= " AND IsBought = 0 ";
     }
 
-    $query = "SELECT $specialSelect FROM Item WHERE Hidden != 1 AND $checklistType = 1 $specialWhere ORDER BY Type DESC, Retired, ShelfQuantity DESC";
-    return $db->query( $query );
+    $statement = $db->prepare( "SELECT $specialSelect FROM Item i WHERE Hidden != 1 AND $checklistType = 1 $specialWhere ORDER BY Type DESC, Retired, ShelfAmount DESC" );
+    return $statement->execute();
 }
 
 function getRefillCount($db) {
@@ -266,7 +321,8 @@ function getRestockCount($db) {
     return $row["Count"];
 }
 
-function drawCheckListRow( $isBought, $itemID, $itemName, $itemType, $shelfQuantity, $backstockQuantity, $isDiscontinued, $checklistType) {
+
+function drawCheckListRow( $isBought, $itemID, $itemName, $itemType, $shelfQuantity, $backstockQuantity, $isDiscontinued, $checklistType, $extraInfo) {
     $completedMark = "&#9746;";
     $completedMarkColor = "#6b1010";
 
@@ -286,7 +342,15 @@ function drawCheckListRow( $isBought, $itemID, $itemName, $itemType, $shelfQuant
     $onClick = " onclick='toggleCompleted( $itemID, \"$checklistType\" );'";
 
     echo "<td style='padding-left: 0px; font-size:1.6em; cursor:pointer; text-align:center; font-weight:bold; color: $completedMarkColor;'> <span$onClick>$completedMark </span></td>";
-    echo "<td style='color:$typeColor'>$itemName</td>";
+    echo "<td style='color:$typeColor'>";
+
+    echo "$itemName";
+
+    if( $extraInfo != "" ) {
+        echo "<br>$extraInfo";
+    }
+
+    echo "</td>";
     echo "<td style='color:$typeColor'>$itemType</td>";
     echo "<td style='color:$typeColor'>$shelfQuantity</td>";
     echo "<td style='color:$typeColor'>$backstockQuantity</td>";
diff --git a/lunch/lunch_index.php b/lunch/lunch_index.php
index 280f877..1bf37a9 100644
--- a/lunch/lunch_index.php
+++ b/lunch/lunch_index.php
@@ -1,7 +1,1268 @@
 <?php
-/**
- * Created by PhpStorm.
- * User: Matt
- * Date: 8/30/2019
- * Time: 12:48 AM
- */
\ No newline at end of file
+    function getLocations() {
+        $lunchSpotsArray = array();
+
+        array_push( $lunchSpotsArray, new Location(
+            "Amato's Cravings",
+            "Cr",
+            "Classics",
+            "Where the soul goes to die.",
+            "Not as amazing since the owners sold the business to Amato. Garbage plates and quesadillas are good. Much less food items than before.",
+            "Walking",
+            "43.154782",
+            "-77.617413",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Street Meat",
+            "Sm",
+            "Classics",
+            "Where the street goes to meet the meat.",
+            "Hotdog, Burger, and Gyro cart on Main Street.",
+            "Walking",
+            "43.155303",
+            "-77.613847",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Dogtown",
+            null,
+            "Classics",
+            "Where the dogs at!",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Marty's Meats",
+            null,
+            "Classics",
+            "Sandwiches with excellent meat.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Mi Barrio",
+            null,
+            "Mexican",
+            "On par with Selena's.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Neno's",
+            null,
+            "Mexican",
+            "Small seating on Monroe Ave. Does take-out.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Moe's",
+            null,
+            "Mexican",
+            "We're going to Mooooooooe's!!",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Chipotle",
+            null,
+            "Mexican",
+            "Like Mesa Grande with crappier ingredients.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "John's Tex Mex",
+            null,
+            "Mexican",
+            "I want grease with my grease.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Sol Buritto",
+            null,
+            "Mexican",
+            "Is this still a thing?",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Pizza Stop",
+            "Pi",
+            "Pizza",
+            "Best pizza in Rochester.",
+            null,
+            "Walking",
+            "43.157671",
+            "-77.614756",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Galleria Pizza",
+            "Ga",
+            "Pizza",
+            "It's got subs and chicken fingers too.",
+            null,
+            "Walking",
+            "43.155980",
+            "-77.612026",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Rhino's",
+            null,
+            "Pizza",
+            "Dill. Pickle. Pizza.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Napa Wood Fired Pizza",
+            null,
+            "Pizza",
+            "I feel like spending way too much money today.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Ken's Pizza Corner",
+            null,
+            "Pizza",
+            "On Monroe Ave.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Stromboli's",
+            null,
+            "Pizza",
+            "They do calzones.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Chester's Cab",
+            null,
+            "Pizza",
+            "It's near Marty's.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Pi-Craft",
+            null,
+            "Pizza",
+            "Build your own pizza!",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Dipisa's",
+            null,
+            "Sandwich",
+            "Best Subs in Rochester",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "T's Time Square",
+            "Ts",
+            "Sandwich",
+            "Good paninis.",
+            null,
+            "Walking",
+            "43.154583",
+            "-77.612133",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Sapori Cafe",
+            "Sa",
+            "Sandwich",
+            "In the powers building.",
+            null,
+            "Walking",
+            "43.155871",
+            "-77.613125",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Grill and Greens",
+            "GG",
+            "Sandwich",
+            "Do not recommend.",
+            null,
+            "Walking",
+            "43.156319",
+            "-77.613624",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Subway",
+            "Su",
+            "Sandwich",
+            "For when you just don't care anymore.",
+            null,
+            "Walking",
+            "43.155734",
+            "-77.611411",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Founders Cafe",
+            "Fo",
+            "Sandwich",
+            "Fancy, pricey sandwiches.",
+            null,
+            "Walking",
+            "43.154749",
+            "-77.614238",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Calabresella's on Park",
+            null,
+            "Sandwich",
+            "New.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "McCann's",
+            null,
+            "Sandwich",
+            "Amazing sandwiches in a butcher shop. Try the ramen on Wednesdays.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Harry G's",
+            null,
+            "Sandwich",
+            "On South Ave.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Wegmans",
+            null,
+            "Sandwich",
+            "You already go there for everything anyway.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Dibellas",
+            null,
+            "Sandwich",
+            "Same recipe as Wegmans.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Panera Bread",
+            null,
+            "Sandwich",
+            "They got food.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Mac's Philly",
+            null,
+            "Sandwich",
+            "The best cheesesteak. Large menu. Good seating. Nearby. Parking lot. Free WIFI.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Balsam's Bagels",
+            null,
+            "Sandwich",
+            "They have bagels.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Busy Bee",
+            "BB",
+            "Diners",
+            "Super cheap, simple food.",
+            null,
+            "Walking",
+            "43.154970",
+            "-77.616351",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Jim's on Main",
+            null,
+            "Diners",
+            "Quick service, good food, cash only, free wifi, off-street parking.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Burger King",
+            null,
+            "Fast Food",
+            "WHOPPER!! And the pickles. And the pickles.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Wendy's",
+            null,
+            "Fast Food",
+            "Mmmm frostys.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "McDonalds",
+            null,
+            "Fast Food",
+            "You just don't care anymore.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Arbys",
+            null,
+            "Fast Food",
+            "The curly fries!",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Taco Bell",
+            null,
+            "Fast Food",
+            "When you want regrets in a couple hours.",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Popeye's",
+            null,
+            "Fast Food",
+            "Damn good fried chicken.",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+
+        array_push( $lunchSpotsArray, new Location(
+            "The French Quarter",
+            null,
+            "Random",
+            "Excellent food, terrible service.",
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Nick Tahou's",
+            "NT",
+            "Random",
+            "It's been down the street from us for 5 years and we've only gone once. What does that tell you?",
+            null,
+            "Walking",
+            "43.153883",
+            "-77.621353",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Byblos Cafe",
+            "By",
+            "Random",
+            "Greek and gyros.",
+            null,
+            "Walking",
+            "43.155495",
+            "-77.612153",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Brooklyn Ramen",
+            null,
+            "Random",
+            "Very simple menu of just excellent ramen.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Sabra Grill",
+            null,
+            "Random",
+            "The last sighting of Aaron.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "The Empanada Shop",
+            null,
+            "Random",
+            "They sell empandas.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Nathan's Soup and Salad",
+            null,
+            "Random",
+            "Need to go to Henrietta now.",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Waffles",
+            null,
+            "RSA",
+            null,
+            "(Christian's Waffle Maker)",
+            "Very Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Pizza Quesadillas",
+            null,
+            "RSA",
+            null,
+            "(Matt's Quesadilla Maker)",
+            "Very Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Panini",
+            null,
+            "RSA",
+            null,
+            "(Nick's Panini Press)",
+            "Very Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "SEA Restaurant",
+            null,
+            "Sit Down",
+            null,
+            "Pho",
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Han's Chinese",
+            null,
+            "Sit Down",
+            null,
+            "RSA's Chinese Place",
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Szechuan Opera",
+            null,
+            "Sit Down",
+            null,
+            "RSA's BETTER Chinese Place",
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Salena's",
+            null,
+            "Sit Down",
+            "Must be Friday.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "The Distillery",
+            null,
+            "Sit Down",
+            "A Distillery.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Genesee Brewery",
+            null,
+            "Sit Down",
+            "A great view of the falls.",
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Dino BBQ",
+            null,
+            "Sit Down",
+            "We go here too much.",
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Plum House",
+            null,
+            "Sit Down",
+            "Sushi to go.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Jeramiah's",
+            null,
+            "Sit Down",
+            "A bar.",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Jeramiah's (Buffalo Road)",
+            null,
+            "Sit Down",
+            "Let's go meet Christian!",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Marshall Street",
+            null,
+            "Sit Down",
+            null,
+            "Bar with sandwiches, burgers, dillas, fried food.",
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Chen Garden",
+            null,
+            "Sit Down",
+            "Chinese",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Sinbad",
+            null,
+            "Sit Down",
+            "Mediterranean",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Shiki",
+            null,
+            "Sit Down",
+            "Sushi",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Abyssinia Resturant",
+            null,
+            "Sit Down",
+            "Ethiopian, No silverware, Eat with bread 'Injera', small staff - long wait",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Palmers",
+            null,
+            "Sit Down",
+            "They have a chicken sandwich. We went once.",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Duff's",
+            null,
+            "Sit Down",
+            "The Best Wings in Buffalo",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Soup Spoon",
+            null,
+            "Sit Down",
+            "What is this?",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Taste of Japan",
+            null,
+            "Sit Down",
+            "Unlimited Sushi and unlimited waiting for a check.",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Pita Pit",
+            null,
+            "Sit Down",
+            "Roll your food up into a taco.",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Tully's",
+            null,
+            "Sit Down",
+            "Get the Chicken Finger Dinner. Avoid the Mac Salad.",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Buffalo Wild Wings",
+            null,
+            "Sit Down",
+            "I think there is one left in Greece?",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Bill Grays",
+            null,
+            "Sit Down",
+            "World's Greatest Cheeseburger",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Osaka",
+            null,
+            "Sit Down",
+            "Unlimited Sushi",
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Matt's Snack Stock",
+            null,
+            "Classics",
+            "Get some soup. Help a local business.",
+            null,
+            "Very Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "White Castle",
+            null,
+            "Fast Food",
+            "When you don't plan on going back to work at all today.",
+            null,
+            "Very Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "In-n-Out Burger",
+            null,
+            "Fast Food",
+            "California - Airfare not included.",
+            null,
+            "Very Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "That Truck Outside",
+            null,
+            "Frontier-Only",
+            "Ice Cream",
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+
+        array_push( $lunchSpotsArray, new Location(
+            "J & R",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Executive Cafe",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Astoria",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+
+        array_push( $lunchSpotsArray, new Location(
+            "DiPisa's Old World Submarines (State Street)",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Great Harvest Bread Co.",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Mise en Place",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Pizza Hut",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Jimmy Johns",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Short",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Craving's Soul",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Funk n' Waffles",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Mesa Grande",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Long",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Hot Rosita's",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "El Sauza",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Stock Exchange Deli",
+            null,
+            "Permanently Closed",
+            null,
+            null,
+            "Walking",
+            null,
+            null,
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Food Truck - Cascade",
+            "FOOD TRUCK",
+            "Classics",
+            "In front of our building.",
+            null,
+            "Short",
+            "43.154835",
+            "-77.619214",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Food Truck - State Street",
+            "FOOD TRUCK",
+            "Classics",
+            "On State and Platt",
+            null,
+            "Short",
+            "43.160213",
+            "-77.617961",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Food Truck - BoE",
+            "FOOD TRUCK",
+            "Classics",
+            "On Plymouth and Broad",
+            null,
+            "Short",
+            "43.153902",
+            "-77.615184",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Food Truck - Midtown #1",
+            "FOOD TRUCK",
+            "Classics",
+            "On Elm Street",
+            null,
+            "Short",
+            "43.155948",
+            "-77.605541",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Food Truck - Midtown #2",
+            "FOOD TRUCK",
+            "Classics",
+            "On Elm Street",
+            null,
+            "Short",
+            "43.156070",
+            "-77.604941",
+            null
+        ) );
+
+        array_push( $lunchSpotsArray, new Location(
+            "Food Truck - Midtown #3",
+            "FOOD TRUCK",
+            "Classics",
+            "On Elm Street",
+            null,
+            "Short",
+            "43.156195",
+            "-77.604399",
+            null
+        ) );
+
+        return $lunchSpotsArray;
+    }
+
+    /**
+     * @param $placeA Location
+     * @param $placeB Location
+     * @return int
+     */
+    function cmp($placeA, $placeB) {
+        $placeACategoryValue = getCategoryValue( $placeA );
+        $placeBCategoryValue = getCategoryValue( $placeB );
+
+        if ( $placeACategoryValue == $placeBCategoryValue ) {
+
+            $placeADistanceValue = getDistanceValue( $placeA );
+            $placeBDistanceValue = getDistanceValue( $placeB );
+
+            if( $placeADistanceValue == $placeBDistanceValue ) {
+                if( $placeA->getName() > $placeB->getName()  ) {
+                    return 1;
+                } else {
+                    return -1;
+                }
+            } else {
+                return $placeADistanceValue - $placeBDistanceValue;
+            }
+        } else {
+            return $placeACategoryValue - $placeBCategoryValue;
+        }
+    }
+
+    /**
+     * @param $place Location
+     */
+    function getCategoryValue( $place ) {
+        $category = $place->getCategory();
+
+        switch( $category ) {
+            case "Classics":
+                return 1;
+            case "Mexican":
+                return 2;
+            case "Pizza":
+                return 3;
+            case "Sandwich":
+                return 4;
+            case "Diners":
+                return 5;
+            case "Fast Food":
+                return 6;
+            case "Random":
+                return 7;
+            case "RSA":
+                return 8;
+            case "Sit Down":
+                return 9;
+            case "Permanently Closed":
+                return 10;
+        }
+
+        return 999;
+    }
+
+    /**
+     * @param $place Location
+     */
+    function getDistanceValue( $place ) {
+        $distance = $place->getDistanceType();
+
+        switch( $distance ) {
+            case "Very Short":
+                return 1;
+            case "Walking":
+                return 2;
+            case "Short":
+                return 3;
+            case "Long":
+                return 4;
+            case "Very Long":
+                return 5;
+        }
+
+        return 999;
+    }
+?>
\ No newline at end of file
diff --git a/packed_server.zip b/packed_server.zip
index d5a3f71..c7a23e8 100644
Binary files a/packed_server.zip and b/packed_server.zip differ
diff --git a/preferences.php b/preferences.php
index 2fb0064..ebe8aaf 100644
--- a/preferences.php
+++ b/preferences.php
@@ -7,7 +7,10 @@
 ?>
 
 <?php
-    $results = $db->query("SELECT AnonName, ShowDiscontinued, ShowCashOnly, ShowCredit, SubscribeRestocks, ShowItemStats, ShowShelf, ShowTrending FROM User where UserID = " . $_SESSION['UserID'] );
+    $statement = $db->prepare("SELECT AnonName, ShowDiscontinued, ShowCashOnly, ShowCredit, SubscribeRestocks, ShowItemStats, ShowShelf, ShowTrending FROM User where UserID = :userID"  );
+    $statement->bindValue( ":userID", $_SESSION['UserID'] );
+    $results = $statement->execute();
+
     $row = $results->fetchArray();
     $showDiscontinuedChecked = $row['ShowDiscontinued'] == 1 ? "checked" : "";
     $showCashOnlyChecked = $row['ShowCashOnly'] == 1 ? "checked" : "";
diff --git a/purchase_history.php b/purchase_history.php
index d19a5b9..cd9ac45 100644
--- a/purchase_history.php
+++ b/purchase_history.php
@@ -1,4 +1,3 @@
-<head>
 <meta name="viewport" content="width=device-width, initial-scale=1">
 <script>
     function showHideMonths() {
@@ -56,23 +55,38 @@
     $totalSnackSavings = 0.0;
     $totalSnackBalance = 0.0;
 
-    $results = $db->query("SELECT p.Cost, i.Type, p.DiscountCost FROM Purchase_History p JOIN Item i on p.itemID = i.ID WHERE p.UserID = $userID AND Cancelled IS NULL");
+    $statement = $db->prepare( "SELECT d.Price, i.Type, d.DiscountPrice, d.ItemDetailsID, p.Cost as LegacyPrice, p.DiscountCost as LegacyDiscountPrice FROM Purchase_History p JOIN Item i on p.itemID = i.ID LEFT JOIN Item_Details d ON p.ItemDetailsID = d.ItemDetailsID WHERE p.UserID = :userID AND Cancelled IS NULL" );
+
+    $statement->bindValue(":userID", $userID );
+
+    $results = $statement->execute();
+
     while ($row = $results->fetchArray()) {
         $itemType = $row['Type'];
 
-        if( $row['DiscountCost'] != "" ) {
+        $itemDetailsID =  $row['ItemDetailsID'];
+
+        $discountCost = $row['LegacyDiscountPrice'];
+        $fullCost = $row['LegacyPrice'];
+
+        if( $itemDetailsID != null ) {
+            $discountCost = $row['DiscountPrice'];
+            $fullCost = $row['Price'];
+        }
+
+        if( $discountCost!= "" ) {
             if( $itemType == "Soda" ) {
-                $totalSodaSavings += ($row['Cost'] - $row['DiscountCost']);
-                $totalSodaBalance += $row['DiscountCost'];
+                $totalSodaSavings += ($fullCost - $discountCost);
+                $totalSodaBalance += $discountCost;
             } else if( $itemType == "Snack" ) {
-                $totalSnackSavings += ($row['Cost'] - $row['DiscountCost']);
-                $totalSnackBalance += $row['DiscountCost'];
+                $totalSnackSavings += ($fullCost -$discountCost);
+                $totalSnackBalance += $discountCost;
             }
         } else {
             if( $itemType == "Soda" ) {
-                $totalSodaBalance += $row['Cost'];
+                $totalSodaBalance += $fullCost;
             } else if( $itemType == "Snack" ) {
-                $totalSnackBalance += $row['Cost'];
+                $totalSnackBalance += $fullCost;
             }
         }
     }
@@ -83,7 +97,6 @@
     echo "<span style='color:#03af10'>The <b>Billing</b> section has been removed and condensed into this page.</span>";
     echo  "<span id='total_details_box'><b>Total Snack Spent:</b> ". getPriceDisplayWithDollars( $totalSnackBalance ) . "&nbsp;&nbsp;|&nbsp;&nbsp;<b>Total Snack Savings:</b> " . getPriceDisplayWithDollars( $totalSnackSavings ) . "</span>";
     echo "</div>";
-    
     echo "</div>";
 
 echo "<div class='center_piece'>";
@@ -124,7 +137,12 @@ $currentMonthSnackCashOnlyCount = 0;
 $currentMonth = 0;
 $currentYear = 0;
 
-$results = $db->query("SELECT i.Name, i.Type, p.Cost, p.CashOnly, p.DiscountCost, p.Date, p.UserID, p.UseCredits FROM Purchase_History p JOIN Item i on p.itemID = i.ID WHERE p.Cancelled IS NULL AND p.UserID = $userID ORDER BY p.Date DESC");
+
+$statement = $db->prepare( "SELECT i.Name, i.Type, d.Price, p.CashOnly, d.DiscountPrice, d.ItemDetailsID, p.Cost as LegacyPrice, p.DiscountCost as LegacyDiscountPrice, p.Date, p.UserID, p.UseCredits FROM Purchase_History p JOIN Item i on p.itemID = i.ID LEFT JOIN Item_Details d ON p.ItemDetailsID = d.ItemDetailsID WHERE p.Cancelled IS NULL AND p.UserID = :userID ORDER BY p.Date DESC" );
+
+$statement->bindValue(":userID", $userID );
+
+$results = $statement->execute();
 while ($row = $results->fetchArray()) {
     $purchaseDateObject = DateTime::createFromFormat( 'Y-m-d H:i:s', $row['Date'] );
     $purchaseMonthLabel = $purchaseDateObject->format('F Y');
@@ -163,23 +181,34 @@ while ($row = $results->fetchArray()) {
     }
 
     $cost = 0.0;
-    if( $row['DiscountCost'] != "" && $row['DiscountCost'] != 0 ) {
-        $cost = $row['DiscountCost'];
+    $itemDetailsID =  $row['ItemDetailsID'];
+
+    $discountCost = $row['LegacyDiscountPrice'];
+    $fullCost = $row['LegacyPrice'];
+
+    if( $itemDetailsID != null ) {
+        $discountCost = $row['DiscountPrice'];
+        $fullCost = $row['Price'];
+    }
+
+    if( $discountCost != "" && $discountCost != 0 ) {
+        $cost = $discountCost;
     } else {
-        $cost = $row['Cost'];
+        $cost = $fullCost;
     }
 
     $creditOrCashOnlyCost= 0;
     $balanceCost = 0;
 
     $creditsUsed = $row['UseCredits'];
-    $partialCreditsUsed = $cost - $creditsUsed;
+    $cashOnlyUsed = $row['CashOnly'];
+    $balanceWhenPartialCreditsUsed = $cost - $creditsUsed;
 
-    if( $partialCreditsUsed > 0 ) {
-        $balanceCost = $partialCreditsUsed;
-        $creditOrCashOnlyCost = $creditsUsed;
-    } else if( $row['CashOnly'] != 1 ) {
+    if( $cashOnlyUsed == 1 ) {
         $creditOrCashOnlyCost = $cost;
+    } else if( $balanceWhenPartialCreditsUsed > 0 ) {
+        $balanceCost = $balanceWhenPartialCreditsUsed;
+        $creditOrCashOnlyCost = $creditsUsed;
     } else if( $creditsUsed > 0 ) {
         $creditOrCashOnlyCost = $creditsUsed;
     }
@@ -189,9 +218,11 @@ while ($row = $results->fetchArray()) {
         if( $row['Type'] == "Snack" ) {
             $currentMonthSnackTotal += $balanceCost;
             $currentMonthSnackCount++;
+            log_debug( "Purchase Counts: [Snack] Balance: [$balanceCost] Count[$currentMonthSnackCount] New Total: [$currentMonthSnackTotal] Name: [" . $row['Name'] . "] Date: [" . $row['Date'] . "]" );
         } else if( $row['Type'] == "Soda" ) {
             $currentMonthSodaTotal += $balanceCost;
             $currentMonthSodaCount++;
+            log_debug( "Purchase Counts: [Soda] Balance: [$balanceCost] Count[$currentMonthSodaCount] New Total: [$currentMonthSodaTotal] Name: [" . $row['Name'] . "] Date: [" . $row['Date'] . "]" );
         }
     }
 
@@ -199,9 +230,11 @@ while ($row = $results->fetchArray()) {
         if( $row['Type'] == "Snack" ) {
             $currentMonthSnackCashOnlyTotal += $creditOrCashOnlyCost;
             $currentMonthSnackCashOnlyCount++;
+            log_debug( "Credit Counts: [Snack] Balance: [$creditOrCashOnlyCost] Count[$currentMonthSnackCashOnlyCount] New Total: [$currentMonthSnackCashOnlyTotal] Name: [" . $row['Name'] . "] Date: [" . $row['Date'] . "]" );
         } else if( $row['Type'] == "Soda" ) {
             $currentMonthSodaCashOnlyTotal += $creditOrCashOnlyCost;
             $currentMonthSodaCashOnlyCount++;
+            log_debug( "Credit Counts: [Soda] Balance: [$creditOrCashOnlyCost] Count[$currentMonthSodaCashOnlyCount] New Total: [$currentMonthSodaCashOnlyTotal] Name: [" . $row['Name'] . "] Date: [" . $row['Date'] . "]" );
         }
     }
 }
@@ -218,6 +251,10 @@ echo "</tr>";
 echo "</table>";
 echo "</div>";
 
+    $colSpan = 3;
+    if( IsAdminLoggedIn() ) {
+        $colSpan = 5;
+    }
 
     echo "<div style='margin-top:50px;' class='rounded_table_no_border'>";
     echo "<table>";
@@ -225,13 +262,17 @@ echo "</div>";
     echo "<thead>";
 
     echo "<tr>";
-    echo "<td style='text-align:center; background-color: #255420; color:#d8e41d; font-weight:bold; text-transform: uppercase;' colspan='3'>PURCHASE HISTORY - $monthHeader</td>";
+    echo "<td style='text-align:center; background-color: #255420; color:#d8e41d; font-weight:bold; text-transform: uppercase;' colspan='$colSpan'>PURCHASE HISTORY - $monthHeader</td>";
     echo "</tr>";
 
     echo "<tr class='table_header'>";
     echo "<th width='20%'>Date Purchased</th>";
     echo "<th>Item</th>";
     echo "<th>Cost</th>";
+    if( IsAdminLoggedIn() ) {
+        echo "<th>Retail Cost</th>";
+        echo "<th>Profit</th>";
+    }
     echo "</tr>";
 
     echo "</thead>";
@@ -252,7 +293,14 @@ echo "</div>";
     $endDate = $year . "-" . $monthNumber . "-01";
 
     // LEFT JOIN Item because Credits are ID 4000, and there is no corresponding Item in the Item table with that ID
-    $results = $db->query("SELECT p.itemID, i.Name, i.Type, p.Cancelled, p.Cost, p.DiscountCost, p.Date, p.UserID, p.CashOnly, p.UseCredits FROM Purchase_History p LEFT JOIN Item i on p.itemID = i.ID WHERE p.UserID = $userID AND p.Date >= '$startDate' AND p.Date < '$endDate' ORDER BY p.ID DESC");
+    $statement = $db->prepare( "SELECT p.itemID, i.Name, i.Type, p.Cancelled, d.Price, d.RetailPrice, d.DiscountPrice, d.ItemDetailsID, p.Cost as LegacyPrice, p.DiscountCost as LegacyDiscountPrice, p.Date, p.UserID, p.CashOnly, p.UseCredits FROM Purchase_History p LEFT JOIN Item i on p.itemID = i.ID LEFT JOIN Item_Details d ON p.ItemDetailsID = d.ItemDetailsID WHERE p.UserID = :userID AND p.Date >= :startDate AND p.Date < :endDate ORDER BY p.ID DESC" );
+
+    $statement->bindValue(":userID", $userID );
+    $statement->bindValue(":startDate", $startDate );
+    $statement->bindValue(":endDate", $endDate );
+
+    $results = $statement->execute();
+
     $currentWeek = "";
     while ($row = $results->fetchArray()) {
         $date_object = DateTime::createFromFormat('Y-m-d H:i:s', $row['Date']);
@@ -265,7 +313,7 @@ echo "</div>";
             if( $currentWeek != $weekOfPurchase ) {
                 // New week
                 echo "<tr>";
-                echo "<td class='section' colspan='3'>";
+                echo "<td class='section' colspan='$colSpan'>";
                 echo $weekOfPurchase;
                 echo "</td>";
                 echo "</tr>";
@@ -275,8 +323,19 @@ echo "</div>";
         }
         $isCancelled = $row['Cancelled'] === 1;
         $itemName = $row['Name'];
-        $discountAmountDisplay = getPriceDisplayWithDollars( $row['DiscountCost'] );
-        $costAmountDisplay = getPriceDisplayWithDollars( $row['Cost'] );
+
+        $itemDetailsID =  $row['ItemDetailsID'];
+
+        $discountCost = $row['LegacyDiscountPrice'];
+        $fullCost = $row['LegacyPrice'];
+
+        if( $itemDetailsID != null ) {
+            $discountCost = $row['DiscountPrice'];
+            $fullCost = $row['Price'];
+        }
+
+        $discountAmountDisplay = getPriceDisplayWithDollars( $discountCost );
+        $costAmountDisplay = getPriceDisplayWithDollars( $fullCost );
 
         if( $isCancelled ) {
             $discountAmountDisplay .= " (REFUNDED)";
@@ -285,10 +344,14 @@ echo "</div>";
 
         $costDisplay = "";
 
-        if( $row['DiscountCost'] != "" ) {
-            $costDisplay = "<span class='red_price'>" . getPriceDisplayWithDollars( $row['Cost'] ) . "</span>" . $discountAmountDisplay;
+        $cost = 0.0;
+
+        if( $discountCost != "" &&$discountCost != 0 ) {
+            $costDisplay = "<span class='red_price'>" . getPriceDisplayWithDollars( $fullCost ) . "</span>" . $discountAmountDisplay;
+            $cost = $discountCost;
         } else {
             $costDisplay = $costAmountDisplay;
+            $cost = $fullCost;
         }
 
         if( $row['CashOnly'] == 1 ) {
@@ -298,13 +361,11 @@ echo "</div>";
         if( $row['UseCredits'] > 0 ) {
             $partialCreditsLabel = "";
 
-            if( ( $row['DiscountCost'] != 0 && $row['UseCredits'] < $row['DiscountCost'] )
-                || ( $row['DiscountCost'] == 0 &&  $row['Cost'] != 0 &&  $row['UseCredits'] < $row['Cost'] ) ) {
+            if( ( $discountCost != 0 && $row['UseCredits'] < $discountCost )
+                || ( $discountCost == 0 &&  $fullCost != 0 &&  $row['UseCredits'] < $fullCost ) ) {
                 $partialCreditsLabel = " PARTIAL";
             }
 
-
-
             $costDisplay = $costDisplay . "<span style='float:right; font-weight: bold; color:#716e08;'>(WITH " . getPriceDisplayWithDollars( $row['UseCredits'] ) . "$partialCreditsLabel CREDITS)</span>";
         }
 
@@ -321,12 +382,14 @@ echo "</div>";
             $itemID = $row['ItemID'];
 
             if( $itemID == CREDIT_ID ) {
-                if( $row['Cost'] > 0 ) {
+                $creditDisplay = getPriceDisplayWithDollars( $row['LegacyPrice'] );
+
+                if( $row['LegacyPrice'] > 0 ) {
                     $rowClass = "class='add_credit_row'";
-                    $itemName = "Added Credits&nbsp;&nbsp;($costDisplay)";
+                    $itemName = "Added Credits&nbsp;&nbsp;($creditDisplay)";
                 } else {
                     $rowClass = "class='remove_credit_row'";
-                    $itemName = "Returned Credits&nbsp;&nbsp;($costDisplay)";
+                    $itemName = "Returned Credits&nbsp;&nbsp;($creditDisplay)";
                 }
 
                 $costDisplay = "---";
@@ -337,6 +400,13 @@ echo "</div>";
         echo "<td>" . $date_object->format('l m/d/Y  [h:i A]') . "</td>";
         echo "<td>" . $itemName . "</td>";
         echo "<td>" . $costDisplay ."</td>";
+
+        if( IsAdminLoggedIn() ) {
+            $retailPrice = $row['RetailPrice'];
+            $profit = $cost - $retailPrice;
+            echo "<td>" . getPriceDisplayWithDollars( $retailPrice ) . "</td>";
+            echo "<td>" . getPriceDisplayWithDollars( $profit ) . "</td>";
+        }
         echo "</tr>";
         
         if( $rowClass == "odd" ) { $rowClass = "even"; } else { $rowClass = "odd"; }
@@ -348,13 +418,34 @@ echo "</div>";
     echo "</div>";
 
 
+/**
+ * @param $db SQLite3
+ * @param $selectedMonthLink
+ * @param $currentMonthLink
+ * @param $userID
+ * @param $currentMonthLabel
+ * @param $currentMonthSodaTotal
+ * @param $currentMonthSnackTotal
+ * @param $currentMonthSodaCashOnlyTotal
+ * @param $currentMonthSnackCashOnlyTotal
+ * @param $currentMonthSodaCount
+ * @param $currentMonthSnackCount
+ * @param $currentMonthSodaCashOnlyCount
+ * @param $currentMonthSnackCashOnlyCount
+ */
 function printNewBillMonth( $db, $selectedMonthLink, $currentMonthLink, $userID, $currentMonthLabel,
                             $currentMonthSodaTotal, $currentMonthSnackTotal, $currentMonthSodaCashOnlyTotal, $currentMonthSnackCashOnlyTotal,
                             $currentMonthSodaCount, $currentMonthSnackCount, $currentMonthSodaCashOnlyCount, $currentMonthSnackCashOnlyCount ) {
 
     $totalPurchased = $currentMonthSodaTotal + $currentMonthSnackTotal;
 
-    $results = $db->query("SELECT Amount, Date, ItemType, Method FROM Payments WHERE UserID = $userID AND MonthForPayment = '$currentMonthLabel'  AND Cancelled is NULL ORDER BY Date DESC, ItemType ASC ");
+
+    $statement = $db->prepare( "SELECT Amount, Date, ItemType, Method FROM Payments WHERE UserID = :userID AND MonthForPayment = :currentMonthLabel  AND Cancelled is NULL ORDER BY Date DESC, ItemType ASC" );
+
+    $statement->bindValue(":userID", $userID );
+    $statement->bindValue(":currentMonthLabel", $currentMonthLabel );
+
+    $results = $statement->execute();
 
     $totalPaid = 0.0;
     $paymentDetails = "";
diff --git a/register.php b/register.php
index ac2d44c..29ea9c7 100644
--- a/register.php
+++ b/register.php
@@ -7,39 +7,7 @@
         $userMessage = "";
         $userError = "";
         
-        if( isset( $_POST['register_user'] ) ) {
-            
-            if( $_POST['UserName'] == "" || $_POST['Password'] == "" || $_POST['PasswordAgain'] == "" || $_POST['FirstName'] == "" || $_POST['LastName'] == "" ) {
-                $userError = "You must provide User Name, Password, First Name, and Last Name.";
-            } else if( $_POST['Password'] != $_POST['PasswordAgain'] ) {
-                $userError = "Passwords did not match.";
-            } else {
-                $username = $db->escapeString(trim($_POST["UserName"]));
-                $password_sha1 = sha1($_POST["Password"]);
-                $password_sha1 = sha1($_POST["PasswordAgain"]);
-                $firstName = $db->escapeString($_POST["FirstName"]);
-                $lastName = $db->escapeString($_POST["LastName"]);
-                $phoneNumber = "";
-                
-                if( isset( $_POST['PhoneNumber'] ) ) {
-                    $phoneNumber = $db->escapeString($_POST["PhoneNumber"]);
-                }
-                $date = date('Y-m-d H:i:s');
-                 
-                $results = $db->query("SELECT * FROM User WHERE UserName = '" . $username . "'");
-                
-                $userExists = $results->fetchArray() != false;
-                
-                if( $userExists ) {
-                    $userError = "User <b>$username</b> already exists!";
-                } else {
-                    $db->exec("INSERT INTO User (UserName, Password, FirstName, LastName, PhoneNumber, DateCreated, SodaBalance, SnackBalance, SodaSavings, SnackSavings, AnonName, IsCoop, Inactive, Credits, ShowDiscontinued, ShowCashOnly, ShowCredit, ShowItemStats, ShowShelf, SubscribeRestocks, ShowTrending) VALUES( '$username', '$password_sha1', '$firstName', '$lastName', '$phoneNumber', '$date', 0.00, 0.00, 0.00, 0.00, 'Penguin', 1, 0, 0.00, 0, 0, 0, 1, 0, 0, 1)");
-                    $userMessage = "Registration complete! User <b>$username</b> has been created.";
-                    
-                    sendSlackMessageToMatt( "*User Name:* " . $username . "\n*Name:* " . $firstName . " " . $lastName, ":busts_in_silhouette:", "NEW USER", "#b7ab1a" );
-                }
-            }
-        }
+
         
         if( $userError != "" ) {
                echo "<div style='text-align:center; padding:20px; font-size:1.2em; color:#FFF; border:3px solid #c71d1d; background-color:#de2c2c;'><span>$userError</span></div>";
@@ -50,7 +18,7 @@
         }
         
         echo "<div style='margin: 0 auto;' class='fancy'>";
-        echo "<form style='width:400px; margin: 0 auto;' id='add_item_form' enctype='multipart/form-data' action='" . REGISTER_LINK . "' method='POST'>";
+        echo "<form style='width:400px; margin: 0 auto;' id='add_item_form' enctype='multipart/form-data' action='" . HANDLE_FORMS_LINK . "' method='POST'>";
         
         echo "<fieldset style='padding:0px 20px 20px 20px; font-size:1.2em; color:#FFF; border:3px solid #1d6cc7; background-color:#2c7ede;'>";
         echo "<h1 style='text-align:center;'>Create an Account</h1>";
@@ -75,8 +43,10 @@
         echo "<label for='PhoneNumber'>Phone Number</label>";
         echo "<input style='width:100%;' class='text ui-widget-content ui-corner-all' type='text' autocorrect='off' autocapitalize='off' maxlength='20' name='PhoneNumber'>";
         echo "<span style='font-size:0.9em; color:#e9ef00; line-height:15px;'>If you are a co-op and you leave RSA without paying off your balance it would be nice if I could contact you. :p</span>";
-        
-        echo "<input type='hidden' name='register_user' value='register_user'/>";
+
+        echo "<input type='hidden' name='redirectURL' value='" . REGISTER_LINK . "'/>";
+
+        echo "<input type='hidden' name='RegisterUser' value='RegisterUser'/>";
         
         echo "<input class='ui-button' style='padding:10px; text-align:center; width:100%; margin: 40px 0px 0px 0px' type='submit' name='Register_User' value='Register'/><br>";
 
diff --git a/requests.php b/requests.php
index dea703d..edc2708 100644
--- a/requests.php
+++ b/requests.php
@@ -82,13 +82,18 @@
     echo "</div>";
 
     echo "<div id= 'container'>";
-    drawTable($db, $isLoggedInAdmin, "Requests", "'Soda','Snack'");
-    drawTable($db, $isLoggedInAdmin, "Feature Requests", "'Feature'");
-    drawTable($db, $isLoggedInAdmin, "Bug Reports", "'Bug'");
+    drawTable($db, $isLoggedInAdmin, "Requests", [ "Soda", "Snack" ] );
+    drawTable($db, $isLoggedInAdmin, "Feature Requests", [ "Feature" ] );
+    drawTable($db, $isLoggedInAdmin, "Bug Reports", [ "Bug" ] );
     echo "</div>";
 
-    
-    function drawTable( $db, $isLoggedInAdmin, $title, $type ) {
+/**
+ * @param $db SQLite3
+ * @param $isLoggedInAdmin
+ * @param $title
+ * @param $type
+ */
+    function drawTable( $db, $isLoggedInAdmin, $title, $typeArray ) {
         // ------------------------------------
         // REQUESTS TABLE
         // ------------------------------------
@@ -131,15 +136,20 @@
         
         echo "</tr></thead>";
 
-        $requestsQuery = "SELECT r.ID, r.Priority, r.Completed, r.DateCompleted, u.FirstName, u.LastName, r.ItemName, r.ItemType, r.Date, r.Note  FROM REQUESTS r JOIN User u ON r.UserID = u.UserID WHERE r.ItemType in (" . $type . ") " .
+        $requestsQuery = "SELECT r.ID, r.Priority, r.Completed, r.DateCompleted, u.FirstName, u.LastName, r.ItemName, r.ItemType, r.Date, r.Note " .
+            "FROM REQUESTS r JOIN User u ON r.UserID = u.UserID " .
+            "WHERE r.ItemType in " . getPrepareStatementForInClause( count( $typeArray ) ) .
             "ORDER BY " .
             "CASE WHEN Completed == 0 OR Completed IS NULL THEN 1 ELSE 2 END ASC, " .
             "CASE WHEN Completed = 1 THEN DateCompleted ELSE " .
             "CASE WHEN Priority = '' OR Priority = 'Unassigned' THEN '6' WHEN Priority = 'In Progress' THEN '5' WHEN Priority = 'Quick' THEN '4' WHEN Priority = 'High' THEN '3' WHEN Priority = 'Medium' THEN '2' ELSE '1' END " .
             "END DESC," .
             "r.Date DESC";
-//        log_sql( "REQUESTS [$requestsQuery]" );
-        $results = $db->query( $requestsQuery);
+        $statement = $db->prepare( $requestsQuery );
+        bindStatementsForInClause( $statement, $typeArray );
+
+        $results = $statement->execute();
+
         while ($row = $results->fetchArray()) {
             $completedMark = "&#9746;";
             $completedClass = "in_progress";
@@ -203,17 +213,17 @@
             
             echo "</td>";
             
-            echo "<td style='width:$column3Width%;'>" . $row['ItemName'] . "</td>";
+            echo "<td style='width:$column3Width%;'>" . strip_tags( $row['ItemName'] ) . "</td>";
             
             if( $title == "Requests" ) {
-                echo "<td class='hidden_mobile_column' style='width:$column4Width%;'>" . $row['ItemType'] . "</td>";
+                echo "<td class='hidden_mobile_column' style='width:$column4Width%;'>" . strip_tags ($row['ItemType'] ) . "</td>";
             }
             
             $fullName = $row['FirstName'] . " " . $row['LastName'];
             echo "<td class='hidden_mobile_column' style='width:$column5Width%;'>" . $fullName . "</td>";
             $date_object = DateTime::createFromFormat('Y-m-d H:i:s', $row['Date']);
             echo "<td class='hidden_mobile_column' style='width:$column6Width%;'>" . $date_object->format('m/d/Y  [h:i:s A]') . "$dateCompleted</td>";
-            echo "<td class='hidden_mobile_column' style='width:$column7Width%; word-break:break-word;'>" . $row['Note'] . "</td>";
+            echo "<td class='hidden_mobile_column' style='width:$column7Width%; word-break:break-word;'>" . strip_tags( $row['Note'] ) . "</td>";
             echo "</tr>";
         }
         
diff --git a/scripts/load_modals.js b/scripts/load_modals.js
index 1857e96..c6862a3 100644
--- a/scripts/load_modals.js
+++ b/scripts/load_modals.js
@@ -19,6 +19,11 @@ function loadItemModals(type) {
             $('#inventory_' + type).dialog('open');
              return false;
     });
+
+    $("#refill_" + type + "_button").click( function() {
+            $('#refill_' + type).dialog('open');
+             return false;
+    });
     
     $("#defective_item_" + type + "_button").click( function() {
         $('#defective_item_' + type).dialog('open');
@@ -115,6 +120,28 @@ function loadItemModals(type) {
                         }
                     ]
     });
+
+    $( "#refill_" + type ).dialog( {
+            autoOpen: false,
+            width: 800,
+            modal: true,
+            buttons: [
+                        {
+                            id: "Update_Item_" + type + "_Cancel",
+                            text: "Cancel",
+                            click: function() {
+                                $(this).dialog("close");
+                            }
+                        },
+                        {
+                            id:"Update_Item_" + type + "_Submit",
+                            text: "Update " + type,
+                            click: function() {
+                                $("#refill_" + type + "_form").submit();
+                            }
+                        }
+                    ]
+    });
     
     $( "#defective_item_" + type ).dialog( {
         autoOpen: false, 
diff --git a/stats.php b/stats.php
index 6fa12b7..286a7d3 100644
--- a/stats.php
+++ b/stats.php
@@ -1,6 +1,7 @@
 <?php
     include( "appendix.php" );
     include_once( LOG_FUNCTIONS_PATH );
+    include_once( QUANTITY_FUNCTIONS_PATH );
 
     $url = STATS_LINK;
     
@@ -18,26 +19,29 @@
         $endDate = $_POST['end_date'];
     }
     
-    $itemsToShow = "29,42,119";
+    $itemsToShow = [29,42,119];
     
     if(isset($_POST['submit_items'])){
         if(!empty($_POST['Item'])){
             // Loop to store and display values of individual checked checkbox.
-            $itemsToShow = implode(",", $_POST['Item'] );
+            $itemsToShow = $_POST['Item'];
         }
     }
 
     $itemNamesToShow = "";
     $db = new SQLite3( getDB() );
 
-    $statQuery = "SELECT Name FROM Item WHERE ID in ($itemsToShow) Order BY Type DESC, NAME ASC";
-    $results = $db->query( $statQuery );
+    $statQuery = "SELECT Name FROM Item WHERE ID in " . getPrepareStatementForInClause( count( $itemsToShow ) ) . " Order BY Type DESC, NAME ASC";
+    $statStatment = $db->prepare( $statQuery );
+    bindStatementsForInClause( $statStatment, $itemsToShow );
+    $results = $statStatment->execute();
+
     while ($row = $results->fetchArray()) {
         $itemNamesToShow .= $row['Name'] . ",";
     }
     
     $trackingName = "Stats - $startDate : $endDate [$itemNamesToShow]";
-    
+
     include( HEADER_PATH );
 ?>
 <script type="text/javascript">
@@ -70,8 +74,9 @@
     echo "<h1>Have an idea for a chart/graph? Let me know, I'll make it.</h1>";
     echo "<form enctype='multipart/form-data' action='" . STATS_LINK . "' method='POST' style='background-color:#b9b9b9; border:2px solid #000; padding:20px;' >";
     
-    $query = "SELECT ID, Name, Retired FROM Item WHERE Hidden != 1 Order BY Type DESC, NAME ASC";
-    $results = $db->query( $query );
+    $statement = $db->prepare( "SELECT ID, Name, Retired FROM Item WHERE Hidden != :hidden Order BY Type DESC, NAME ASC" );
+    $statement->bindValue( ":hidden", 1 );
+    $results =$statement->execute();
     
     //--------------------------------------------------------
     //--------------------------------------------------LAURIE DOESNT USE THE SITE THERE IS MISSING INFORMATION!!
@@ -151,8 +156,25 @@ window.onload = function() {
             dataPoints: [ 
 
                 <?php
-                $totalPurchasesTotalQuery = "select count(p.itemid) as 'count', sum(CASE WHEN DiscountCost IS NULL OR DiscountCost = 0 THEN Cost ELSE DiscountCost END) as 'totalCost', p.itemid, i.name as 'name', i.type as 'type' from purchase_history p JOIN item i on p.itemid = i.id where p.Date between '$startDate' AND '$endDate' AND p.Cancelled is NULL group by p.itemid order by totalcost asc";
-                $results = $db->query( $totalPurchasesTotalQuery );
+                $totalPurchasesTotalQuery = "SELECT count(p.itemid) as 'count', " .
+                    "sum(CASE " .
+                    "WHEN d.DiscountPrice IS NOT NULL AND d.DiscountPrice > 0 THEN d.DiscountPrice ".
+                    "WHEN d.Price IS NOT NULL THEN d.Price " .
+                    "WHEN p.DiscountCost IS NOT NULL AND p.DiscountCost > 0 THEN p.DiscountCost " .
+                    "WHEN p.Cost IS NOT NULL THEN p.Cost ".
+                    "ELSE 99999 END) as 'totalCost', " . // Make a bug very obvious if its not these cases
+                    "p.itemid, i.name as 'name', i.type as 'type' " .
+                    "FROM Purchase_History p " .
+                    "JOIN Item i on p.itemid = i.id  " .
+                    "LEFT JOIN Item_Details d on p.ItemDetailsID = d.ItemDetailsID  " .
+                    "WHERE p.Date BETWEEN :startDate AND :endDate AND p.Cancelled is NULL " .
+                    "GROUP BY p.itemid " .
+                    "ORDER BY totalcost asc";
+                $statement = $db->prepare( $totalPurchasesTotalQuery );
+                $statement->bindValue( ":startDate", $startDate );
+                $statement->bindValue( ":endDate", $endDate );
+                $results = $statement->execute();
+
                     while ($row = $results->fetchArray()) {
                         $itemName = $row['name'];
                         $count = $row['count'];
@@ -191,8 +213,25 @@ window.onload = function() {
             <?php
 //                  $anonNames = ['Rabbit', 'Koala', 'Panda', 'Cat', 'Dog', 'Mouse', 'Porcupine', 'Monkey', 'Giraffe', 'Dolphin', 'Jaguar', 'Seal', 'Deer', 'Penguin', 'Lamb', 'Owl', 'Kangaroo', 'Fox', 'Hamster', 'Lion' ];
                 $anonCount = 0;
-                $totalPurchasesByUserQuery = "select u.UserName, u.AnonName, u.FirstName, u.LastName, sum( CASE WHEN DiscountCost IS NULL OR DiscountCost = 0 THEN Cost ELSE DiscountCost END) as TheTotal, p.userID from Purchase_History p JOIN User u on p.UserID = u.UserID where p.cancelled is null and p.Date between '$startDate' AND '$endDate' group by u.UserID";
-                $results = $db->query( $totalPurchasesByUserQuery );
+                $totalPurchasesByUserQuery = "SELECT u.UserName, u.AnonName, u.FirstName, u.LastName, " .
+                "sum(CASE " .
+                    "WHEN d.DiscountPrice IS NOT NULL AND d.DiscountPrice > 0 THEN d.DiscountPrice ".
+                    "WHEN d.Price IS NOT NULL THEN d.Price " .
+                    "WHEN p.DiscountCost IS NOT NULL AND p.DiscountCost > 0 THEN p.DiscountCost " .
+                    "WHEN p.Cost IS NOT NULL THEN p.Cost ".
+                    "ELSE 99999 END) as 'TheTotal', " . // Make a bug very obvious if its not these cases
+                "p.userID " .
+                "FROM Purchase_History p " .
+                "JOIN User u on p.UserID = u.UserID " .
+                "LEFT JOIN Item_Details d ON p.ItemDetailsID = d.ItemDetailsID  " .
+                "WHERE p.cancelled is null and p.Date BETWEEN :startDate AND :endDate " .
+                "GROUP BY u.UserID " .
+                "ORDER BY TheTotal";
+                $totalPurchasesByUserStatement = $db->prepare( $totalPurchasesByUserQuery );
+                $totalPurchasesByUserStatement->bindValue( ":endDate", $endDate );
+                $totalPurchasesByUserStatement->bindValue( ":startDate", $startDate );
+                $results = $totalPurchasesByUserStatement->execute();
+
                 log_sql( "Total Purchases SQL: [$totalPurchasesByUserQuery]" );
                  
                 while ($row = $results->fetchArray()) {
@@ -230,8 +269,16 @@ window.onload = function() {
     echo "</tr>";
 
     $current_date = new DateTime();
-    $lastPurchaseByItemQuery = "select max(d.Date) as LastBought, i.Name as ItemName, i.Retired as Discontinued from Daily_Amount d JOIN Item i on d.ItemID = i.ID where d.ItemID in ($itemsToShow) and d.ShelfQuantityBefore > d.ShelfQuantity group by d.ItemID order by LastBought ASC";
-    $lastPurchaseByItemResults = $db->query( $lastPurchaseByItemQuery );
+    $lastPurchaseByItemQuery = "select max(d.Date) as LastBought, i.Name as ItemName, i.Retired as Discontinued " .
+     "FROM Inventory_History d " .
+     "JOIN Item i on d.ItemID = i.ID ".
+     "WHERE d.ItemID in " . getPrepareStatementForInClause( count( $itemsToShow ) ) . " and d.ShelfQuantityBefore > d.ShelfQuantity " .
+     "GROUP BY d.ItemID " .
+     "ORDER BY LastBought ASC";
+    $lastPurchaseByItemStatement = $db->prepare( $lastPurchaseByItemQuery );
+    bindStatementsForInClause( $lastPurchaseByItemStatement, $itemsToShow );
+    $lastPurchaseByItemResults = $lastPurchaseByItemStatement->execute();
+
     while ($lastPurchaseByItemRow = $lastPurchaseByItemResults->fetchArray()) {
         $itemName = $lastPurchaseByItemRow['ItemName'];
         $lastBought = $lastPurchaseByItemRow['LastBought'];
@@ -248,17 +295,25 @@ window.onload = function() {
 
 //     getData( $db, $itemsToShow, $isLoggedIn, $isLoggedInAdmin );
     echo "</div>";
-    
-    
-    
+
+
+/**
+ * @param $db SQLite3
+ * @param $itemsToShow
+ * @param $isLoggedIn
+ * @param $isLoggedInAdmin
+ */
     function getData( $db, $itemsToShow, $isLoggedIn, $isLoggedInAdmin ) {
-        $query = "select COUNT(p.ID) as TotalItems, i.Name, p.ItemID,
-           strftime(\"%m-%Y\", p.Date) as 'Time'
-           from Purchase_History p JOIN Item i on p.ItemID =  i.ID WHERE p.ItemID in ($itemsToShow) group by strftime(\"%m-%Y\", p.Date), p.ItemID ORDER BY p.ItemID, p.Date ASC";
-        $results = $db->query( $query );
-        
-        //echo "QUERY [ $query ]<br><br>";
-        
+        $query = "select COUNT(p.ID) as TotalItems, i.Name, p.ItemID, strftime(\"%m-%Y\", p.Date) as 'Time' " .
+            "FROM Purchase_History p " .
+            "JOIN Item i on p.ItemID =  i.ID " .
+            "WHERE p.ItemID in " . getPrepareStatementForInClause( count( $itemsToShow ) ) .
+            "GROUP BY strftime(\"%m-%Y\", p.Date), p.ItemID " .
+            "ORDER BY p.ItemID, p.Date ASC";
+        $statement = $db->prepare( $query );
+        bindStatementsForInClause( $statement, $itemsToShow );
+        $results = $statement->execute();
+
         $currentItem = -1;
         while ($row = $results->fetchArray()) {
             $totalItems = $row['TotalItems'];
@@ -270,9 +325,15 @@ window.onload = function() {
             $month = $splitDate[0];
             $year = $splitDate[1];
             
-            $userQuery = "select u.FirstName, u.LastName, u.UserName, u.AnonName, count(u.UserName) as UserCount from Purchase_History p JOIN User u ON p.userID = u.UserID WHERE p.ItemID = $itemID AND strftime(\"%m-%Y\", p.Date) = \"" . $month . "-" . $year . "\" GROUP BY u.UserName;";
-            $userResults = $db->query( $userQuery );
-            
+            $userQuery = "select u.FirstName, u.LastName, u.UserName, u.AnonName, count(u.UserName) as UserCount " .
+                "FROM Purchase_History p " .
+                "JOIN User u ON p.userID = u.UserID " .
+                "WHERE p.ItemID = :itemID AND strftime(\"%m-%Y\", p.Date) = :monthYear GROUP BY u.UserName;";
+            $userStatement = $db->prepare( $userQuery );
+            $userStatement->bindValue( ":itemID", $itemID );
+            $userStatement->bindValue( ":monthYear", $month . "-" . $year );
+            $userResults = $userStatement->execute();
+
             $hoverInfo = "";
             while ($userRow = $userResults->fetchArray()) {
                 $fullName = $userRow['FirstName'] . " " . $userRow['LastName'];
diff --git a/test_db/item.db b/test_db/item.db
deleted file mode 100644
index b18dde1..0000000
Binary files a/test_db/item.db and /dev/null differ
diff --git a/test_db/item_unit_testing b/test_db/item_unit_testing
deleted file mode 100644
index e69de29..0000000
diff --git a/test_db/item_unit_testing.db b/test_db/item_unit_testing.db
index 9e308a9..d7ba722 100644
Binary files a/test_db/item_unit_testing.db and b/test_db/item_unit_testing.db differ
